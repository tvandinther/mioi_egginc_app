// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.ei.ActionKeyValuePair', null, global);
goog.exportSymbol('proto.ei.AdAttributionInfo', null, global);
goog.exportSymbol('proto.ei.AdAttributionRawData', null, global);
goog.exportSymbol('proto.ei.AdAttributionRow', null, global);
goog.exportSymbol('proto.ei.AppInfo', null, global);
goog.exportSymbol('proto.ei.AutoJoinCoopRequest', null, global);
goog.exportSymbol('proto.ei.Backup', null, global);
goog.exportSymbol('proto.ei.Backup.AchievementInfo', null, global);
goog.exportSymbol('proto.ei.Backup.ActiveBoost', null, global);
goog.exportSymbol('proto.ei.Backup.Game', null, global);
goog.exportSymbol('proto.ei.Backup.Misc', null, global);
goog.exportSymbol('proto.ei.Backup.Mission', null, global);
goog.exportSymbol('proto.ei.Backup.MissionInfo', null, global);
goog.exportSymbol('proto.ei.Backup.NewsHeadline', null, global);
goog.exportSymbol('proto.ei.Backup.OwnedBoost', null, global);
goog.exportSymbol('proto.ei.Backup.ResearchItem', null, global);
goog.exportSymbol('proto.ei.Backup.Settings', null, global);
goog.exportSymbol('proto.ei.Backup.Simulation', null, global);
goog.exportSymbol('proto.ei.Backup.Stats', null, global);
goog.exportSymbol('proto.ei.Backup.Tutorial', null, global);
goog.exportSymbol('proto.ei.ClearAllUserDataRequest', null, global);
goog.exportSymbol('proto.ei.Contract', null, global);
goog.exportSymbol('proto.ei.Contract.Goal', null, global);
goog.exportSymbol('proto.ei.Contract.GoalSet', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusRequest', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.ContributionInfo', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusResponse.CoopGift', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusUpdateRequest', null, global);
goog.exportSymbol('proto.ei.ContractCoopStatusUpdateResponse', null, global);
goog.exportSymbol('proto.ei.ContractsRequest', null, global);
goog.exportSymbol('proto.ei.ContractsResponse', null, global);
goog.exportSymbol('proto.ei.CreateCoopRequest', null, global);
goog.exportSymbol('proto.ei.CreateCoopResponse', null, global);
goog.exportSymbol('proto.ei.DailyGiftInfo', null, global);
goog.exportSymbol('proto.ei.DeviceInfo', null, global);
goog.exportSymbol('proto.ei.Egg', null, global);
goog.exportSymbol('proto.ei.EggIncAdConfig', null, global);
goog.exportSymbol('proto.ei.EggIncCurrentEvents', null, global);
goog.exportSymbol('proto.ei.EggIncEvent', null, global);
goog.exportSymbol('proto.ei.EggIncFirstContactRequest', null, global);
goog.exportSymbol('proto.ei.EggIncFirstContactResponse', null, global);
goog.exportSymbol('proto.ei.FarmType', null, global);
goog.exportSymbol('proto.ei.GenericAction', null, global);
goog.exportSymbol('proto.ei.GetPeriodicalsRequest', null, global);
goog.exportSymbol('proto.ei.GiftPlayerCoopRequest', null, global);
goog.exportSymbol('proto.ei.GoalType', null, global);
goog.exportSymbol('proto.ei.IAPSaleEntry', null, global);
goog.exportSymbol('proto.ei.JoinCoopRequest', null, global);
goog.exportSymbol('proto.ei.JoinCoopResponse', null, global);
goog.exportSymbol('proto.ei.KickPlayerCoopRequest', null, global);
goog.exportSymbol('proto.ei.LeaveCoopRequest', null, global);
goog.exportSymbol('proto.ei.LocalContract', null, global);
goog.exportSymbol('proto.ei.MyContracts', null, global);
goog.exportSymbol('proto.ei.PeriodicalsResponse', null, global);
goog.exportSymbol('proto.ei.QueryCoopRequest', null, global);
goog.exportSymbol('proto.ei.QueryCoopResponse', null, global);
goog.exportSymbol('proto.ei.RewardType', null, global);
goog.exportSymbol('proto.ei.SalesInfo', null, global);
goog.exportSymbol('proto.ei.SalesInfoRequest', null, global);
goog.exportSymbol('proto.ei.ServerGift', null, global);
goog.exportSymbol('proto.ei.UpdateCoopPermissionsRequest', null, global);
goog.exportSymbol('proto.ei.UpdateCoopPermissionsResponse', null, global);
goog.exportSymbol('proto.ei.UserDataInfoRequest', null, global);
goog.exportSymbol('proto.ei.UserDataInfoResponse', null, global);
goog.exportSymbol('proto.ei.VerifyPurchaseRequest', null, global);
goog.exportSymbol('proto.ei.VerifyPurchaseResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.displayName = 'proto.ei.Backup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Settings.displayName = 'proto.ei.Backup.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Tutorial = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.Tutorial, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Tutorial.displayName = 'proto.ei.Backup.Tutorial';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Stats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Stats.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Stats.displayName = 'proto.ei.Backup.Stats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.ResearchItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.ResearchItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.ResearchItem.displayName = 'proto.ei.Backup.ResearchItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.NewsHeadline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.NewsHeadline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.NewsHeadline.displayName = 'proto.ei.Backup.NewsHeadline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.AchievementInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.AchievementInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.AchievementInfo.displayName = 'proto.ei.Backup.AchievementInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.ActiveBoost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.ActiveBoost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.ActiveBoost.displayName = 'proto.ei.Backup.ActiveBoost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.OwnedBoost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.OwnedBoost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.OwnedBoost.displayName = 'proto.ei.Backup.OwnedBoost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Game = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Game.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Game, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Game.displayName = 'proto.ei.Backup.Game';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Simulation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Simulation.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Simulation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Simulation.displayName = 'proto.ei.Backup.Simulation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.MissionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.MissionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.MissionInfo.displayName = 'proto.ei.Backup.MissionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Mission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Backup.Mission.repeatedFields_, null);
};
goog.inherits(proto.ei.Backup.Mission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Mission.displayName = 'proto.ei.Backup.Mission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Backup.Misc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Backup.Misc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Backup.Misc.displayName = 'proto.ei.Backup.Misc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncFirstContactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.EggIncFirstContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncFirstContactRequest.displayName = 'proto.ei.EggIncFirstContactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncFirstContactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.EggIncFirstContactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncFirstContactResponse.displayName = 'proto.ei.EggIncFirstContactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncAdConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.EggIncAdConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.EggIncAdConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncAdConfig.displayName = 'proto.ei.EggIncAdConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DailyGiftInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.DailyGiftInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DailyGiftInfo.displayName = 'proto.ei.DailyGiftInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SalesInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.SalesInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SalesInfoRequest.displayName = 'proto.ei.SalesInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.IAPSaleEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.IAPSaleEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.IAPSaleEntry.displayName = 'proto.ei.IAPSaleEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.SalesInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.SalesInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.SalesInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.SalesInfo.displayName = 'proto.ei.SalesInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.EggIncEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncEvent.displayName = 'proto.ei.EggIncEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.EggIncCurrentEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.EggIncCurrentEvents.repeatedFields_, null);
};
goog.inherits(proto.ei.EggIncCurrentEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.EggIncCurrentEvents.displayName = 'proto.ei.EggIncCurrentEvents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DeviceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.DeviceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DeviceInfo.displayName = 'proto.ei.DeviceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AppInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AppInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AppInfo.displayName = 'proto.ei.AppInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ActionKeyValuePair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ActionKeyValuePair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ActionKeyValuePair.displayName = 'proto.ei.ActionKeyValuePair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GenericAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.GenericAction.repeatedFields_, null);
};
goog.inherits(proto.ei.GenericAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GenericAction.displayName = 'proto.ei.GenericAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.VerifyPurchaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.VerifyPurchaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.VerifyPurchaseRequest.displayName = 'proto.ei.VerifyPurchaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.VerifyPurchaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.VerifyPurchaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.VerifyPurchaseResponse.displayName = 'proto.ei.VerifyPurchaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.displayName = 'proto.ei.Contract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.Goal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Contract.Goal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.Goal.displayName = 'proto.ei.Contract.Goal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.GoalSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.GoalSet.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract.GoalSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.GoalSet.displayName = 'proto.ei.Contract.GoalSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractsRequest.displayName = 'proto.ei.ContractsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractsResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractsResponse.displayName = 'proto.ei.ContractsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusRequest.displayName = 'proto.ei.ContractCoopStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractCoopStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.displayName = 'proto.ei.ContractCoopStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse.CoopGift = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse.CoopGift, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.CoopGift.displayName = 'proto.ei.ContractCoopStatusResponse.CoopGift';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusResponse.ContributionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusResponse.ContributionInfo.displayName = 'proto.ei.ContractCoopStatusResponse.ContributionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LocalContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LocalContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LocalContract.displayName = 'proto.ei.LocalContract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MyContracts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.MyContracts.repeatedFields_, null);
};
goog.inherits(proto.ei.MyContracts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MyContracts.displayName = 'proto.ei.MyContracts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.QueryCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.QueryCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.QueryCoopRequest.displayName = 'proto.ei.QueryCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.QueryCoopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.QueryCoopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.QueryCoopResponse.displayName = 'proto.ei.QueryCoopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CreateCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CreateCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CreateCoopRequest.displayName = 'proto.ei.CreateCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.CreateCoopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.CreateCoopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.CreateCoopResponse.displayName = 'proto.ei.CreateCoopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.JoinCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.JoinCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.JoinCoopRequest.displayName = 'proto.ei.JoinCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.JoinCoopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.JoinCoopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.JoinCoopResponse.displayName = 'proto.ei.JoinCoopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AutoJoinCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AutoJoinCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AutoJoinCoopRequest.displayName = 'proto.ei.AutoJoinCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UpdateCoopPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UpdateCoopPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UpdateCoopPermissionsRequest.displayName = 'proto.ei.UpdateCoopPermissionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UpdateCoopPermissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UpdateCoopPermissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UpdateCoopPermissionsResponse.displayName = 'proto.ei.UpdateCoopPermissionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaveCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaveCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaveCoopRequest.displayName = 'proto.ei.LeaveCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GiftPlayerCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.GiftPlayerCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GiftPlayerCoopRequest.displayName = 'proto.ei.GiftPlayerCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.KickPlayerCoopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.KickPlayerCoopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.KickPlayerCoopRequest.displayName = 'proto.ei.KickPlayerCoopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusUpdateRequest.displayName = 'proto.ei.ContractCoopStatusUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractCoopStatusUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractCoopStatusUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractCoopStatusUpdateResponse.displayName = 'proto.ei.ContractCoopStatusUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserDataInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UserDataInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserDataInfoRequest.displayName = 'proto.ei.UserDataInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserDataInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.UserDataInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.UserDataInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserDataInfoResponse.displayName = 'proto.ei.UserDataInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ClearAllUserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ClearAllUserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ClearAllUserDataRequest.displayName = 'proto.ei.ClearAllUserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ServerGift = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ServerGift, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ServerGift.displayName = 'proto.ei.ServerGift';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.PeriodicalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.PeriodicalsResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.PeriodicalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.PeriodicalsResponse.displayName = 'proto.ei.PeriodicalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.GetPeriodicalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.GetPeriodicalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.GetPeriodicalsRequest.displayName = 'proto.ei.GetPeriodicalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AdAttributionRawData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AdAttributionRawData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AdAttributionRawData.displayName = 'proto.ei.AdAttributionRawData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AdAttributionRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AdAttributionRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AdAttributionRow.displayName = 'proto.ei.AdAttributionRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.AdAttributionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.AdAttributionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.AdAttributionInfo.displayName = 'proto.ei.AdAttributionInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    version: jspb.Message.getFieldWithDefault(msg, 21, 0),
    forceOfferBackup: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    forceBackup: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    settings: (f = msg.getSettings()) && proto.ei.Backup.Settings.toObject(includeInstance, f),
    tutorial: (f = msg.getTutorial()) && proto.ei.Backup.Tutorial.toObject(includeInstance, f),
    stats: (f = msg.getStats()) && proto.ei.Backup.Stats.toObject(includeInstance, f),
    game: (f = msg.getGame()) && proto.ei.Backup.Game.toObject(includeInstance, f),
    sim: (f = msg.getSim()) && proto.ei.Backup.Simulation.toObject(includeInstance, f),
    farmsList: jspb.Message.toObjectList(msg.getFarmsList(),
    proto.ei.Backup.Simulation.toObject, includeInstance),
    mission: (f = msg.getMission()) && proto.ei.Backup.Mission.toObject(includeInstance, f),
    misc: (f = msg.getMisc()) && proto.ei.Backup.Misc.toObject(includeInstance, f),
    contracts: (f = msg.getContracts()) && proto.ei.MyContracts.toObject(includeInstance, f),
    checksum: (f = jspb.Message.getField(msg, 100)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup}
 */
proto.ei.Backup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup;
  return proto.ei.Backup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup}
 */
proto.ei.Backup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTime(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceOfferBackup(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceBackup(value);
      break;
    case 4:
      var value = new proto.ei.Backup.Settings;
      reader.readMessage(value,proto.ei.Backup.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 5:
      var value = new proto.ei.Backup.Tutorial;
      reader.readMessage(value,proto.ei.Backup.Tutorial.deserializeBinaryFromReader);
      msg.setTutorial(value);
      break;
    case 6:
      var value = new proto.ei.Backup.Stats;
      reader.readMessage(value,proto.ei.Backup.Stats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    case 7:
      var value = new proto.ei.Backup.Game;
      reader.readMessage(value,proto.ei.Backup.Game.deserializeBinaryFromReader);
      msg.setGame(value);
      break;
    case 8:
      var value = new proto.ei.Backup.Simulation;
      reader.readMessage(value,proto.ei.Backup.Simulation.deserializeBinaryFromReader);
      msg.setSim(value);
      break;
    case 12:
      var value = new proto.ei.Backup.Simulation;
      reader.readMessage(value,proto.ei.Backup.Simulation.deserializeBinaryFromReader);
      msg.addFarms(value);
      break;
    case 9:
      var value = new proto.ei.Backup.Mission;
      reader.readMessage(value,proto.ei.Backup.Mission.deserializeBinaryFromReader);
      msg.setMission(value);
      break;
    case 10:
      var value = new proto.ei.Backup.Misc;
      reader.readMessage(value,proto.ei.Backup.Misc.deserializeBinaryFromReader);
      msg.setMisc(value);
      break;
    case 13:
      var value = new proto.ei.MyContracts;
      reader.readMessage(value,proto.ei.MyContracts.deserializeBinaryFromReader);
      msg.setContracts(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.Backup.Settings.serializeBinaryToWriter
    );
  }
  f = message.getTutorial();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.Backup.Tutorial.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.Backup.Stats.serializeBinaryToWriter
    );
  }
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ei.Backup.Game.serializeBinaryToWriter
    );
  }
  f = message.getSim();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ei.Backup.Simulation.serializeBinaryToWriter
    );
  }
  f = message.getFarmsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.ei.Backup.Simulation.serializeBinaryToWriter
    );
  }
  f = message.getMission();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ei.Backup.Mission.serializeBinaryToWriter
    );
  }
  f = message.getMisc();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ei.Backup.Misc.serializeBinaryToWriter
    );
  }
  f = message.getContracts();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.ei.MyContracts.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 100));
  if (f != null) {
    writer.writeUint64(
      100,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    sfx: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    music: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    lowBatteryMode: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    lowPerformanceMode: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    forceTouchChickenBtn: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    notificationsQueried: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    notificationsOn: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    notifyDailyGift: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    coppaQueried: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    coppaRestricted: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    gdprConsentQueried: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    gdprAgeRestricted: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    gdprConsentGiven: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    ageQueried: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    ageRestricted: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    dataCollectionConsentQueried: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    dataCollectionConsentGiven: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
    lastDayAgeQueried: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    userAdsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 14, true),
    userCloudEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 15, true),
    userAnalyticsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 22, true),
    userPersonalizedAdsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 23, true),
    lowPerformance: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    lastBackupTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Settings}
 */
proto.ei.Backup.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Settings;
  return proto.ei.Backup.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Settings}
 */
proto.ei.Backup.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSfx(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMusic(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowBatteryMode(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowPerformanceMode(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceTouchChickenBtn(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotificationsQueried(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotificationsOn(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotifyDailyGift(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoppaQueried(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoppaRestricted(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGdprConsentQueried(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGdprAgeRestricted(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGdprConsentGiven(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgeQueried(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgeRestricted(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataCollectionConsentQueried(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataCollectionConsentGiven(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastDayAgeQueried(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserAdsEnabled(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserCloudEnabled(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserAnalyticsEnabled(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserPersonalizedAdsEnabled(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLowPerformance(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastBackupTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
};


/**
 * optional bool sfx = 1;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getSfx = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setSfx = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearSfx = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasSfx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool music = 2;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getMusic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setMusic = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearMusic = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasMusic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool low_battery_mode = 3;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getLowBatteryMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setLowBatteryMode = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearLowBatteryMode = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLowBatteryMode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool low_performance_mode = 4;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getLowPerformanceMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setLowPerformanceMode = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearLowPerformanceMode = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLowPerformanceMode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool force_touch_chicken_btn = 9;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getForceTouchChickenBtn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setForceTouchChickenBtn = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearForceTouchChickenBtn = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasForceTouchChickenBtn = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool notifications_queried = 5;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getNotificationsQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setNotificationsQueried = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearNotificationsQueried = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasNotificationsQueried = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool notifications_on = 6;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getNotificationsOn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setNotificationsOn = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearNotificationsOn = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasNotificationsOn = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool notify_daily_gift = 11;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getNotifyDailyGift = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setNotifyDailyGift = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearNotifyDailyGift = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasNotifyDailyGift = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool coppa_queried = 7;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getCoppaQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setCoppaQueried = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearCoppaQueried = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasCoppaQueried = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool coppa_restricted = 8;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getCoppaRestricted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setCoppaRestricted = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearCoppaRestricted = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasCoppaRestricted = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool gdpr_consent_queried = 12;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getGdprConsentQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setGdprConsentQueried = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearGdprConsentQueried = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasGdprConsentQueried = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool gdpr_age_restricted = 16;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getGdprAgeRestricted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setGdprAgeRestricted = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearGdprAgeRestricted = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasGdprAgeRestricted = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool gdpr_consent_given = 13;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getGdprConsentGiven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setGdprConsentGiven = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearGdprConsentGiven = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasGdprConsentGiven = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool age_queried = 18;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getAgeQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setAgeQueried = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearAgeQueried = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasAgeQueried = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool age_restricted = 19;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getAgeRestricted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setAgeRestricted = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearAgeRestricted = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasAgeRestricted = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool data_collection_consent_queried = 20;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getDataCollectionConsentQueried = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setDataCollectionConsentQueried = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearDataCollectionConsentQueried = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasDataCollectionConsentQueried = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool data_collection_consent_given = 21;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getDataCollectionConsentGiven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setDataCollectionConsentGiven = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearDataCollectionConsentGiven = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasDataCollectionConsentGiven = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 last_day_age_queried = 17;
 * @return {number}
 */
proto.ei.Backup.Settings.prototype.getLastDayAgeQueried = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.ei.Backup.Settings.prototype.setLastDayAgeQueried = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearLastDayAgeQueried = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLastDayAgeQueried = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool user_ads_enabled = 14;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserAdsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, true));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setUserAdsEnabled = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearUserAdsEnabled = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserAdsEnabled = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool user_cloud_enabled = 15;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserCloudEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, true));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setUserCloudEnabled = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearUserCloudEnabled = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserCloudEnabled = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool user_analytics_enabled = 22;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserAnalyticsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, true));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setUserAnalyticsEnabled = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearUserAnalyticsEnabled = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserAnalyticsEnabled = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool user_personalized_ads_enabled = 23;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getUserPersonalizedAdsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, true));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setUserPersonalizedAdsEnabled = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearUserPersonalizedAdsEnabled = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasUserPersonalizedAdsEnabled = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool low_performance = 10;
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.getLowPerformance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.ei.Backup.Settings.prototype.setLowPerformance = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearLowPerformance = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLowPerformance = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double last_backup_time = 24;
 * @return {number}
 */
proto.ei.Backup.Settings.prototype.getLastBackupTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Settings.prototype.setLastBackupTime = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Settings.prototype.clearLastBackupTime = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Settings.prototype.hasLastBackupTime = function() {
  return jspb.Message.getField(this, 24) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Tutorial.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Tutorial.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Tutorial} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Tutorial.toObject = function(includeInstance, msg) {
  var f, obj = {
    introShown: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    clickTutorialShown: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    buyHabShown: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    hireVehicleShown: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    qNumShown: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    sNumShown: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    contractsTabShown: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    contractInfoShown: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    joinCoopShown: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    switchFarmShown: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Tutorial}
 */
proto.ei.Backup.Tutorial.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Tutorial;
  return proto.ei.Backup.Tutorial.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Tutorial} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Tutorial}
 */
proto.ei.Backup.Tutorial.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntroShown(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClickTutorialShown(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuyHabShown(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHireVehicleShown(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQNumShown(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSNumShown(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsTabShown(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractInfoShown(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJoinCoopShown(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwitchFarmShown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Tutorial.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Tutorial.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Tutorial} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Tutorial.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional bool intro_shown = 1;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getIntroShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setIntroShown = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearIntroShown = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasIntroShown = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool click_tutorial_shown = 2;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getClickTutorialShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setClickTutorialShown = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearClickTutorialShown = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasClickTutorialShown = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool buy_hab_shown = 3;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getBuyHabShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setBuyHabShown = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearBuyHabShown = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasBuyHabShown = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool hire_vehicle_shown = 4;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getHireVehicleShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setHireVehicleShown = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearHireVehicleShown = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasHireVehicleShown = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool q_num_shown = 5;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getQNumShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setQNumShown = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearQNumShown = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasQNumShown = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool s_num_shown = 6;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getSNumShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setSNumShown = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearSNumShown = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasSNumShown = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool contracts_tab_shown = 7;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getContractsTabShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setContractsTabShown = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearContractsTabShown = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasContractsTabShown = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool contract_info_shown = 8;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getContractInfoShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setContractInfoShown = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearContractInfoShown = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasContractInfoShown = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool join_coop_shown = 9;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getJoinCoopShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setJoinCoopShown = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearJoinCoopShown = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasJoinCoopShown = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool switch_farm_shown = 10;
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.getSwitchFarmShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.ei.Backup.Tutorial.prototype.setSwitchFarmShown = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Tutorial.prototype.clearSwitchFarmShown = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Tutorial.prototype.hasSwitchFarmShown = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Stats.repeatedFields_ = [1,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Stats.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Stats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Stats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Stats.toObject = function(includeInstance, msg) {
  var f, obj = {
    eggTotalsOldList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    eggTotalsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    unlimitedChickensUses: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    refillUses: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    warp1Uses: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    warp8Uses: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    boostsUsed: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    videoDoublerUses: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    droneTakedowns: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    droneTakedownsElite: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    numPrestiges: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    numPiggyBreaks: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    iapPacksPurchased: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    timePiggyFilledRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    timePiggyFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    lostPiggyIncrements: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Stats}
 */
proto.ei.Backup.Stats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Stats;
  return proto.ei.Backup.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Stats}
 */
proto.ei.Backup.Stats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addEggTotalsOld(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.addEggTotals(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnlimitedChickensUses(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefillUses(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWarp1Uses(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWarp8Uses(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBoostsUsed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVideoDoublerUses(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedowns(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedownsElite(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPrestiges(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPiggyBreaks(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIapPacksPurchased(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFilledRealtime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFullGametime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLostPiggyIncrements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Stats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Stats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Stats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Stats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEggTotalsOldList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      1,
      f
    );
  }
  f = message.getEggTotalsList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
};


/**
 * repeated uint64 egg_totals_OLD = 1;
 * @return {!Array<number>}
 */
proto.ei.Backup.Stats.prototype.getEggTotalsOldList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Stats.prototype.setEggTotalsOldList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Stats.prototype.addEggTotalsOld = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Stats.prototype.clearEggTotalsOldList = function() {
  this.setEggTotalsOldList([]);
};


/**
 * repeated double egg_totals = 8;
 * @return {!Array<number>}
 */
proto.ei.Backup.Stats.prototype.getEggTotalsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Stats.prototype.setEggTotalsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Stats.prototype.addEggTotals = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Stats.prototype.clearEggTotalsList = function() {
  this.setEggTotalsList([]);
};


/**
 * optional uint64 unlimited_chickens_uses = 7;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getUnlimitedChickensUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setUnlimitedChickensUses = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearUnlimitedChickensUses = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasUnlimitedChickensUses = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 refill_uses = 2;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getRefillUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setRefillUses = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearRefillUses = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasRefillUses = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 warp_1_uses = 4;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getWarp1Uses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setWarp1Uses = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearWarp1Uses = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasWarp1Uses = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 warp_8_uses = 5;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getWarp8Uses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setWarp8Uses = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearWarp8Uses = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasWarp8Uses = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 boosts_used = 13;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getBoostsUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setBoostsUsed = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearBoostsUsed = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasBoostsUsed = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 video_doubler_uses = 3;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getVideoDoublerUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setVideoDoublerUses = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearVideoDoublerUses = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasVideoDoublerUses = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 drone_takedowns = 6;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getDroneTakedowns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setDroneTakedowns = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearDroneTakedowns = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasDroneTakedowns = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 drone_takedowns_elite = 10;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getDroneTakedownsElite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setDroneTakedownsElite = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearDroneTakedownsElite = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasDroneTakedownsElite = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 num_prestiges = 9;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getNumPrestiges = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setNumPrestiges = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearNumPrestiges = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasNumPrestiges = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 num_piggy_breaks = 11;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getNumPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setNumPiggyBreaks = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearNumPiggyBreaks = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasNumPiggyBreaks = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 iap_packs_purchased = 12;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getIapPacksPurchased = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setIapPacksPurchased = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearIapPacksPurchased = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasIapPacksPurchased = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool piggy_full = 14;
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.ei.Backup.Stats.prototype.setPiggyFull = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearPiggyFull = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool piggy_found_full = 15;
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.ei.Backup.Stats.prototype.setPiggyFoundFull = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearPiggyFoundFull = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double time_piggy_filled_realtime = 16;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getTimePiggyFilledRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setTimePiggyFilledRealtime = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearTimePiggyFilledRealtime = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasTimePiggyFilledRealtime = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double time_piggy_full_gametime = 17;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getTimePiggyFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setTimePiggyFullGametime = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearTimePiggyFullGametime = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasTimePiggyFullGametime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 lost_piggy_increments = 18;
 * @return {number}
 */
proto.ei.Backup.Stats.prototype.getLostPiggyIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.ei.Backup.Stats.prototype.setLostPiggyIncrements = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Stats.prototype.clearLostPiggyIncrements = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Stats.prototype.hasLostPiggyIncrements = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.ResearchItem.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.ResearchItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.ResearchItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ResearchItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    level: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.ResearchItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.ResearchItem;
  return proto.ei.Backup.ResearchItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.ResearchItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.ResearchItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.ResearchItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.ResearchItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.ResearchItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ResearchItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.ResearchItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.ResearchItem.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.ResearchItem.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ResearchItem.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 level = 2;
 * @return {number}
 */
proto.ei.Backup.ResearchItem.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.Backup.ResearchItem.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.ResearchItem.prototype.clearLevel = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ResearchItem.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.NewsHeadline.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.NewsHeadline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.NewsHeadline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.NewsHeadline.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    read: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.NewsHeadline}
 */
proto.ei.Backup.NewsHeadline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.NewsHeadline;
  return proto.ei.Backup.NewsHeadline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.NewsHeadline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.NewsHeadline}
 */
proto.ei.Backup.NewsHeadline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.NewsHeadline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.NewsHeadline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.NewsHeadline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.NewsHeadline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.NewsHeadline.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.NewsHeadline.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.NewsHeadline.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.NewsHeadline.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool read = 2;
 * @return {boolean}
 */
proto.ei.Backup.NewsHeadline.prototype.getRead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.Backup.NewsHeadline.prototype.setRead = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.NewsHeadline.prototype.clearRead = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.NewsHeadline.prototype.hasRead = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.AchievementInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.AchievementInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.AchievementInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.AchievementInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    achieved: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.AchievementInfo}
 */
proto.ei.Backup.AchievementInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.AchievementInfo;
  return proto.ei.Backup.AchievementInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.AchievementInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.AchievementInfo}
 */
proto.ei.Backup.AchievementInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAchieved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.AchievementInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.AchievementInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.AchievementInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.AchievementInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.AchievementInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.AchievementInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.AchievementInfo.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.AchievementInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool achieved = 2;
 * @return {boolean}
 */
proto.ei.Backup.AchievementInfo.prototype.getAchieved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.Backup.AchievementInfo.prototype.setAchieved = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.AchievementInfo.prototype.clearAchieved = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.AchievementInfo.prototype.hasAchieved = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.ActiveBoost.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.ActiveBoost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.ActiveBoost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ActiveBoost.toObject = function(includeInstance, msg) {
  var f, obj = {
    boostId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timeRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    referenceValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.Backup.ActiveBoost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.ActiveBoost;
  return proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.ActiveBoost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeRemaining(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.ActiveBoost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.ActiveBoost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.ActiveBoost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.ActiveBoost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string boost_id = 1;
 * @return {string}
 */
proto.ei.Backup.ActiveBoost.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.ActiveBoost.prototype.setBoostId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.ActiveBoost.prototype.clearBoostId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ActiveBoost.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double time_remaining = 2;
 * @return {number}
 */
proto.ei.Backup.ActiveBoost.prototype.getTimeRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.Backup.ActiveBoost.prototype.setTimeRemaining = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.ActiveBoost.prototype.clearTimeRemaining = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ActiveBoost.prototype.hasTimeRemaining = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double reference_value = 3;
 * @return {number}
 */
proto.ei.Backup.ActiveBoost.prototype.getReferenceValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.Backup.ActiveBoost.prototype.setReferenceValue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.ActiveBoost.prototype.clearReferenceValue = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.ActiveBoost.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.OwnedBoost.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.OwnedBoost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.OwnedBoost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.OwnedBoost.toObject = function(includeInstance, msg) {
  var f, obj = {
    boostId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    count: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.OwnedBoost}
 */
proto.ei.Backup.OwnedBoost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.OwnedBoost;
  return proto.ei.Backup.OwnedBoost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.OwnedBoost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.OwnedBoost}
 */
proto.ei.Backup.OwnedBoost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.OwnedBoost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.OwnedBoost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.OwnedBoost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.OwnedBoost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string boost_id = 1;
 * @return {string}
 */
proto.ei.Backup.OwnedBoost.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.OwnedBoost.prototype.setBoostId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.OwnedBoost.prototype.clearBoostId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.OwnedBoost.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.ei.Backup.OwnedBoost.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.Backup.OwnedBoost.prototype.setCount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.OwnedBoost.prototype.clearCount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.OwnedBoost.prototype.hasCount = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Game.repeatedFields_ = [9,11,15,18,19,30];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Game.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Game.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Game} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Game.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentFarm: jspb.Message.getFieldWithDefault(msg, 22, 0),
    maxEggReached: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goldenEggsEarned: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    goldenEggsSpent: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    uncliamedGoldenEggs: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    unclaimedSoulEggs: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    soulEggsD: (f = jspb.Message.getOptionalFloatingPointField(msg, 34)) == null ? undefined : f,
    unclaimedSoulEggsD: (f = jspb.Message.getOptionalFloatingPointField(msg, 35)) == null ? undefined : f,
    eggsOfProphecy: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    unclaimedEggsOfProphecy: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    prestigeCashEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    prestigeSoulBoostCash: (f = jspb.Message.getOptionalFloatingPointField(msg, 33)) == null ? undefined : f,
    lifetimeCashEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    piggyBank: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    piggyFullAlertShown: (f = jspb.Message.getBooleanField(msg, 31)) == null ? undefined : f,
    permitLevel: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    epicResearchList: jspb.Message.toObjectList(msg.getEpicResearchList(),
    proto.ei.Backup.ResearchItem.toObject, includeInstance),
    hyperloopStation: (f = jspb.Message.getBooleanField(msg, 29)) == null ? undefined : f,
    nextDailyGiftTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    lastDailyGiftCollectedDay: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    numDailyGiftsCollected: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    newsList: jspb.Message.toObjectList(msg.getNewsList(),
    proto.ei.Backup.NewsHeadline.toObject, includeInstance),
    lastNewsTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    currentMultiplier: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    currentMultiplierExpiration: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    achievementsList: jspb.Message.toObjectList(msg.getAchievementsList(),
    proto.ei.Backup.AchievementInfo.toObject, includeInstance),
    maxFarmSizeReachedList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    eggMedalLevelList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    longIdleNotificationSet: (f = jspb.Message.getBooleanField(msg, 25)) == null ? undefined : f,
    longIdleNotificationThreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    longIdleReward: (f = jspb.Message.getOptionalFloatingPointField(msg, 27)) == null ? undefined : f,
    boostsList: jspb.Message.toObjectList(msg.getBoostsList(),
    proto.ei.Backup.OwnedBoost.toObject, includeInstance),
    totalTimeCheatsDetected: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f,
    forceEliteContracts: (f = jspb.Message.getBooleanField(msg, 36)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Game}
 */
proto.ei.Backup.Game.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Game;
  return proto.ei.Backup.Game.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Game} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Game}
 */
proto.ei.Backup.Game.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentFarm(value);
      break;
    case 1:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setMaxEggReached(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldenEggsEarned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldenEggsSpent(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncliamedGoldenEggs(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSoulEggs(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnclaimedSoulEggs(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggsD(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUnclaimedSoulEggsD(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEggsOfProphecy(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnclaimedEggsOfProphecy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrestigeCashEarned(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrestigeSoulBoostCash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLifetimeCashEarned(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPiggyBank(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFullAlertShown(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPermitLevel(value);
      break;
    case 9:
      var value = new proto.ei.Backup.ResearchItem;
      reader.readMessage(value,proto.ei.Backup.ResearchItem.deserializeBinaryFromReader);
      msg.addEpicResearch(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHyperloopStation(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNextDailyGiftTime(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastDailyGiftCollectedDay(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumDailyGiftsCollected(value);
      break;
    case 11:
      var value = new proto.ei.Backup.NewsHeadline;
      reader.readMessage(value,proto.ei.Backup.NewsHeadline.deserializeBinaryFromReader);
      msg.addNews(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastNewsTime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentMultiplier(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentMultiplierExpiration(value);
      break;
    case 15:
      var value = new proto.ei.Backup.AchievementInfo;
      reader.readMessage(value,proto.ei.Backup.AchievementInfo.deserializeBinaryFromReader);
      msg.addAchievements(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addMaxFarmSizeReached(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.addEggMedalLevel(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLongIdleNotificationSet(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongIdleNotificationThreshold(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongIdleReward(value);
      break;
    case 30:
      var value = new proto.ei.Backup.OwnedBoost;
      reader.readMessage(value,proto.ei.Backup.OwnedBoost.deserializeBinaryFromReader);
      msg.addBoosts(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalTimeCheatsDetected(value);
      break;
    case 36:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceEliteContracts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Game.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Game.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Game} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Game.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeDouble(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeDouble(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint64(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeDouble(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeBool(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getEpicResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = message.getNewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.Backup.NewsHeadline.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getAchievementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.ei.Backup.AchievementInfo.serializeBinaryToWriter
    );
  }
  f = message.getMaxFarmSizeReachedList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      18,
      f
    );
  }
  f = message.getEggMedalLevelList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = message.getBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      30,
      f,
      proto.ei.Backup.OwnedBoost.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeBool(
      36,
      f
    );
  }
};


/**
 * optional uint32 current_farm = 22;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getCurrentFarm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setCurrentFarm = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearCurrentFarm = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasCurrentFarm = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Egg max_egg_reached = 1;
 * @return {!proto.ei.Egg}
 */
proto.ei.Backup.Game.prototype.getMaxEggReached = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.ei.Egg} value */
proto.ei.Backup.Game.prototype.setMaxEggReached = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearMaxEggReached = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasMaxEggReached = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 golden_eggs_earned = 2;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getGoldenEggsEarned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setGoldenEggsEarned = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearGoldenEggsEarned = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasGoldenEggsEarned = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 golden_eggs_spent = 3;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getGoldenEggsSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setGoldenEggsSpent = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearGoldenEggsSpent = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasGoldenEggsSpent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 uncliamed_golden_eggs = 16;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUncliamedGoldenEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setUncliamedGoldenEggs = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearUncliamedGoldenEggs = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUncliamedGoldenEggs = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 soul_eggs = 4;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setSoulEggs = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearSoulEggs = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 unclaimed_soul_eggs = 17;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setUnclaimedSoulEggs = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearUnclaimedSoulEggs = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedSoulEggs = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double soul_eggs_d = 34;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getSoulEggsD = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 34, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setSoulEggsD = function(value) {
  jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearSoulEggsD = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasSoulEggsD = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional double unclaimed_soul_eggs_d = 35;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedSoulEggsD = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 35, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setUnclaimedSoulEggsD = function(value) {
  jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearUnclaimedSoulEggsD = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedSoulEggsD = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional uint64 eggs_of_prophecy = 23;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getEggsOfProphecy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setEggsOfProphecy = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearEggsOfProphecy = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasEggsOfProphecy = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint64 unclaimed_eggs_of_prophecy = 24;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getUnclaimedEggsOfProphecy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setUnclaimedEggsOfProphecy = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearUnclaimedEggsOfProphecy = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasUnclaimedEggsOfProphecy = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional double prestige_cash_earned = 5;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPrestigeCashEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setPrestigeCashEarned = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearPrestigeCashEarned = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPrestigeCashEarned = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double prestige_soul_boost_cash = 33;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPrestigeSoulBoostCash = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 33, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setPrestigeSoulBoostCash = function(value) {
  jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearPrestigeSoulBoostCash = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPrestigeSoulBoostCash = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional double lifetime_cash_earned = 6;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLifetimeCashEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setLifetimeCashEarned = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearLifetimeCashEarned = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLifetimeCashEarned = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 piggy_bank = 7;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPiggyBank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setPiggyBank = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearPiggyBank = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPiggyBank = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool piggy_full_alert_shown = 31;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getPiggyFullAlertShown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/** @param {boolean} value */
proto.ei.Backup.Game.prototype.setPiggyFullAlertShown = function(value) {
  jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearPiggyFullAlertShown = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPiggyFullAlertShown = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 permit_level = 8;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getPermitLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setPermitLevel = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearPermitLevel = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasPermitLevel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ResearchItem epic_research = 9;
 * @return {!Array<!proto.ei.Backup.ResearchItem>}
 */
proto.ei.Backup.Game.prototype.getEpicResearchList = function() {
  return /** @type{!Array<!proto.ei.Backup.ResearchItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ResearchItem, 9));
};


/** @param {!Array<!proto.ei.Backup.ResearchItem>} value */
proto.ei.Backup.Game.prototype.setEpicResearchList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.Game.prototype.addEpicResearch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Game.prototype.clearEpicResearchList = function() {
  this.setEpicResearchList([]);
};


/**
 * optional bool hyperloop_station = 29;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getHyperloopStation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/** @param {boolean} value */
proto.ei.Backup.Game.prototype.setHyperloopStation = function(value) {
  jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearHyperloopStation = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasHyperloopStation = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional double next_daily_gift_time = 10;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getNextDailyGiftTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setNextDailyGiftTime = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearNextDailyGiftTime = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasNextDailyGiftTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 last_daily_gift_collected_day = 20;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLastDailyGiftCollectedDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setLastDailyGiftCollectedDay = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearLastDailyGiftCollectedDay = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLastDailyGiftCollectedDay = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 num_daily_gifts_collected = 28;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getNumDailyGiftsCollected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setNumDailyGiftsCollected = function(value) {
  jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearNumDailyGiftsCollected = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasNumDailyGiftsCollected = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * repeated NewsHeadline news = 11;
 * @return {!Array<!proto.ei.Backup.NewsHeadline>}
 */
proto.ei.Backup.Game.prototype.getNewsList = function() {
  return /** @type{!Array<!proto.ei.Backup.NewsHeadline>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.NewsHeadline, 11));
};


/** @param {!Array<!proto.ei.Backup.NewsHeadline>} value */
proto.ei.Backup.Game.prototype.setNewsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.Backup.NewsHeadline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.NewsHeadline}
 */
proto.ei.Backup.Game.prototype.addNews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.Backup.NewsHeadline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Game.prototype.clearNewsList = function() {
  this.setNewsList([]);
};


/**
 * optional double last_news_time = 12;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLastNewsTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setLastNewsTime = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearLastNewsTime = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLastNewsTime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double current_multiplier = 13;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getCurrentMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setCurrentMultiplier = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearCurrentMultiplier = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasCurrentMultiplier = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double current_multiplier_expiration = 14;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getCurrentMultiplierExpiration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setCurrentMultiplierExpiration = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearCurrentMultiplierExpiration = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasCurrentMultiplierExpiration = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated AchievementInfo achievements = 15;
 * @return {!Array<!proto.ei.Backup.AchievementInfo>}
 */
proto.ei.Backup.Game.prototype.getAchievementsList = function() {
  return /** @type{!Array<!proto.ei.Backup.AchievementInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.AchievementInfo, 15));
};


/** @param {!Array<!proto.ei.Backup.AchievementInfo>} value */
proto.ei.Backup.Game.prototype.setAchievementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ei.Backup.AchievementInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.AchievementInfo}
 */
proto.ei.Backup.Game.prototype.addAchievements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ei.Backup.AchievementInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Game.prototype.clearAchievementsList = function() {
  this.setAchievementsList([]);
};


/**
 * repeated uint64 max_farm_size_reached = 18;
 * @return {!Array<number>}
 */
proto.ei.Backup.Game.prototype.getMaxFarmSizeReachedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Game.prototype.setMaxFarmSizeReachedList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Game.prototype.addMaxFarmSizeReached = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Game.prototype.clearMaxFarmSizeReachedList = function() {
  this.setMaxFarmSizeReachedList([]);
};


/**
 * repeated uint32 egg_medal_level = 19;
 * @return {!Array<number>}
 */
proto.ei.Backup.Game.prototype.getEggMedalLevelList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 19));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Game.prototype.setEggMedalLevelList = function(value) {
  jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Game.prototype.addEggMedalLevel = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Game.prototype.clearEggMedalLevelList = function() {
  this.setEggMedalLevelList([]);
};


/**
 * optional bool long_idle_notification_set = 25;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getLongIdleNotificationSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.ei.Backup.Game.prototype.setLongIdleNotificationSet = function(value) {
  jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearLongIdleNotificationSet = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLongIdleNotificationSet = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double long_idle_notification_threshold = 26;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLongIdleNotificationThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setLongIdleNotificationThreshold = function(value) {
  jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearLongIdleNotificationThreshold = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLongIdleNotificationThreshold = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional double long_idle_reward = 27;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getLongIdleReward = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setLongIdleReward = function(value) {
  jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearLongIdleReward = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasLongIdleReward = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * repeated OwnedBoost boosts = 30;
 * @return {!Array<!proto.ei.Backup.OwnedBoost>}
 */
proto.ei.Backup.Game.prototype.getBoostsList = function() {
  return /** @type{!Array<!proto.ei.Backup.OwnedBoost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.OwnedBoost, 30));
};


/** @param {!Array<!proto.ei.Backup.OwnedBoost>} value */
proto.ei.Backup.Game.prototype.setBoostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.ei.Backup.OwnedBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.OwnedBoost}
 */
proto.ei.Backup.Game.prototype.addBoosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.ei.Backup.OwnedBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Game.prototype.clearBoostsList = function() {
  this.setBoostsList([]);
};


/**
 * optional uint32 total_time_cheats_detected = 32;
 * @return {number}
 */
proto.ei.Backup.Game.prototype.getTotalTimeCheatsDetected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.ei.Backup.Game.prototype.setTotalTimeCheatsDetected = function(value) {
  jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearTotalTimeCheatsDetected = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasTotalTimeCheatsDetected = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional bool force_elite_contracts = 36;
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.getForceEliteContracts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 36, false));
};


/** @param {boolean} value */
proto.ei.Backup.Game.prototype.setForceEliteContracts = function(value) {
  jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Game.prototype.clearForceEliteContracts = function() {
  jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Game.prototype.hasForceEliteContracts = function() {
  return jspb.Message.getField(this, 36) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Simulation.repeatedFields_ = [12,13,14,15,17,21,18,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Simulation.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Simulation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Simulation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Simulation.toObject = function(includeInstance, msg) {
  var f, obj = {
    eggType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    farmType: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    contractId: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    cashEarned: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    cashSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    unclaimedCash: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    lastStepTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    numChickens: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    numChickensUnsettled: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    numChickensRunning: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    eggsLaid: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    eggsPaidFor: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    silosOwned: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    habsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    habPopulationList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    habPopulationIndoundList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    habIncubatorPopuplationList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 15)) == null ? undefined : f,
    hatcheryPopulation: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    vehiclesList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    trainLengthList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    commonResearchList: jspb.Message.toObjectList(msg.getCommonResearchList(),
    proto.ei.Backup.ResearchItem.toObject, includeInstance),
    activeBoostsList: jspb.Message.toObjectList(msg.getActiveBoostsList(),
    proto.ei.Backup.ActiveBoost.toObject, includeInstance),
    timeCheatsDetected: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    timeCheatDebt: (f = jspb.Message.getOptionalFloatingPointField(msg, 24)) == null ? undefined : f,
    boostTokensReceived: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    boostTokensSpent: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
    boostTokensGiven: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    unclaimedBoostTokens: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    gametimeUntilNextBoostToken: (f = jspb.Message.getOptionalFloatingPointField(msg, 29)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Simulation}
 */
proto.ei.Backup.Simulation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Simulation;
  return proto.ei.Backup.Simulation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Simulation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Simulation}
 */
proto.ei.Backup.Simulation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEggType(value);
      break;
    case 19:
      var value = /** @type {!proto.ei.FarmType} */ (reader.readEnum());
      msg.setFarmType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashEarned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashSpent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUnclaimedCash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastStepTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumChickens(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumChickensUnsettled(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumChickensRunning(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggsLaid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEggsPaidFor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSilosOwned(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.addHabs(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addHabPopulation(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addHabPopulationIndound(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.addHabIncubatorPopuplation(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHatcheryPopulation(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.addVehicles(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.addTrainLength(value);
      break;
    case 18:
      var value = new proto.ei.Backup.ResearchItem;
      reader.readMessage(value,proto.ei.Backup.ResearchItem.deserializeBinaryFromReader);
      msg.addCommonResearch(value);
      break;
    case 22:
      var value = new proto.ei.Backup.ActiveBoost;
      reader.readMessage(value,proto.ei.Backup.ActiveBoost.deserializeBinaryFromReader);
      msg.addActiveBoosts(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeCheatsDetected(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeCheatDebt(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensReceived(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensSpent(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokensGiven(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnclaimedBoostTokens(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGametimeUntilNextBoostToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Simulation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Simulation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Simulation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Simulation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.FarmType} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getHabsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      12,
      f
    );
  }
  f = message.getHabPopulationList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      13,
      f
    );
  }
  f = message.getHabPopulationIndoundList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      14,
      f
    );
  }
  f = message.getHabIncubatorPopuplationList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getVehiclesList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      17,
      f
    );
  }
  f = message.getTrainLengthList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      21,
      f
    );
  }
  f = message.getCommonResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.ei.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = message.getActiveBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.ei.Backup.ActiveBoost.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeDouble(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeDouble(
      29,
      f
    );
  }
};


/**
 * optional Egg egg_type = 1;
 * @return {!proto.ei.Egg}
 */
proto.ei.Backup.Simulation.prototype.getEggType = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.ei.Egg} value */
proto.ei.Backup.Simulation.prototype.setEggType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearEggType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FarmType farm_type = 19;
 * @return {!proto.ei.FarmType}
 */
proto.ei.Backup.Simulation.prototype.getFarmType = function() {
  return /** @type {!proto.ei.FarmType} */ (jspb.Message.getFieldWithDefault(this, 19, 1));
};


/** @param {!proto.ei.FarmType} value */
proto.ei.Backup.Simulation.prototype.setFarmType = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearFarmType = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasFarmType = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string contract_id = 20;
 * @return {string}
 */
proto.ei.Backup.Simulation.prototype.getContractId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.ei.Backup.Simulation.prototype.setContractId = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearContractId = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasContractId = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional double cash_earned = 2;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getCashEarned = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setCashEarned = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearCashEarned = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasCashEarned = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double cash_spent = 3;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getCashSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setCashSpent = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearCashSpent = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasCashSpent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double unclaimed_cash = 4;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getUnclaimedCash = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setUnclaimedCash = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearUnclaimedCash = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasUnclaimedCash = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double last_step_time = 5;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getLastStepTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setLastStepTime = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearLastStepTime = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasLastStepTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 num_chickens = 6;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getNumChickens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setNumChickens = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearNumChickens = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasNumChickens = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 num_chickens_unsettled = 7;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getNumChickensUnsettled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setNumChickensUnsettled = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearNumChickensUnsettled = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasNumChickensUnsettled = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 num_chickens_running = 8;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getNumChickensRunning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setNumChickensRunning = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearNumChickensRunning = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasNumChickensRunning = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double eggs_laid = 9;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getEggsLaid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setEggsLaid = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearEggsLaid = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggsLaid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double eggs_paid_for = 10;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getEggsPaidFor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setEggsPaidFor = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearEggsPaidFor = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasEggsPaidFor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 silos_owned = 11;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getSilosOwned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setSilosOwned = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearSilosOwned = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasSilosOwned = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated uint32 habs = 12;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Simulation.prototype.setHabsList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Simulation.prototype.addHabs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearHabsList = function() {
  this.setHabsList([]);
};


/**
 * repeated uint64 hab_population = 13;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabPopulationList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Simulation.prototype.setHabPopulationList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Simulation.prototype.addHabPopulation = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearHabPopulationList = function() {
  this.setHabPopulationList([]);
};


/**
 * repeated uint64 hab_population_indound = 14;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabPopulationIndoundList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Simulation.prototype.setHabPopulationIndoundList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Simulation.prototype.addHabPopulationIndound = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearHabPopulationIndoundList = function() {
  this.setHabPopulationIndoundList([]);
};


/**
 * repeated double hab_incubator_popuplation = 15;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getHabIncubatorPopuplationList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 15));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Simulation.prototype.setHabIncubatorPopuplationList = function(value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Simulation.prototype.addHabIncubatorPopuplation = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearHabIncubatorPopuplationList = function() {
  this.setHabIncubatorPopuplationList([]);
};


/**
 * optional double hatchery_population = 16;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getHatcheryPopulation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setHatcheryPopulation = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearHatcheryPopulation = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasHatcheryPopulation = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated uint32 vehicles = 17;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getVehiclesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 17));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Simulation.prototype.setVehiclesList = function(value) {
  jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Simulation.prototype.addVehicles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearVehiclesList = function() {
  this.setVehiclesList([]);
};


/**
 * repeated uint32 train_length = 21;
 * @return {!Array<number>}
 */
proto.ei.Backup.Simulation.prototype.getTrainLengthList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array<number>} value */
proto.ei.Backup.Simulation.prototype.setTrainLengthList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Simulation.prototype.addTrainLength = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearTrainLengthList = function() {
  this.setTrainLengthList([]);
};


/**
 * repeated ResearchItem common_research = 18;
 * @return {!Array<!proto.ei.Backup.ResearchItem>}
 */
proto.ei.Backup.Simulation.prototype.getCommonResearchList = function() {
  return /** @type{!Array<!proto.ei.Backup.ResearchItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ResearchItem, 18));
};


/** @param {!Array<!proto.ei.Backup.ResearchItem>} value */
proto.ei.Backup.Simulation.prototype.setCommonResearchList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.ei.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ResearchItem}
 */
proto.ei.Backup.Simulation.prototype.addCommonResearch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.ei.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearCommonResearchList = function() {
  this.setCommonResearchList([]);
};


/**
 * repeated ActiveBoost active_boosts = 22;
 * @return {!Array<!proto.ei.Backup.ActiveBoost>}
 */
proto.ei.Backup.Simulation.prototype.getActiveBoostsList = function() {
  return /** @type{!Array<!proto.ei.Backup.ActiveBoost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.ActiveBoost, 22));
};


/** @param {!Array<!proto.ei.Backup.ActiveBoost>} value */
proto.ei.Backup.Simulation.prototype.setActiveBoostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.ei.Backup.ActiveBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.ActiveBoost}
 */
proto.ei.Backup.Simulation.prototype.addActiveBoosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.ei.Backup.ActiveBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Simulation.prototype.clearActiveBoostsList = function() {
  this.setActiveBoostsList([]);
};


/**
 * optional uint32 time_cheats_detected = 23;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getTimeCheatsDetected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setTimeCheatsDetected = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearTimeCheatsDetected = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasTimeCheatsDetected = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional double time_cheat_debt = 24;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getTimeCheatDebt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setTimeCheatDebt = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearTimeCheatDebt = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasTimeCheatDebt = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 boost_tokens_received = 25;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getBoostTokensReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setBoostTokensReceived = function(value) {
  jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearBoostTokensReceived = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasBoostTokensReceived = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 boost_tokens_spent = 26;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getBoostTokensSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setBoostTokensSpent = function(value) {
  jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearBoostTokensSpent = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasBoostTokensSpent = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint32 boost_tokens_given = 28;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getBoostTokensGiven = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setBoostTokensGiven = function(value) {
  jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearBoostTokensGiven = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasBoostTokensGiven = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 unclaimed_boost_tokens = 27;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getUnclaimedBoostTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setUnclaimedBoostTokens = function(value) {
  jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearUnclaimedBoostTokens = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasUnclaimedBoostTokens = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional double gametime_until_next_boost_token = 29;
 * @return {number}
 */
proto.ei.Backup.Simulation.prototype.getGametimeUntilNextBoostToken = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Simulation.prototype.setGametimeUntilNextBoostToken = function(value) {
  jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Simulation.prototype.clearGametimeUntilNextBoostToken = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Simulation.prototype.hasGametimeUntilNextBoostToken = function() {
  return jspb.Message.getField(this, 29) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.MissionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.MissionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.MissionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.MissionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    completed: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    referenceValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.MissionInfo}
 */
proto.ei.Backup.MissionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.MissionInfo;
  return proto.ei.Backup.MissionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.MissionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.MissionInfo}
 */
proto.ei.Backup.MissionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompleted(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.MissionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.MissionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.MissionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.MissionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ei.Backup.MissionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.MissionInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.MissionInfo.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool completed = 2;
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.getCompleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.Backup.MissionInfo.prototype.setCompleted = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.MissionInfo.prototype.clearCompleted = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.hasCompleted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double reference_value = 3;
 * @return {number}
 */
proto.ei.Backup.MissionInfo.prototype.getReferenceValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.Backup.MissionInfo.prototype.setReferenceValue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.MissionInfo.prototype.clearReferenceValue = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.MissionInfo.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Backup.Mission.repeatedFields_ = [4,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Mission.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Mission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Mission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Mission.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentMission: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    referenceValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    currentMissionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    missionsList: jspb.Message.toObjectList(msg.getMissionsList(),
    proto.ei.Backup.MissionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Mission}
 */
proto.ei.Backup.Mission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Mission;
  return proto.ei.Backup.Mission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Mission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Mission}
 */
proto.ei.Backup.Mission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentMission(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReferenceValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCurrentMissions(value);
      break;
    case 3:
      var value = new proto.ei.Backup.MissionInfo;
      reader.readMessage(value,proto.ei.Backup.MissionInfo.deserializeBinaryFromReader);
      msg.addMissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Mission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Mission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Mission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Mission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCurrentMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.Backup.MissionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string current_mission = 1;
 * @return {string}
 */
proto.ei.Backup.Mission.prototype.getCurrentMission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.Mission.prototype.setCurrentMission = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Mission.prototype.clearCurrentMission = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Mission.prototype.hasCurrentMission = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double reference_value = 2;
 * @return {number}
 */
proto.ei.Backup.Mission.prototype.getReferenceValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.Backup.Mission.prototype.setReferenceValue = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Mission.prototype.clearReferenceValue = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Mission.prototype.hasReferenceValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string current_missions = 4;
 * @return {!Array<string>}
 */
proto.ei.Backup.Mission.prototype.getCurrentMissionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.ei.Backup.Mission.prototype.setCurrentMissionsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ei.Backup.Mission.prototype.addCurrentMissions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Mission.prototype.clearCurrentMissionsList = function() {
  this.setCurrentMissionsList([]);
};


/**
 * repeated MissionInfo missions = 3;
 * @return {!Array<!proto.ei.Backup.MissionInfo>}
 */
proto.ei.Backup.Mission.prototype.getMissionsList = function() {
  return /** @type{!Array<!proto.ei.Backup.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.MissionInfo, 3));
};


/** @param {!Array<!proto.ei.Backup.MissionInfo>} value */
proto.ei.Backup.Mission.prototype.setMissionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.Backup.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.MissionInfo}
 */
proto.ei.Backup.Mission.prototype.addMissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.Backup.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.Mission.prototype.clearMissionsList = function() {
  this.setMissionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Backup.Misc.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Backup.Misc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Backup.Misc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Misc.toObject = function(includeInstance, msg) {
  var f, obj = {
    chickenBtnPrefBig: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    freeHatcheryRefillGiven: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    lastShareFarmValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 10000000.0),
    lastShareSwarmFarmValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 10000000.0),
    lastShareSwarmSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 140.0),
    lastPrestigeAlertSoulEggs: jspb.Message.getFieldWithDefault(msg, 10, 45),
    friendRank: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    friendRankPop: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    globalRank: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    globalRankPop: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    trophyAlert: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    arAlert: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    contractsAlert: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    coopAlert: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    switchAlert: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f,
    eggOfProphecyAlert: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    boostTokenAlert: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    soulEggAlert: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    backupReminderAlert: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Backup.Misc}
 */
proto.ei.Backup.Misc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Backup.Misc;
  return proto.ei.Backup.Misc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Backup.Misc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Backup.Misc}
 */
proto.ei.Backup.Misc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChickenBtnPrefBig(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFreeHatcheryRefillGiven(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShareFarmValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShareSwarmFarmValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastShareSwarmSize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastPrestigeAlertSoulEggs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFriendRank(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFriendRankPop(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGlobalRank(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGlobalRankPop(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrophyAlert(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArAlert(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsAlert(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopAlert(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwitchAlert(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEggOfProphecyAlert(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoostTokenAlert(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSoulEggAlert(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBackupReminderAlert(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Backup.Misc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Backup.Misc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Backup.Misc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Backup.Misc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional bool chicken_btn_pref_big = 1;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getChickenBtnPrefBig = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setChickenBtnPrefBig = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearChickenBtnPrefBig = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasChickenBtnPrefBig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool free_hatchery_refill_given = 2;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getFreeHatcheryRefillGiven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setFreeHatcheryRefillGiven = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearFreeHatcheryRefillGiven = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasFreeHatcheryRefillGiven = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double last_share_farm_value = 3;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastShareFarmValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 10000000.0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setLastShareFarmValue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearLastShareFarmValue = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastShareFarmValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double last_share_swarm_farm_value = 4;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastShareSwarmFarmValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 10000000.0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setLastShareSwarmFarmValue = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearLastShareSwarmFarmValue = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastShareSwarmFarmValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double last_share_swarm_size = 5;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastShareSwarmSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 140.0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setLastShareSwarmSize = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearLastShareSwarmSize = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastShareSwarmSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 last_prestige_alert_soul_eggs = 10;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getLastPrestigeAlertSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 45));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setLastPrestigeAlertSoulEggs = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearLastPrestigeAlertSoulEggs = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasLastPrestigeAlertSoulEggs = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 friend_rank = 6;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getFriendRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setFriendRank = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearFriendRank = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasFriendRank = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 friend_rank_pop = 7;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getFriendRankPop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setFriendRankPop = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearFriendRankPop = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasFriendRankPop = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 global_rank = 8;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getGlobalRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setGlobalRank = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearGlobalRank = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasGlobalRank = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 global_rank_pop = 9;
 * @return {number}
 */
proto.ei.Backup.Misc.prototype.getGlobalRankPop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ei.Backup.Misc.prototype.setGlobalRankPop = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearGlobalRankPop = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasGlobalRankPop = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool trophy_alert = 11;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getTrophyAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setTrophyAlert = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearTrophyAlert = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasTrophyAlert = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool ar_alert = 12;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getArAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setArAlert = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearArAlert = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasArAlert = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool contracts_alert = 13;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getContractsAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setContractsAlert = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearContractsAlert = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasContractsAlert = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool coop_alert = 14;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getCoopAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setCoopAlert = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearCoopAlert = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasCoopAlert = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool switch_alert = 15;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getSwitchAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setSwitchAlert = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearSwitchAlert = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasSwitchAlert = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool egg_of_prophecy_alert = 16;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getEggOfProphecyAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setEggOfProphecyAlert = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearEggOfProphecyAlert = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasEggOfProphecyAlert = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool boost_token_alert = 17;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getBoostTokenAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setBoostTokenAlert = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearBoostTokenAlert = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasBoostTokenAlert = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool soul_egg_alert = 18;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getSoulEggAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setSoulEggAlert = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearSoulEggAlert = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasSoulEggAlert = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool backup_reminder_alert = 19;
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.getBackupReminderAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.ei.Backup.Misc.prototype.setBackupReminderAlert = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.Misc.prototype.clearBackupReminderAlert = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.Misc.prototype.hasBackupReminderAlert = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.Backup.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Backup.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.ei.Backup.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.Backup.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearUserName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double approx_time = 3;
 * @return {number}
 */
proto.ei.Backup.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.Backup.prototype.setApproxTime = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearApproxTime = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 version = 21;
 * @return {number}
 */
proto.ei.Backup.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.ei.Backup.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearVersion = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool force_offer_backup = 20;
 * @return {boolean}
 */
proto.ei.Backup.prototype.getForceOfferBackup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.ei.Backup.prototype.setForceOfferBackup = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearForceOfferBackup = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasForceOfferBackup = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool force_backup = 22;
 * @return {boolean}
 */
proto.ei.Backup.prototype.getForceBackup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.ei.Backup.prototype.setForceBackup = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearForceBackup = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasForceBackup = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Settings settings = 4;
 * @return {?proto.ei.Backup.Settings}
 */
proto.ei.Backup.prototype.getSettings = function() {
  return /** @type{?proto.ei.Backup.Settings} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Settings, 4));
};


/** @param {?proto.ei.Backup.Settings|undefined} value */
proto.ei.Backup.prototype.setSettings = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearSettings = function() {
  this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Tutorial tutorial = 5;
 * @return {?proto.ei.Backup.Tutorial}
 */
proto.ei.Backup.prototype.getTutorial = function() {
  return /** @type{?proto.ei.Backup.Tutorial} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Tutorial, 5));
};


/** @param {?proto.ei.Backup.Tutorial|undefined} value */
proto.ei.Backup.prototype.setTutorial = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearTutorial = function() {
  this.setTutorial(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasTutorial = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Stats stats = 6;
 * @return {?proto.ei.Backup.Stats}
 */
proto.ei.Backup.prototype.getStats = function() {
  return /** @type{?proto.ei.Backup.Stats} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Stats, 6));
};


/** @param {?proto.ei.Backup.Stats|undefined} value */
proto.ei.Backup.prototype.setStats = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearStats = function() {
  this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasStats = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Game game = 7;
 * @return {?proto.ei.Backup.Game}
 */
proto.ei.Backup.prototype.getGame = function() {
  return /** @type{?proto.ei.Backup.Game} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Game, 7));
};


/** @param {?proto.ei.Backup.Game|undefined} value */
proto.ei.Backup.prototype.setGame = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearGame = function() {
  this.setGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasGame = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Simulation sim = 8;
 * @return {?proto.ei.Backup.Simulation}
 */
proto.ei.Backup.prototype.getSim = function() {
  return /** @type{?proto.ei.Backup.Simulation} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Simulation, 8));
};


/** @param {?proto.ei.Backup.Simulation|undefined} value */
proto.ei.Backup.prototype.setSim = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearSim = function() {
  this.setSim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasSim = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Simulation farms = 12;
 * @return {!Array<!proto.ei.Backup.Simulation>}
 */
proto.ei.Backup.prototype.getFarmsList = function() {
  return /** @type{!Array<!proto.ei.Backup.Simulation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Backup.Simulation, 12));
};


/** @param {!Array<!proto.ei.Backup.Simulation>} value */
proto.ei.Backup.prototype.setFarmsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.ei.Backup.Simulation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Backup.Simulation}
 */
proto.ei.Backup.prototype.addFarms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ei.Backup.Simulation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Backup.prototype.clearFarmsList = function() {
  this.setFarmsList([]);
};


/**
 * optional Mission mission = 9;
 * @return {?proto.ei.Backup.Mission}
 */
proto.ei.Backup.prototype.getMission = function() {
  return /** @type{?proto.ei.Backup.Mission} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Mission, 9));
};


/** @param {?proto.ei.Backup.Mission|undefined} value */
proto.ei.Backup.prototype.setMission = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearMission = function() {
  this.setMission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasMission = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Misc misc = 10;
 * @return {?proto.ei.Backup.Misc}
 */
proto.ei.Backup.prototype.getMisc = function() {
  return /** @type{?proto.ei.Backup.Misc} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup.Misc, 10));
};


/** @param {?proto.ei.Backup.Misc|undefined} value */
proto.ei.Backup.prototype.setMisc = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearMisc = function() {
  this.setMisc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasMisc = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional MyContracts contracts = 13;
 * @return {?proto.ei.MyContracts}
 */
proto.ei.Backup.prototype.getContracts = function() {
  return /** @type{?proto.ei.MyContracts} */ (
    jspb.Message.getWrapperField(this, proto.ei.MyContracts, 13));
};


/** @param {?proto.ei.MyContracts|undefined} value */
proto.ei.Backup.prototype.setContracts = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.Backup.prototype.clearContracts = function() {
  this.setContracts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasContracts = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 checksum = 100;
 * @return {number}
 */
proto.ei.Backup.prototype.getChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/** @param {number} value */
proto.ei.Backup.prototype.setChecksum = function(value) {
  jspb.Message.setField(this, 100, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Backup.prototype.clearChecksum = function() {
  jspb.Message.setField(this, 100, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Backup.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncFirstContactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncFirstContactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncFirstContactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncFirstContactRequest}
 */
proto.ei.EggIncFirstContactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncFirstContactRequest;
  return proto.ei.EggIncFirstContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncFirstContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncFirstContactRequest}
 */
proto.ei.EggIncFirstContactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    case 3:
      var value = /** @type {!proto.aux.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncFirstContactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncFirstContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncFirstContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.aux.Platform} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.EggIncFirstContactRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.EggIncFirstContactRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncFirstContactRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 client_version = 2;
 * @return {number}
 */
proto.ei.EggIncFirstContactRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.EggIncFirstContactRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncFirstContactRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional aux.Platform platform = 3;
 * @return {!proto.aux.Platform}
 */
proto.ei.EggIncFirstContactRequest.prototype.getPlatform = function() {
  return /** @type {!proto.aux.Platform} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/** @param {!proto.aux.Platform} value */
proto.ei.EggIncFirstContactRequest.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncFirstContactRequest.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncFirstContactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncFirstContactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncFirstContactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    backup: (f = msg.getBackup()) && proto.ei.Backup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncFirstContactResponse}
 */
proto.ei.EggIncFirstContactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncFirstContactResponse;
  return proto.ei.EggIncFirstContactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncFirstContactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncFirstContactResponse}
 */
proto.ei.EggIncFirstContactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Backup;
      reader.readMessage(value,proto.ei.Backup.deserializeBinaryFromReader);
      msg.setBackup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncFirstContactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncFirstContactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncFirstContactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncFirstContactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.Backup.serializeBinaryToWriter
    );
  }
};


/**
 * optional Backup backup = 1;
 * @return {?proto.ei.Backup}
 */
proto.ei.EggIncFirstContactResponse.prototype.getBackup = function() {
  return /** @type{?proto.ei.Backup} */ (
    jspb.Message.getWrapperField(this, proto.ei.Backup, 1));
};


/** @param {?proto.ei.Backup|undefined} value */
proto.ei.EggIncFirstContactResponse.prototype.setBackup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.EggIncFirstContactResponse.prototype.clearBackup = function() {
  this.setBackup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncFirstContactResponse.prototype.hasBackup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.EggIncAdConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncAdConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncAdConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncAdConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncAdConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkPriorityList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncAdConfig}
 */
proto.ei.EggIncAdConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncAdConfig;
  return proto.ei.EggIncAdConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncAdConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncAdConfig}
 */
proto.ei.EggIncAdConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.aux.AdNetwork} */ (reader.readEnum());
      msg.addNetworkPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncAdConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncAdConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncAdConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncAdConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkPriorityList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      1,
      f
    );
  }
};


/**
 * repeated aux.AdNetwork network_priority = 1;
 * @return {!Array<!proto.aux.AdNetwork>}
 */
proto.ei.EggIncAdConfig.prototype.getNetworkPriorityList = function() {
  return /** @type {!Array<!proto.aux.AdNetwork>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<!proto.aux.AdNetwork>} value */
proto.ei.EggIncAdConfig.prototype.setNetworkPriorityList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.aux.AdNetwork} value
 * @param {number=} opt_index
 */
proto.ei.EggIncAdConfig.prototype.addNetworkPriority = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.EggIncAdConfig.prototype.clearNetworkPriorityList = function() {
  this.setNetworkPriorityList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DailyGiftInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DailyGiftInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DailyGiftInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DailyGiftInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentDay: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secondsToNextDay: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DailyGiftInfo}
 */
proto.ei.DailyGiftInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DailyGiftInfo;
  return proto.ei.DailyGiftInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DailyGiftInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DailyGiftInfo}
 */
proto.ei.DailyGiftInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentDay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsToNextDay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DailyGiftInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DailyGiftInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DailyGiftInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DailyGiftInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional uint32 current_day = 1;
 * @return {number}
 */
proto.ei.DailyGiftInfo.prototype.getCurrentDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ei.DailyGiftInfo.prototype.setCurrentDay = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DailyGiftInfo.prototype.clearCurrentDay = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DailyGiftInfo.prototype.hasCurrentDay = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds_to_next_day = 2;
 * @return {number}
 */
proto.ei.DailyGiftInfo.prototype.getSecondsToNextDay = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.DailyGiftInfo.prototype.setSecondsToNextDay = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DailyGiftInfo.prototype.clearSecondsToNextDay = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DailyGiftInfo.prototype.hasSecondsToNextDay = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SalesInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SalesInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SalesInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    secondsFullRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    secondsFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    lostIncrements: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    currentClientVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SalesInfoRequest}
 */
proto.ei.SalesInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SalesInfoRequest;
  return proto.ei.SalesInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SalesInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SalesInfoRequest}
 */
proto.ei.SalesInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullRealtime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullGametime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLostIncrements(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SalesInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SalesInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SalesInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.SalesInfoRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.SalesInfoRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool piggy_full = 2;
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.SalesInfoRequest.prototype.setPiggyFull = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearPiggyFull = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool piggy_found_full = 3;
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ei.SalesInfoRequest.prototype.setPiggyFoundFull = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearPiggyFoundFull = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double seconds_full_realtime = 4;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getSecondsFullRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ei.SalesInfoRequest.prototype.setSecondsFullRealtime = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearSecondsFullRealtime = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasSecondsFullRealtime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double seconds_full_gametime = 5;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getSecondsFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.SalesInfoRequest.prototype.setSecondsFullGametime = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearSecondsFullGametime = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasSecondsFullGametime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 lost_increments = 7;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getLostIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.SalesInfoRequest.prototype.setLostIncrements = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearLostIncrements = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasLostIncrements = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 current_client_version = 10;
 * @return {number}
 */
proto.ei.SalesInfoRequest.prototype.getCurrentClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.ei.SalesInfoRequest.prototype.setCurrentClientVersion = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.SalesInfoRequest.prototype.clearCurrentClientVersion = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.SalesInfoRequest.prototype.hasCurrentClientVersion = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.IAPSaleEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.IAPSaleEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.IAPSaleEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.IAPSaleEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    productId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    discountString: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    saleId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.IAPSaleEntry}
 */
proto.ei.IAPSaleEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.IAPSaleEntry;
  return proto.ei.IAPSaleEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.IAPSaleEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.IAPSaleEntry}
 */
proto.ei.IAPSaleEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountString(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.IAPSaleEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.IAPSaleEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.IAPSaleEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.IAPSaleEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string product_id = 1;
 * @return {string}
 */
proto.ei.IAPSaleEntry.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.IAPSaleEntry.prototype.setProductId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.IAPSaleEntry.prototype.clearProductId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasProductId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds_remaining = 2;
 * @return {number}
 */
proto.ei.IAPSaleEntry.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.IAPSaleEntry.prototype.setSecondsRemaining = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.IAPSaleEntry.prototype.clearSecondsRemaining = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string discount_string = 3;
 * @return {string}
 */
proto.ei.IAPSaleEntry.prototype.getDiscountString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.IAPSaleEntry.prototype.setDiscountString = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.IAPSaleEntry.prototype.clearDiscountString = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasDiscountString = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string sale_id = 4;
 * @return {string}
 */
proto.ei.IAPSaleEntry.prototype.getSaleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.IAPSaleEntry.prototype.setSaleId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.IAPSaleEntry.prototype.clearSaleId = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.IAPSaleEntry.prototype.hasSaleId = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.SalesInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.SalesInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.SalesInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.SalesInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    salesList: jspb.Message.toObjectList(msg.getSalesList(),
    proto.ei.IAPSaleEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.SalesInfo}
 */
proto.ei.SalesInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.SalesInfo;
  return proto.ei.SalesInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.SalesInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.SalesInfo}
 */
proto.ei.SalesInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.IAPSaleEntry;
      reader.readMessage(value,proto.ei.IAPSaleEntry.deserializeBinaryFromReader);
      msg.addSales(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.SalesInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.SalesInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.SalesInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.SalesInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSalesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.IAPSaleEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IAPSaleEntry sales = 1;
 * @return {!Array<!proto.ei.IAPSaleEntry>}
 */
proto.ei.SalesInfo.prototype.getSalesList = function() {
  return /** @type{!Array<!proto.ei.IAPSaleEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.IAPSaleEntry, 1));
};


/** @param {!Array<!proto.ei.IAPSaleEntry>} value */
proto.ei.SalesInfo.prototype.setSalesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.IAPSaleEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.IAPSaleEntry}
 */
proto.ei.SalesInfo.prototype.addSales = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.IAPSaleEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.SalesInfo.prototype.clearSalesList = function() {
  this.setSalesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    multiplier: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    subtitle: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncEvent}
 */
proto.ei.EggIncEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncEvent;
  return proto.ei.EggIncEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncEvent}
 */
proto.ei.EggIncEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMultiplier(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.EggIncEvent.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.EggIncEvent.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncEvent.prototype.clearIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds_remaining = 2;
 * @return {number}
 */
proto.ei.EggIncEvent.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.EggIncEvent.prototype.setSecondsRemaining = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncEvent.prototype.clearSecondsRemaining = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.ei.EggIncEvent.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.EggIncEvent.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncEvent.prototype.clearType = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double multiplier = 4;
 * @return {number}
 */
proto.ei.EggIncEvent.prototype.getMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ei.EggIncEvent.prototype.setMultiplier = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncEvent.prototype.clearMultiplier = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasMultiplier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string subtitle = 5;
 * @return {string}
 */
proto.ei.EggIncEvent.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ei.EggIncEvent.prototype.setSubtitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.EggIncEvent.prototype.clearSubtitle = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.EggIncEvent.prototype.hasSubtitle = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.EggIncCurrentEvents.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.EggIncCurrentEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.EggIncCurrentEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.EggIncCurrentEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncCurrentEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.ei.EggIncEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.EggIncCurrentEvents}
 */
proto.ei.EggIncCurrentEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.EggIncCurrentEvents;
  return proto.ei.EggIncCurrentEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.EggIncCurrentEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.EggIncCurrentEvents}
 */
proto.ei.EggIncCurrentEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.EggIncEvent;
      reader.readMessage(value,proto.ei.EggIncEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.EggIncCurrentEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.EggIncCurrentEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.EggIncCurrentEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.EggIncCurrentEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.EggIncEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EggIncEvent events = 1;
 * @return {!Array<!proto.ei.EggIncEvent>}
 */
proto.ei.EggIncCurrentEvents.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.ei.EggIncEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.EggIncEvent, 1));
};


/** @param {!Array<!proto.ei.EggIncEvent>} value */
proto.ei.EggIncCurrentEvents.prototype.setEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.EggIncEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.EggIncEvent}
 */
proto.ei.EggIncCurrentEvents.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.EggIncEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.EggIncCurrentEvents.prototype.clearEventsList = function() {
  this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DeviceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DeviceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DeviceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DeviceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    advertisingId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    formFactor: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    deviceName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    platformVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    localeCountry: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    localeLanguage: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    gpuVendor: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    gpuModel: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    deviceBucket: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    screenWidth: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    screenHeight: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DeviceInfo}
 */
proto.ei.DeviceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DeviceInfo;
  return proto.ei.DeviceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DeviceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DeviceInfo}
 */
proto.ei.DeviceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdvertisingId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormFactor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocaleCountry(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocaleLanguage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpuVendor(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGpuModel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceBucket(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScreenWidth(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScreenHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DeviceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DeviceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DeviceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DeviceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
};


/**
 * optional string device_id = 1;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setDeviceId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearDeviceId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string advertising_id = 13;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getAdvertisingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setAdvertisingId = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearAdvertisingId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasAdvertisingId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string platform = 2;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string form_factor = 3;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getFormFactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setFormFactor = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearFormFactor = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasFormFactor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string device_name = 4;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setDeviceName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearDeviceName = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasDeviceName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string platform_version = 5;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getPlatformVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setPlatformVersion = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearPlatformVersion = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasPlatformVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string locale_country = 6;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getLocaleCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setLocaleCountry = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearLocaleCountry = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasLocaleCountry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string locale_language = 7;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getLocaleLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setLocaleLanguage = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearLocaleLanguage = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasLocaleLanguage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string gpu_vendor = 8;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getGpuVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setGpuVendor = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearGpuVendor = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasGpuVendor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string gpu_model = 9;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getGpuModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setGpuModel = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearGpuModel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasGpuModel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string device_bucket = 10;
 * @return {string}
 */
proto.ei.DeviceInfo.prototype.getDeviceBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.ei.DeviceInfo.prototype.setDeviceBucket = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearDeviceBucket = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasDeviceBucket = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 screen_width = 11;
 * @return {number}
 */
proto.ei.DeviceInfo.prototype.getScreenWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.ei.DeviceInfo.prototype.setScreenWidth = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearScreenWidth = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasScreenWidth = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 screen_height = 12;
 * @return {number}
 */
proto.ei.DeviceInfo.prototype.getScreenHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.ei.DeviceInfo.prototype.setScreenHeight = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.DeviceInfo.prototype.clearScreenHeight = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DeviceInfo.prototype.hasScreenHeight = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AppInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AppInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AppInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AppInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionStr: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    sessions: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    numPrestiges: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    currentEgg: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    goldEarned: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    goldSpent: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    currentMission: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    piggySize: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    numPiggyBreaks: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    verifiedPiggyBreaks: (f = jspb.Message.getField(msg, 29)) == null ? undefined : f,
    iapPacksPurchased: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    permitLevel: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    videoDoublerUses: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    droneTakedowns: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    droneTakedownsElite: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    trophiesUnlocked: (f = jspb.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    eggLevel: (f = jspb.Message.getOptionalFloatingPointField(msg, 21)) == null ? undefined : f,
    struggleFactor: (f = jspb.Message.getOptionalFloatingPointField(msg, 22)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 24)) == null ? undefined : f,
    timePiggyFullRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 25)) == null ? undefined : f,
    timePiggyFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 26)) == null ? undefined : f,
    lostPiggyIncrements: (f = jspb.Message.getField(msg, 27)) == null ? undefined : f,
    saleId: (f = jspb.Message.getField(msg, 28)) == null ? undefined : f,
    unlimitedChickensUses: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    refillUses: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    shortWarpUses: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    longWarpUses: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AppInfo}
 */
proto.ei.AppInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AppInfo;
  return proto.ei.AppInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AppInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AppInfo}
 */
proto.ei.AppInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionStr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSessions(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPrestiges(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSoulEggs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentEgg(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldEarned(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGoldSpent(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentMission(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiggySize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPiggyBreaks(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVerifiedPiggyBreaks(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIapPacksPurchased(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPermitLevel(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVideoDoublerUses(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedowns(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDroneTakedownsElite(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrophiesUnlocked(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEggLevel(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStruggleFactor(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFullRealtime(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimePiggyFullGametime(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLostPiggyIncrements(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaleId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnlimitedChickensUses(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefillUses(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShortWarpUses(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLongWarpUses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AppInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AppInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AppInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AppInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint64(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeDouble(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeDouble(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint64(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
};


/**
 * optional string version_str = 1;
 * @return {string}
 */
proto.ei.AppInfo.prototype.getVersionStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.AppInfo.prototype.setVersionStr = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearVersionStr = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasVersionStr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 sessions = 2;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getSessions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setSessions = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearSessions = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasSessions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 num_prestiges = 3;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getNumPrestiges = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setNumPrestiges = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearNumPrestiges = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasNumPrestiges = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 soul_eggs = 4;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setSoulEggs = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearSoulEggs = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 current_egg = 5;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getCurrentEgg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setCurrentEgg = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearCurrentEgg = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasCurrentEgg = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 gold_earned = 6;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getGoldEarned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setGoldEarned = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearGoldEarned = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasGoldEarned = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 gold_spent = 7;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getGoldSpent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setGoldSpent = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearGoldSpent = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasGoldSpent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 current_mission = 8;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getCurrentMission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setCurrentMission = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearCurrentMission = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasCurrentMission = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 piggy_size = 9;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getPiggySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setPiggySize = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearPiggySize = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPiggySize = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 num_piggy_breaks = 10;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getNumPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setNumPiggyBreaks = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearNumPiggyBreaks = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasNumPiggyBreaks = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 verified_piggy_breaks = 29;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getVerifiedPiggyBreaks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setVerifiedPiggyBreaks = function(value) {
  jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearVerifiedPiggyBreaks = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasVerifiedPiggyBreaks = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint64 iap_packs_purchased = 11;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getIapPacksPurchased = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setIapPacksPurchased = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearIapPacksPurchased = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasIapPacksPurchased = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 permit_level = 12;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getPermitLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setPermitLevel = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearPermitLevel = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPermitLevel = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 video_doubler_uses = 15;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getVideoDoublerUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setVideoDoublerUses = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearVideoDoublerUses = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasVideoDoublerUses = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 drone_takedowns = 18;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getDroneTakedowns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setDroneTakedowns = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearDroneTakedowns = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasDroneTakedowns = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint64 drone_takedowns_elite = 19;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getDroneTakedownsElite = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setDroneTakedownsElite = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearDroneTakedownsElite = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasDroneTakedownsElite = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool trophies_unlocked = 20;
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.getTrophiesUnlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.ei.AppInfo.prototype.setTrophiesUnlocked = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearTrophiesUnlocked = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasTrophiesUnlocked = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional float egg_level = 21;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getEggLevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setEggLevel = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearEggLevel = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasEggLevel = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float struggle_factor = 22;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getStruggleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setStruggleFactor = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearStruggleFactor = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasStruggleFactor = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool piggy_full = 23;
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/** @param {boolean} value */
proto.ei.AppInfo.prototype.setPiggyFull = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearPiggyFull = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool piggy_found_full = 24;
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.ei.AppInfo.prototype.setPiggyFoundFull = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearPiggyFoundFull = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional double time_piggy_full_realtime = 25;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getTimePiggyFullRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setTimePiggyFullRealtime = function(value) {
  jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearTimePiggyFullRealtime = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasTimePiggyFullRealtime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional double time_piggy_full_gametime = 26;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getTimePiggyFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setTimePiggyFullGametime = function(value) {
  jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearTimePiggyFullGametime = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasTimePiggyFullGametime = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint64 lost_piggy_increments = 27;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getLostPiggyIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setLostPiggyIncrements = function(value) {
  jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearLostPiggyIncrements = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasLostPiggyIncrements = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string sale_id = 28;
 * @return {string}
 */
proto.ei.AppInfo.prototype.getSaleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.ei.AppInfo.prototype.setSaleId = function(value) {
  jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearSaleId = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasSaleId = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint64 unlimited_chickens_uses = 13;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getUnlimitedChickensUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setUnlimitedChickensUses = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearUnlimitedChickensUses = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasUnlimitedChickensUses = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 refill_uses = 14;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getRefillUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setRefillUses = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearRefillUses = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasRefillUses = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 short_warp_uses = 16;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getShortWarpUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setShortWarpUses = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearShortWarpUses = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasShortWarpUses = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 long_warp_uses = 17;
 * @return {number}
 */
proto.ei.AppInfo.prototype.getLongWarpUses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.ei.AppInfo.prototype.setLongWarpUses = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AppInfo.prototype.clearLongWarpUses = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AppInfo.prototype.hasLongWarpUses = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ActionKeyValuePair.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ActionKeyValuePair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ActionKeyValuePair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ActionKeyValuePair.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ActionKeyValuePair}
 */
proto.ei.ActionKeyValuePair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ActionKeyValuePair;
  return proto.ei.ActionKeyValuePair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ActionKeyValuePair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ActionKeyValuePair}
 */
proto.ei.ActionKeyValuePair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ActionKeyValuePair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ActionKeyValuePair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ActionKeyValuePair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ActionKeyValuePair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required string key = 1;
 * @return {string}
 */
proto.ei.ActionKeyValuePair.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ActionKeyValuePair.prototype.setKey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ActionKeyValuePair.prototype.clearKey = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ActionKeyValuePair.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string value = 2;
 * @return {string}
 */
proto.ei.ActionKeyValuePair.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.ActionKeyValuePair.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ActionKeyValuePair.prototype.clearValue = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ActionKeyValuePair.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.GenericAction.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GenericAction.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GenericAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GenericAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GenericAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    advertisingId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    actionName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.ei.ActionKeyValuePair.toObject, includeInstance),
    app: (f = msg.getApp()) && proto.ei.AppInfo.toObject(includeInstance, f),
    device: (f = msg.getDevice()) && proto.ei.DeviceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GenericAction}
 */
proto.ei.GenericAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GenericAction;
  return proto.ei.GenericAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GenericAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GenericAction}
 */
proto.ei.GenericAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdvertisingId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setApproxTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionName(value);
      break;
    case 4:
      var value = new proto.ei.ActionKeyValuePair;
      reader.readMessage(value,proto.ei.ActionKeyValuePair.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 5:
      var value = new proto.ei.AppInfo;
      reader.readMessage(value,proto.ei.AppInfo.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    case 6:
      var value = new proto.ei.DeviceInfo;
      reader.readMessage(value,proto.ei.DeviceInfo.deserializeBinaryFromReader);
      msg.setDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GenericAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GenericAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GenericAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GenericAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ActionKeyValuePair.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.AppInfo.serializeBinaryToWriter
    );
  }
  f = message.getDevice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ei.DeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.GenericAction.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.GenericAction.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GenericAction.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string advertising_id = 7;
 * @return {string}
 */
proto.ei.GenericAction.prototype.getAdvertisingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ei.GenericAction.prototype.setAdvertisingId = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GenericAction.prototype.clearAdvertisingId = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasAdvertisingId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float approx_time = 2;
 * @return {number}
 */
proto.ei.GenericAction.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.GenericAction.prototype.setApproxTime = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GenericAction.prototype.clearApproxTime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string action_name = 3;
 * @return {string}
 */
proto.ei.GenericAction.prototype.getActionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.GenericAction.prototype.setActionName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GenericAction.prototype.clearActionName = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasActionName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ActionKeyValuePair data = 4;
 * @return {!Array<!proto.ei.ActionKeyValuePair>}
 */
proto.ei.GenericAction.prototype.getDataList = function() {
  return /** @type{!Array<!proto.ei.ActionKeyValuePair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ActionKeyValuePair, 4));
};


/** @param {!Array<!proto.ei.ActionKeyValuePair>} value */
proto.ei.GenericAction.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ActionKeyValuePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ActionKeyValuePair}
 */
proto.ei.GenericAction.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ActionKeyValuePair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.GenericAction.prototype.clearDataList = function() {
  this.setDataList([]);
};


/**
 * optional AppInfo app = 5;
 * @return {?proto.ei.AppInfo}
 */
proto.ei.GenericAction.prototype.getApp = function() {
  return /** @type{?proto.ei.AppInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.AppInfo, 5));
};


/** @param {?proto.ei.AppInfo|undefined} value */
proto.ei.GenericAction.prototype.setApp = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.GenericAction.prototype.clearApp = function() {
  this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasApp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DeviceInfo device = 6;
 * @return {?proto.ei.DeviceInfo}
 */
proto.ei.GenericAction.prototype.getDevice = function() {
  return /** @type{?proto.ei.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.DeviceInfo, 6));
};


/** @param {?proto.ei.DeviceInfo|undefined} value */
proto.ei.GenericAction.prototype.setDevice = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.GenericAction.prototype.clearDevice = function() {
  this.setDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GenericAction.prototype.hasDevice = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.VerifyPurchaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.VerifyPurchaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.VerifyPurchaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sku: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    transactionId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    receipt: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    log: (f = msg.getLog()) && proto.ei.GenericAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.VerifyPurchaseRequest}
 */
proto.ei.VerifyPurchaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.VerifyPurchaseRequest;
  return proto.ei.VerifyPurchaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.VerifyPurchaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.VerifyPurchaseRequest}
 */
proto.ei.VerifyPurchaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceipt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 5:
      var value = new proto.ei.GenericAction;
      reader.readMessage(value,proto.ei.GenericAction.deserializeBinaryFromReader);
      msg.setLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.VerifyPurchaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.VerifyPurchaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.VerifyPurchaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLog();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.GenericAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sku = 1;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.VerifyPurchaseRequest.prototype.setSku = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.VerifyPurchaseRequest.prototype.clearSku = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasSku = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string transaction_id = 2;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.VerifyPurchaseRequest.prototype.setTransactionId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.VerifyPurchaseRequest.prototype.clearTransactionId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasTransactionId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string receipt = 3;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getReceipt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.VerifyPurchaseRequest.prototype.setReceipt = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.VerifyPurchaseRequest.prototype.clearReceipt = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasReceipt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string platform = 4;
 * @return {string}
 */
proto.ei.VerifyPurchaseRequest.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.VerifyPurchaseRequest.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.VerifyPurchaseRequest.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GenericAction log = 5;
 * @return {?proto.ei.GenericAction}
 */
proto.ei.VerifyPurchaseRequest.prototype.getLog = function() {
  return /** @type{?proto.ei.GenericAction} */ (
    jspb.Message.getWrapperField(this, proto.ei.GenericAction, 5));
};


/** @param {?proto.ei.GenericAction|undefined} value */
proto.ei.VerifyPurchaseRequest.prototype.setLog = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.VerifyPurchaseRequest.prototype.clearLog = function() {
  this.setLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseRequest.prototype.hasLog = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.VerifyPurchaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.VerifyPurchaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.VerifyPurchaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    verified: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.VerifyPurchaseResponse}
 */
proto.ei.VerifyPurchaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.VerifyPurchaseResponse;
  return proto.ei.VerifyPurchaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.VerifyPurchaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.VerifyPurchaseResponse}
 */
proto.ei.VerifyPurchaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.VerifyPurchaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.VerifyPurchaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.VerifyPurchaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.VerifyPurchaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool verified = 1;
 * @return {boolean}
 */
proto.ei.VerifyPurchaseResponse.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.VerifyPurchaseResponse.prototype.setVerified = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.VerifyPurchaseResponse.prototype.clearVerified = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseResponse.prototype.hasVerified = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.VerifyPurchaseResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.VerifyPurchaseResponse.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.VerifyPurchaseResponse.prototype.clearMessage = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.VerifyPurchaseResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.repeatedFields_ = [3,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    egg: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance),
    goalSetsList: jspb.Message.toObjectList(msg.getGoalSetsList(),
    proto.ei.Contract.GoalSet.toObject, includeInstance),
    coopAllowed: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    maxCoopSize: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    maxBoosts: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    minutesPerToken: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 60.0),
    expirationTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    lengthSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    maxSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    minClientVersion: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    debug: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract}
 */
proto.ei.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract;
  return proto.ei.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract}
 */
proto.ei.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEgg(value);
      break;
    case 3:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    case 16:
      var value = new proto.ei.Contract.GoalSet;
      reader.readMessage(value,proto.ei.Contract.GoalSet.deserializeBinaryFromReader);
      msg.addGoalSets(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopAllowed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxCoopSize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxBoosts(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinutesPerToken(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExpirationTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLengthSeconds(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxSoulEggs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinClientVersion(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
  f = message.getGoalSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.ei.Contract.GoalSet.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.Goal.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.Goal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.Goal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.Goal.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    targetAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    rewardType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    rewardSubType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    targetSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.Goal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.Goal;
  return proto.ei.Contract.Goal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.Goal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.Goal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.GoalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetAmount(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setRewardType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetSoulEggs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.Goal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.Goal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.Goal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.Goal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.GoalType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional GoalType type = 1;
 * @return {!proto.ei.GoalType}
 */
proto.ei.Contract.Goal.prototype.getType = function() {
  return /** @type {!proto.ei.GoalType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.ei.GoalType} value */
proto.ei.Contract.Goal.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.Goal.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double target_amount = 2;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getTargetAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.Contract.Goal.prototype.setTargetAmount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.Goal.prototype.clearTargetAmount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasTargetAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.ei.RewardType}
 */
proto.ei.Contract.Goal.prototype.getRewardType = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/** @param {!proto.ei.RewardType} value */
proto.ei.Contract.Goal.prototype.setRewardType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.Goal.prototype.clearRewardType = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.ei.Contract.Goal.prototype.getRewardSubType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.Contract.Goal.prototype.setRewardSubType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.Goal.prototype.clearRewardSubType = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardSubType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.Contract.Goal.prototype.setRewardAmount = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.Goal.prototype.clearRewardAmount = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double target_soul_eggs = 6;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getTargetSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.ei.Contract.Goal.prototype.setTargetSoulEggs = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.Goal.prototype.clearTargetSoulEggs = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasTargetSoulEggs = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.GoalSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.GoalSet.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.GoalSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.GoalSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GoalSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.GoalSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.GoalSet;
  return proto.ei.Contract.GoalSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.GoalSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.GoalSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.GoalSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.GoalSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.GoalSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GoalSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Goal goals = 1;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.GoalSet.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 1));
};


/** @param {!Array<!proto.ei.Contract.Goal>} value */
proto.ei.Contract.GoalSet.prototype.setGoalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.GoalSet.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Contract.GoalSet.prototype.clearGoalsList = function() {
  this.setGoalsList([]);
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.Contract.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.Contract.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.ei.Contract.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ei.Contract.prototype.setName = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearName = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string description = 10;
 * @return {string}
 */
proto.ei.Contract.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.ei.Contract.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearDescription = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Egg egg = 2;
 * @return {!proto.ei.Egg}
 */
proto.ei.Contract.prototype.getEgg = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/** @param {!proto.ei.Egg} value */
proto.ei.Contract.prototype.setEgg = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearEgg = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasEgg = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Goal goals = 3;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 3));
};


/** @param {!Array<!proto.ei.Contract.Goal>} value */
proto.ei.Contract.prototype.setGoalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Contract.prototype.clearGoalsList = function() {
  this.setGoalsList([]);
};


/**
 * repeated GoalSet goal_sets = 16;
 * @return {!Array<!proto.ei.Contract.GoalSet>}
 */
proto.ei.Contract.prototype.getGoalSetsList = function() {
  return /** @type{!Array<!proto.ei.Contract.GoalSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.GoalSet, 16));
};


/** @param {!Array<!proto.ei.Contract.GoalSet>} value */
proto.ei.Contract.prototype.setGoalSetsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.ei.Contract.GoalSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.prototype.addGoalSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.ei.Contract.GoalSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.Contract.prototype.clearGoalSetsList = function() {
  this.setGoalSetsList([]);
};


/**
 * optional bool coop_allowed = 4;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getCoopAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.Contract.prototype.setCoopAllowed = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearCoopAllowed = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasCoopAllowed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 max_coop_size = 5;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxCoopSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setMaxCoopSize = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearMaxCoopSize = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxCoopSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 max_boosts = 12;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxBoosts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setMaxBoosts = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearMaxBoosts = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxBoosts = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double minutes_per_token = 15;
 * @return {number}
 */
proto.ei.Contract.prototype.getMinutesPerToken = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 60.0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setMinutesPerToken = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearMinutesPerToken = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMinutesPerToken = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double expiration_time = 6;
 * @return {number}
 */
proto.ei.Contract.prototype.getExpirationTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setExpirationTime = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearExpirationTime = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasExpirationTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double length_seconds = 7;
 * @return {number}
 */
proto.ei.Contract.prototype.getLengthSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setLengthSeconds = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearLengthSeconds = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasLengthSeconds = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double max_soul_eggs = 13;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setMaxSoulEggs = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearMaxSoulEggs = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxSoulEggs = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 min_client_version = 14;
 * @return {number}
 */
proto.ei.Contract.prototype.getMinClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.ei.Contract.prototype.setMinClientVersion = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearMinClientVersion = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMinClientVersion = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.ei.Contract.prototype.setDebug = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.Contract.prototype.clearDebug = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractsRequest}
 */
proto.ei.ContractsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractsRequest;
  return proto.ei.ContractsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractsRequest}
 */
proto.ei.ContractsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional double soul_eggs = 1;
 * @return {number}
 */
proto.ei.ContractsRequest.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.ei.ContractsRequest.prototype.setSoulEggs = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractsRequest.prototype.clearSoulEggs = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsRequest.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 client_version = 5;
 * @return {number}
 */
proto.ei.ContractsRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ei.ContractsRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractsRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractsList: jspb.Message.toObjectList(msg.getContractsList(),
    proto.ei.Contract.toObject, includeInstance),
    warningMessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    serverTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    maxEop: jspb.Message.getFieldWithDefault(msg, 3, 1000)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractsResponse}
 */
proto.ei.ContractsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractsResponse;
  return proto.ei.ContractsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractsResponse}
 */
proto.ei.ContractsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract;
      reader.readMessage(value,proto.ei.Contract.deserializeBinaryFromReader);
      msg.addContracts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServerTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxEop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.Contract.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated Contract contracts = 1;
 * @return {!Array<!proto.ei.Contract>}
 */
proto.ei.ContractsResponse.prototype.getContractsList = function() {
  return /** @type{!Array<!proto.ei.Contract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract, 1));
};


/** @param {!Array<!proto.ei.Contract>} value */
proto.ei.ContractsResponse.prototype.setContractsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.Contract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract}
 */
proto.ei.ContractsResponse.prototype.addContracts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.Contract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.ContractsResponse.prototype.clearContractsList = function() {
  this.setContractsList([]);
};


/**
 * optional string warning_message = 4;
 * @return {string}
 */
proto.ei.ContractsResponse.prototype.getWarningMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.ContractsResponse.prototype.setWarningMessage = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractsResponse.prototype.clearWarningMessage = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasWarningMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double server_time = 2;
 * @return {number}
 */
proto.ei.ContractsResponse.prototype.getServerTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.ContractsResponse.prototype.setServerTime = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractsResponse.prototype.clearServerTime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasServerTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 max_eop = 3;
 * @return {number}
 */
proto.ei.ContractsResponse.prototype.getMaxEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 1000));
};


/** @param {number} value */
proto.ei.ContractsResponse.prototype.setMaxEop = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractsResponse.prototype.clearMaxEop = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractsResponse.prototype.hasMaxEop = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusRequest}
 */
proto.ei.ContractCoopStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusRequest;
  return proto.ei.ContractCoopStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusRequest}
 */
proto.ei.ContractCoopStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.ContractCoopStatusRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractCoopStatusResponse.repeatedFields_ = [4,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    totalAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    contributorsList: jspb.Message.toObjectList(msg.getContributorsList(),
    proto.ei.ContractCoopStatusResponse.ContributionInfo.toObject, includeInstance),
    autoGenerated: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    pb_public: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    creatorId: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    allMembersReporting: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    gracePeriodSecondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    giftsList: jspb.Message.toObjectList(msg.getGiftsList(),
    proto.ei.ContractCoopStatusResponse.CoopGift.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse}
 */
proto.ei.ContractCoopStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse;
  return proto.ei.ContractCoopStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse}
 */
proto.ei.ContractCoopStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 4:
      var value = new proto.ei.ContractCoopStatusResponse.ContributionInfo;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinaryFromReader);
      msg.addContributors(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoGenerated(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatorId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllMembersReporting(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGracePeriodSecondsRemaining(value);
      break;
    case 11:
      var value = new proto.ei.ContractCoopStatusResponse.CoopGift;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinaryFromReader);
      msg.addGifts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContributorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ContractCoopStatusResponse.ContributionInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getGiftsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.ContractCoopStatusResponse.CoopGift.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.CoopGift.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.CoopGift.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse.CoopGift;
  return proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.CoopGift.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.CoopGift.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearUserName = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 amount = 2;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.clearAmount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.CoopGift.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusResponse.ContributionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    contributionAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    contributionRate: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    rankChange: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    active: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    timeCheatDetected: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    pushId: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    banVotes: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    boostTokens: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusResponse.ContributionInfo;
  return proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContributionAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContributionRate(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankChange(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTimeCheatDetected(value);
      break;
    case 5:
      var value = /** @type {!proto.aux.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBanVotes(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusResponse.ContributionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {!proto.aux.Platform} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearUserName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double contribution_amount = 3;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getContributionAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setContributionAmount = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearContributionAmount = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasContributionAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double contribution_rate = 6;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getContributionRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setContributionRate = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearContributionRate = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasContributionRate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double soul_power = 11;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setSoulPower = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearSoulPower = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 rank_change = 8;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getRankChange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setRankChange = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearRankChange = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasRankChange = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setActive = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearActive = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasActive = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool time_cheat_detected = 7;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getTimeCheatDetected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setTimeCheatDetected = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearTimeCheatDetected = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasTimeCheatDetected = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional aux.Platform platform = 5;
 * @return {!proto.aux.Platform}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getPlatform = function() {
  return /** @type {!proto.aux.Platform} */ (jspb.Message.getFieldWithDefault(this, 5, 1));
};


/** @param {!proto.aux.Platform} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string push_id = 9;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getPushId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setPushId = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearPushId = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasPushId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 ban_votes = 10;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getBanVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setBanVotes = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearBanVotes = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasBanVotes = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 boost_tokens = 12;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.getBoostTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.setBoostTokens = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.clearBoostTokens = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.ContributionInfo.prototype.hasBoostTokens = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double total_amount = 2;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getTotalAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.prototype.setTotalAmount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearTotalAmount = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasTotalAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string coop_identifier = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ContributionInfo contributors = 4;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse.ContributionInfo>}
 */
proto.ei.ContractCoopStatusResponse.prototype.getContributorsList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse.ContributionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse.ContributionInfo, 4));
};


/** @param {!Array<!proto.ei.ContractCoopStatusResponse.ContributionInfo>} value */
proto.ei.ContractCoopStatusResponse.prototype.setContributorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.ContributionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse.ContributionInfo}
 */
proto.ei.ContractCoopStatusResponse.prototype.addContributors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ContractCoopStatusResponse.ContributionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearContributorsList = function() {
  this.setContributorsList([]);
};


/**
 * optional bool auto_generated = 8;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getAutoGenerated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.ei.ContractCoopStatusResponse.prototype.setAutoGenerated = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearAutoGenerated = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasAutoGenerated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool public = 10;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.ei.ContractCoopStatusResponse.prototype.setPublic = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearPublic = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string creator_id = 9;
 * @return {string}
 */
proto.ei.ContractCoopStatusResponse.prototype.getCreatorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusResponse.prototype.setCreatorId = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearCreatorId = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasCreatorId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double seconds_remaining = 5;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.prototype.setSecondsRemaining = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearSecondsRemaining = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool all_members_reporting = 6;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.getAllMembersReporting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.ei.ContractCoopStatusResponse.prototype.setAllMembersReporting = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearAllMembersReporting = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasAllMembersReporting = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double grace_period_seconds_remaining = 7;
 * @return {number}
 */
proto.ei.ContractCoopStatusResponse.prototype.getGracePeriodSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusResponse.prototype.setGracePeriodSecondsRemaining = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearGracePeriodSecondsRemaining = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusResponse.prototype.hasGracePeriodSecondsRemaining = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated CoopGift gifts = 11;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse.CoopGift>}
 */
proto.ei.ContractCoopStatusResponse.prototype.getGiftsList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse.CoopGift>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse.CoopGift, 11));
};


/** @param {!Array<!proto.ei.ContractCoopStatusResponse.CoopGift>} value */
proto.ei.ContractCoopStatusResponse.prototype.setGiftsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse.CoopGift=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse.CoopGift}
 */
proto.ei.ContractCoopStatusResponse.prototype.addGifts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.ContractCoopStatusResponse.CoopGift, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.ContractCoopStatusResponse.prototype.clearGiftsList = function() {
  this.setGiftsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LocalContract.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LocalContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LocalContract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LocalContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    contract: (f = msg.getContract()) && proto.ei.Contract.toObject(includeInstance, f),
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    accepted: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    timeAccepted: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    cancelled: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    pb_new: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    coopSharedEndTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    coopGracePeriodEndTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f,
    coopContributionFinalized: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    coopLastUploadedContribution: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    coopUserId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    lastAmountWhenRewardGiven: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    numGoalsAchieved: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    boostsUsed: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LocalContract}
 */
proto.ei.LocalContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LocalContract;
  return proto.ei.LocalContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LocalContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LocalContract}
 */
proto.ei.LocalContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract;
      reader.readMessage(value,proto.ei.Contract.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccepted(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeAccepted(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCancelled(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNew(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopSharedEndTime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopGracePeriodEndTime(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopContributionFinalized(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoopLastUploadedContribution(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopUserId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastAmountWhenRewardGiven(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumGoalsAchieved(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostsUsed(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LocalContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LocalContract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LocalContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LocalContract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.Contract.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
};


/**
 * optional Contract contract = 1;
 * @return {?proto.ei.Contract}
 */
proto.ei.LocalContract.prototype.getContract = function() {
  return /** @type{?proto.ei.Contract} */ (
    jspb.Message.getWrapperField(this, proto.ei.Contract, 1));
};


/** @param {?proto.ei.Contract|undefined} value */
proto.ei.LocalContract.prototype.setContract = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.LocalContract.prototype.clearContract = function() {
  this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasContract = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.LocalContract.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.LocalContract.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool accepted = 7;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.ei.LocalContract.prototype.setAccepted = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearAccepted = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasAccepted = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double time_accepted = 3;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getTimeAccepted = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setTimeAccepted = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearTimeAccepted = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasTimeAccepted = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool cancelled = 4;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getCancelled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.LocalContract.prototype.setCancelled = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCancelled = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCancelled = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool new = 8;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.ei.LocalContract.prototype.setNew = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearNew = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasNew = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double coop_shared_end_time = 5;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopSharedEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setCoopSharedEndTime = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCoopSharedEndTime = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopSharedEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double coop_grace_period_end_time = 9;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopGracePeriodEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setCoopGracePeriodEndTime = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCoopGracePeriodEndTime = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopGracePeriodEndTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool coop_contribution_finalized = 10;
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.getCoopContributionFinalized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.ei.LocalContract.prototype.setCoopContributionFinalized = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCoopContributionFinalized = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopContributionFinalized = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double coop_last_uploaded_contribution = 11;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getCoopLastUploadedContribution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setCoopLastUploadedContribution = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCoopLastUploadedContribution = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopLastUploadedContribution = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string coop_user_id = 13;
 * @return {string}
 */
proto.ei.LocalContract.prototype.getCoopUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.ei.LocalContract.prototype.setCoopUserId = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearCoopUserId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasCoopUserId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double last_amount_when_reward_given = 6;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getLastAmountWhenRewardGiven = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setLastAmountWhenRewardGiven = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearLastAmountWhenRewardGiven = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasLastAmountWhenRewardGiven = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 num_goals_achieved = 14;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getNumGoalsAchieved = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setNumGoalsAchieved = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearNumGoalsAchieved = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasNumGoalsAchieved = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 boosts_used = 12;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getBoostsUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setBoostsUsed = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearBoostsUsed = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasBoostsUsed = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 league = 15;
 * @return {number}
 */
proto.ei.LocalContract.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.ei.LocalContract.prototype.setLeague = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LocalContract.prototype.clearLeague = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LocalContract.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.MyContracts.repeatedFields_ = [3,1,2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MyContracts.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MyContracts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MyContracts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MyContracts.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdsSeenList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    contractsList: jspb.Message.toObjectList(msg.getContractsList(),
    proto.ei.LocalContract.toObject, includeInstance),
    archiveList: jspb.Message.toObjectList(msg.getArchiveList(),
    proto.ei.LocalContract.toObject, includeInstance),
    currentCoopStatusesList: jspb.Message.toObjectList(msg.getCurrentCoopStatusesList(),
    proto.ei.ContractCoopStatusResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MyContracts}
 */
proto.ei.MyContracts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MyContracts;
  return proto.ei.MyContracts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MyContracts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MyContracts}
 */
proto.ei.MyContracts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addContractIdsSeen(value);
      break;
    case 1:
      var value = new proto.ei.LocalContract;
      reader.readMessage(value,proto.ei.LocalContract.deserializeBinaryFromReader);
      msg.addContracts(value);
      break;
    case 2:
      var value = new proto.ei.LocalContract;
      reader.readMessage(value,proto.ei.LocalContract.deserializeBinaryFromReader);
      msg.addArchive(value);
      break;
    case 4:
      var value = new proto.ei.ContractCoopStatusResponse;
      reader.readMessage(value,proto.ei.ContractCoopStatusResponse.deserializeBinaryFromReader);
      msg.addCurrentCoopStatuses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MyContracts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MyContracts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MyContracts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MyContracts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractIdsSeenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LocalContract.serializeBinaryToWriter
    );
  }
  f = message.getArchiveList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.LocalContract.serializeBinaryToWriter
    );
  }
  f = message.getCurrentCoopStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ContractCoopStatusResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string contract_ids_seen = 3;
 * @return {!Array<string>}
 */
proto.ei.MyContracts.prototype.getContractIdsSeenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.ei.MyContracts.prototype.setContractIdsSeenList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ei.MyContracts.prototype.addContractIdsSeen = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.MyContracts.prototype.clearContractIdsSeenList = function() {
  this.setContractIdsSeenList([]);
};


/**
 * repeated LocalContract contracts = 1;
 * @return {!Array<!proto.ei.LocalContract>}
 */
proto.ei.MyContracts.prototype.getContractsList = function() {
  return /** @type{!Array<!proto.ei.LocalContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LocalContract, 1));
};


/** @param {!Array<!proto.ei.LocalContract>} value */
proto.ei.MyContracts.prototype.setContractsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LocalContract}
 */
proto.ei.MyContracts.prototype.addContracts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.MyContracts.prototype.clearContractsList = function() {
  this.setContractsList([]);
};


/**
 * repeated LocalContract archive = 2;
 * @return {!Array<!proto.ei.LocalContract>}
 */
proto.ei.MyContracts.prototype.getArchiveList = function() {
  return /** @type{!Array<!proto.ei.LocalContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LocalContract, 2));
};


/** @param {!Array<!proto.ei.LocalContract>} value */
proto.ei.MyContracts.prototype.setArchiveList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LocalContract}
 */
proto.ei.MyContracts.prototype.addArchive = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.MyContracts.prototype.clearArchiveList = function() {
  this.setArchiveList([]);
};


/**
 * repeated ContractCoopStatusResponse current_coop_statuses = 4;
 * @return {!Array<!proto.ei.ContractCoopStatusResponse>}
 */
proto.ei.MyContracts.prototype.getCurrentCoopStatusesList = function() {
  return /** @type{!Array<!proto.ei.ContractCoopStatusResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractCoopStatusResponse, 4));
};


/** @param {!Array<!proto.ei.ContractCoopStatusResponse>} value */
proto.ei.MyContracts.prototype.setCurrentCoopStatusesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ContractCoopStatusResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractCoopStatusResponse}
 */
proto.ei.MyContracts.prototype.addCurrentCoopStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ContractCoopStatusResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.MyContracts.prototype.clearCurrentCoopStatusesList = function() {
  this.setCurrentCoopStatusesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.QueryCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.QueryCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.QueryCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.QueryCoopRequest}
 */
proto.ei.QueryCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.QueryCoopRequest;
  return proto.ei.QueryCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.QueryCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.QueryCoopRequest}
 */
proto.ei.QueryCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.QueryCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.QueryCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.QueryCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.QueryCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.QueryCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.QueryCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.QueryCoopRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 league = 4;
 * @return {number}
 */
proto.ei.QueryCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ei.QueryCoopRequest.prototype.setLeague = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopRequest.prototype.clearLeague = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 client_version = 3;
 * @return {number}
 */
proto.ei.QueryCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ei.QueryCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.QueryCoopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.QueryCoopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.QueryCoopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    exists: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    full: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    differentLeague: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    banned: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.QueryCoopResponse}
 */
proto.ei.QueryCoopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.QueryCoopResponse;
  return proto.ei.QueryCoopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.QueryCoopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.QueryCoopResponse}
 */
proto.ei.QueryCoopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDifferentLeague(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBanned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.QueryCoopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.QueryCoopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.QueryCoopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.QueryCoopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool exists = 1;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getExists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.QueryCoopResponse.prototype.setExists = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopResponse.prototype.clearExists = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasExists = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool full = 2;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.QueryCoopResponse.prototype.setFull = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopResponse.prototype.clearFull = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasFull = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool different_league = 4;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getDifferentLeague = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.QueryCoopResponse.prototype.setDifferentLeague = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopResponse.prototype.clearDifferentLeague = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasDifferentLeague = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool banned = 3;
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.getBanned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ei.QueryCoopResponse.prototype.setBanned = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.QueryCoopResponse.prototype.clearBanned = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.QueryCoopResponse.prototype.hasBanned = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CreateCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CreateCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CreateCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CreateCoopRequest}
 */
proto.ei.CreateCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CreateCoopRequest;
  return proto.ei.CreateCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CreateCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CreateCoopRequest}
 */
proto.ei.CreateCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 6:
      var value = /** @type {!proto.aux.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CreateCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CreateCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CreateCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {!proto.aux.Platform} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.CreateCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.CreateCoopRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double seconds_remaining = 3;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.CreateCoopRequest.prototype.setSecondsRemaining = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearSecondsRemaining = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.CreateCoopRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_name = 5;
 * @return {string}
 */
proto.ei.CreateCoopRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ei.CreateCoopRequest.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearUserName = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double soul_power = 8;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.ei.CreateCoopRequest.prototype.setSoulPower = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearSoulPower = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 league = 9;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ei.CreateCoopRequest.prototype.setLeague = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearLeague = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional aux.Platform platform = 6;
 * @return {!proto.aux.Platform}
 */
proto.ei.CreateCoopRequest.prototype.getPlatform = function() {
  return /** @type {!proto.aux.Platform} */ (jspb.Message.getFieldWithDefault(this, 6, 1));
};


/** @param {!proto.aux.Platform} value */
proto.ei.CreateCoopRequest.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.CreateCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.CreateCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.CreateCoopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.CreateCoopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.CreateCoopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.CreateCoopResponse}
 */
proto.ei.CreateCoopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.CreateCoopResponse;
  return proto.ei.CreateCoopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.CreateCoopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.CreateCoopResponse}
 */
proto.ei.CreateCoopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.CreateCoopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.CreateCoopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.CreateCoopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.CreateCoopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.CreateCoopResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.CreateCoopResponse.prototype.setSuccess = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopResponse.prototype.clearSuccess = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.CreateCoopResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.CreateCoopResponse.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.CreateCoopResponse.prototype.clearMessage = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.CreateCoopResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.JoinCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.JoinCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.JoinCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.JoinCoopRequest}
 */
proto.ei.JoinCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.JoinCoopRequest;
  return proto.ei.JoinCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.JoinCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.JoinCoopRequest}
 */
proto.ei.JoinCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 5:
      var value = /** @type {!proto.aux.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.JoinCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.JoinCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.JoinCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {!proto.aux.Platform} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.JoinCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.JoinCoopRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.JoinCoopRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string user_name = 4;
 * @return {string}
 */
proto.ei.JoinCoopRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.JoinCoopRequest.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearUserName = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double soul_power = 8;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.ei.JoinCoopRequest.prototype.setSoulPower = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearSoulPower = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 league = 9;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ei.JoinCoopRequest.prototype.setLeague = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearLeague = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional aux.Platform platform = 5;
 * @return {!proto.aux.Platform}
 */
proto.ei.JoinCoopRequest.prototype.getPlatform = function() {
  return /** @type {!proto.aux.Platform} */ (jspb.Message.getFieldWithDefault(this, 5, 1));
};


/** @param {!proto.aux.Platform} value */
proto.ei.JoinCoopRequest.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.JoinCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.JoinCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.JoinCoopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.JoinCoopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.JoinCoopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    banned: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.JoinCoopResponse}
 */
proto.ei.JoinCoopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.JoinCoopResponse;
  return proto.ei.JoinCoopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.JoinCoopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.JoinCoopResponse}
 */
proto.ei.JoinCoopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBanned(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.JoinCoopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.JoinCoopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.JoinCoopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.JoinCoopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.JoinCoopResponse.prototype.setSuccess = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopResponse.prototype.clearSuccess = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.JoinCoopResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.JoinCoopResponse.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopResponse.prototype.clearMessage = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool banned = 4;
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.getBanned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.JoinCoopResponse.prototype.setBanned = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopResponse.prototype.clearBanned = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasBanned = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string coop_identifier = 5;
 * @return {string}
 */
proto.ei.JoinCoopResponse.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ei.JoinCoopResponse.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopResponse.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double seconds_remaining = 3;
 * @return {number}
 */
proto.ei.JoinCoopResponse.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.ei.JoinCoopResponse.prototype.setSecondsRemaining = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.JoinCoopResponse.prototype.clearSecondsRemaining = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.JoinCoopResponse.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AutoJoinCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AutoJoinCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AutoJoinCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AutoJoinCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    userName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    league: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AutoJoinCoopRequest}
 */
proto.ei.AutoJoinCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AutoJoinCoopRequest;
  return proto.ei.AutoJoinCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AutoJoinCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AutoJoinCoopRequest}
 */
proto.ei.AutoJoinCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeague(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 6:
      var value = /** @type {!proto.aux.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AutoJoinCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AutoJoinCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AutoJoinCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AutoJoinCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {!proto.aux.Platform} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.AutoJoinCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.AutoJoinCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.ei.AutoJoinCoopRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.AutoJoinCoopRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.ei.AutoJoinCoopRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.AutoJoinCoopRequest.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearUserName = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double soul_power = 4;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ei.AutoJoinCoopRequest.prototype.setSoulPower = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearSoulPower = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 league = 8;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getLeague = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.ei.AutoJoinCoopRequest.prototype.setLeague = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearLeague = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasLeague = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double seconds_remaining = 5;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.AutoJoinCoopRequest.prototype.setSecondsRemaining = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearSecondsRemaining = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional aux.Platform platform = 6;
 * @return {!proto.aux.Platform}
 */
proto.ei.AutoJoinCoopRequest.prototype.getPlatform = function() {
  return /** @type {!proto.aux.Platform} */ (jspb.Message.getFieldWithDefault(this, 6, 1));
};


/** @param {!proto.aux.Platform} value */
proto.ei.AutoJoinCoopRequest.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearPlatform = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.AutoJoinCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.AutoJoinCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AutoJoinCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AutoJoinCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UpdateCoopPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UpdateCoopPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    pb_public: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UpdateCoopPermissionsRequest}
 */
proto.ei.UpdateCoopPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UpdateCoopPermissionsRequest;
  return proto.ei.UpdateCoopPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UpdateCoopPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UpdateCoopPermissionsRequest}
 */
proto.ei.UpdateCoopPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UpdateCoopPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UpdateCoopPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.UpdateCoopPermissionsRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.UpdateCoopPermissionsRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string requesting_user_id = 3;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.UpdateCoopPermissionsRequest.prototype.setRequestingUserId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearRequestingUserId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool public = 4;
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.ei.UpdateCoopPermissionsRequest.prototype.setPublic = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearPublic = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasPublic = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 client_version = 5;
 * @return {number}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ei.UpdateCoopPermissionsRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UpdateCoopPermissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UpdateCoopPermissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UpdateCoopPermissionsResponse}
 */
proto.ei.UpdateCoopPermissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UpdateCoopPermissionsResponse;
  return proto.ei.UpdateCoopPermissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UpdateCoopPermissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UpdateCoopPermissionsResponse}
 */
proto.ei.UpdateCoopPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UpdateCoopPermissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UpdateCoopPermissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UpdateCoopPermissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.UpdateCoopPermissionsResponse.prototype.setSuccess = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.clearSuccess = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.UpdateCoopPermissionsResponse.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.clearMessage = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UpdateCoopPermissionsResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaveCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaveCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaveCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaveCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaveCoopRequest}
 */
proto.ei.LeaveCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaveCoopRequest;
  return proto.ei.LeaveCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaveCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaveCoopRequest}
 */
proto.ei.LeaveCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaveCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaveCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaveCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaveCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.LeaveCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.LeaveCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LeaveCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.LeaveCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.LeaveCoopRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LeaveCoopRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.LeaveCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.LeaveCoopRequest.prototype.setPlayerIdentifier = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LeaveCoopRequest.prototype.clearPlayerIdentifier = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.LeaveCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.LeaveCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.LeaveCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaveCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GiftPlayerCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GiftPlayerCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GiftPlayerCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GiftPlayerCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requestingUserName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    amount: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GiftPlayerCoopRequest}
 */
proto.ei.GiftPlayerCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GiftPlayerCoopRequest;
  return proto.ei.GiftPlayerCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GiftPlayerCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GiftPlayerCoopRequest}
 */
proto.ei.GiftPlayerCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GiftPlayerCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GiftPlayerCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GiftPlayerCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GiftPlayerCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.GiftPlayerCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.GiftPlayerCoopRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.GiftPlayerCoopRequest.prototype.setPlayerIdentifier = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearPlayerIdentifier = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string requesting_user_id = 4;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.GiftPlayerCoopRequest.prototype.setRequestingUserId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearRequestingUserId = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string requesting_user_name = 6;
 * @return {string}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getRequestingUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ei.GiftPlayerCoopRequest.prototype.setRequestingUserName = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearRequestingUserName = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasRequestingUserName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 amount = 5;
 * @return {number}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ei.GiftPlayerCoopRequest.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearAmount = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.GiftPlayerCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.GiftPlayerCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GiftPlayerCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GiftPlayerCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.KickPlayerCoopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.KickPlayerCoopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.KickPlayerCoopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.KickPlayerCoopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdentifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    playerIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    requestingUserId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.KickPlayerCoopRequest}
 */
proto.ei.KickPlayerCoopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.KickPlayerCoopRequest;
  return proto.ei.KickPlayerCoopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.KickPlayerCoopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.KickPlayerCoopRequest}
 */
proto.ei.KickPlayerCoopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestingUserId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.KickPlayerCoopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.KickPlayerCoopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.KickPlayerCoopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.KickPlayerCoopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string contract_identifier = 1;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.KickPlayerCoopRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.KickPlayerCoopRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_identifier = 2;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.KickPlayerCoopRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.KickPlayerCoopRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_identifier = 3;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getPlayerIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.KickPlayerCoopRequest.prototype.setPlayerIdentifier = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.KickPlayerCoopRequest.prototype.clearPlayerIdentifier = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasPlayerIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string requesting_user_id = 4;
 * @return {string}
 */
proto.ei.KickPlayerCoopRequest.prototype.getRequestingUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.KickPlayerCoopRequest.prototype.setRequestingUserId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.KickPlayerCoopRequest.prototype.clearRequestingUserId = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasRequestingUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 client_version = 7;
 * @return {number}
 */
proto.ei.KickPlayerCoopRequest.prototype.getClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.KickPlayerCoopRequest.prototype.setClientVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.KickPlayerCoopRequest.prototype.clearClientVersion = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.KickPlayerCoopRequest.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    contractIdentifier: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    coopIdentifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    pushUserId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    amount: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    rate: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    timeCheatsDetected: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    soulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    boostTokens: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest}
 */
proto.ei.ContractCoopStatusUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusUpdateRequest;
  return proto.ei.ContractCoopStatusUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusUpdateRequest}
 */
proto.ei.ContractCoopStatusUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractIdentifier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoopIdentifier(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeCheatsDetected(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulPower(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoostTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string contract_identifier = 2;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getContractIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setContractIdentifier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearContractIdentifier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasContractIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string coop_identifier = 3;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getCoopIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setCoopIdentifier = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearCoopIdentifier = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasCoopIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string push_user_id = 8;
 * @return {string}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getPushUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setPushUserId = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearPushUserId = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasPushUserId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearAmount = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double rate = 5;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setRate = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearRate = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasRate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 time_cheats_detected = 6;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getTimeCheatsDetected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setTimeCheatsDetected = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearTimeCheatsDetected = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasTimeCheatsDetected = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double soul_power = 7;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setSoulPower = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearSoulPower = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasSoulPower = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 boost_tokens = 9;
 * @return {number}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.getBoostTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ei.ContractCoopStatusUpdateRequest.prototype.setBoostTokens = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.clearBoostTokens = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateRequest.prototype.hasBoostTokens = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractCoopStatusUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractCoopStatusUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    finalized: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse}
 */
proto.ei.ContractCoopStatusUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractCoopStatusUpdateResponse;
  return proto.ei.ContractCoopStatusUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractCoopStatusUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractCoopStatusUpdateResponse}
 */
proto.ei.ContractCoopStatusUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinalized(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractCoopStatusUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractCoopStatusUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractCoopStatusUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool finalized = 1;
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.getFinalized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ei.ContractCoopStatusUpdateResponse.prototype.setFinalized = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.clearFinalized = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractCoopStatusUpdateResponse.prototype.hasFinalized = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserDataInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserDataInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserDataInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    deviceId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    backupChecksum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserDataInfoRequest}
 */
proto.ei.UserDataInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserDataInfoRequest;
  return proto.ei.UserDataInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserDataInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserDataInfoRequest}
 */
proto.ei.UserDataInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBackupChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserDataInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserDataInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserDataInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.UserDataInfoRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.UserDataInfoRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UserDataInfoRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.ei.UserDataInfoRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.UserDataInfoRequest.prototype.setDeviceId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UserDataInfoRequest.prototype.clearDeviceId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 backup_checksum = 3;
 * @return {number}
 */
proto.ei.UserDataInfoRequest.prototype.getBackupChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ei.UserDataInfoRequest.prototype.setBackupChecksum = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UserDataInfoRequest.prototype.clearBackupChecksum = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoRequest.prototype.hasBackupChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.UserDataInfoResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserDataInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserDataInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserDataInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupChecksum: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    backupTotalCash: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    coopMembershipsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserDataInfoResponse}
 */
proto.ei.UserDataInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserDataInfoResponse;
  return proto.ei.UserDataInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserDataInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserDataInfoResponse}
 */
proto.ei.UserDataInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBackupChecksum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBackupTotalCash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCoopMemberships(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserDataInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserDataInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserDataInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserDataInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCoopMembershipsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional uint64 backup_checksum = 1;
 * @return {number}
 */
proto.ei.UserDataInfoResponse.prototype.getBackupChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ei.UserDataInfoResponse.prototype.setBackupChecksum = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UserDataInfoResponse.prototype.clearBackupChecksum = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoResponse.prototype.hasBackupChecksum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double backup_total_cash = 2;
 * @return {number}
 */
proto.ei.UserDataInfoResponse.prototype.getBackupTotalCash = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.ei.UserDataInfoResponse.prototype.setBackupTotalCash = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.UserDataInfoResponse.prototype.clearBackupTotalCash = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserDataInfoResponse.prototype.hasBackupTotalCash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string coop_memberships = 3;
 * @return {!Array<string>}
 */
proto.ei.UserDataInfoResponse.prototype.getCoopMembershipsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.ei.UserDataInfoResponse.prototype.setCoopMembershipsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ei.UserDataInfoResponse.prototype.addCoopMemberships = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.UserDataInfoResponse.prototype.clearCoopMembershipsList = function() {
  this.setCoopMembershipsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ClearAllUserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ClearAllUserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ClearAllUserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ClearAllUserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    deviceId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    backupChecksum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ClearAllUserDataRequest}
 */
proto.ei.ClearAllUserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ClearAllUserDataRequest;
  return proto.ei.ClearAllUserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ClearAllUserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ClearAllUserDataRequest}
 */
proto.ei.ClearAllUserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBackupChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ClearAllUserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ClearAllUserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ClearAllUserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ClearAllUserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ClearAllUserDataRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ClearAllUserDataRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ClearAllUserDataRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.ei.ClearAllUserDataRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.ClearAllUserDataRequest.prototype.setDeviceId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ClearAllUserDataRequest.prototype.clearDeviceId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 backup_checksum = 3;
 * @return {number}
 */
proto.ei.ClearAllUserDataRequest.prototype.getBackupChecksum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ei.ClearAllUserDataRequest.prototype.setBackupChecksum = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ClearAllUserDataRequest.prototype.clearBackupChecksum = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ClearAllUserDataRequest.prototype.hasBackupChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ServerGift.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ServerGift.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ServerGift} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ServerGift.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    rewardType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    rewardSubType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ServerGift}
 */
proto.ei.ServerGift.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ServerGift;
  return proto.ei.ServerGift.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ServerGift} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ServerGift}
 */
proto.ei.ServerGift.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setRewardType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ServerGift.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ServerGift.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ServerGift} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ServerGift.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.ServerGift.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.ServerGift.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ServerGift.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.ei.RewardType}
 */
proto.ei.ServerGift.prototype.getRewardType = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/** @param {!proto.ei.RewardType} value */
proto.ei.ServerGift.prototype.setRewardType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ServerGift.prototype.clearRewardType = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.ei.ServerGift.prototype.getRewardSubType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.ServerGift.prototype.setRewardSubType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ServerGift.prototype.clearRewardSubType = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasRewardSubType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.ei.ServerGift.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.ServerGift.prototype.setRewardAmount = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.ServerGift.prototype.clearRewardAmount = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ServerGift.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.PeriodicalsResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.PeriodicalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.PeriodicalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.PeriodicalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PeriodicalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sales: (f = msg.getSales()) && proto.ei.SalesInfo.toObject(includeInstance, f),
    events: (f = msg.getEvents()) && proto.ei.EggIncCurrentEvents.toObject(includeInstance, f),
    contracts: (f = msg.getContracts()) && proto.ei.ContractsResponse.toObject(includeInstance, f),
    giftsList: jspb.Message.toObjectList(msg.getGiftsList(),
    proto.ei.ServerGift.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.PeriodicalsResponse}
 */
proto.ei.PeriodicalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.PeriodicalsResponse;
  return proto.ei.PeriodicalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.PeriodicalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.PeriodicalsResponse}
 */
proto.ei.PeriodicalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.SalesInfo;
      reader.readMessage(value,proto.ei.SalesInfo.deserializeBinaryFromReader);
      msg.setSales(value);
      break;
    case 2:
      var value = new proto.ei.EggIncCurrentEvents;
      reader.readMessage(value,proto.ei.EggIncCurrentEvents.deserializeBinaryFromReader);
      msg.setEvents(value);
      break;
    case 3:
      var value = new proto.ei.ContractsResponse;
      reader.readMessage(value,proto.ei.ContractsResponse.deserializeBinaryFromReader);
      msg.setContracts(value);
      break;
    case 4:
      var value = new proto.ei.ServerGift;
      reader.readMessage(value,proto.ei.ServerGift.deserializeBinaryFromReader);
      msg.addGifts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.PeriodicalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.PeriodicalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.PeriodicalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.PeriodicalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSales();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.SalesInfo.serializeBinaryToWriter
    );
  }
  f = message.getEvents();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.EggIncCurrentEvents.serializeBinaryToWriter
    );
  }
  f = message.getContracts();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.ContractsResponse.serializeBinaryToWriter
    );
  }
  f = message.getGiftsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ServerGift.serializeBinaryToWriter
    );
  }
};


/**
 * optional SalesInfo sales = 1;
 * @return {?proto.ei.SalesInfo}
 */
proto.ei.PeriodicalsResponse.prototype.getSales = function() {
  return /** @type{?proto.ei.SalesInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.SalesInfo, 1));
};


/** @param {?proto.ei.SalesInfo|undefined} value */
proto.ei.PeriodicalsResponse.prototype.setSales = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.PeriodicalsResponse.prototype.clearSales = function() {
  this.setSales(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasSales = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EggIncCurrentEvents events = 2;
 * @return {?proto.ei.EggIncCurrentEvents}
 */
proto.ei.PeriodicalsResponse.prototype.getEvents = function() {
  return /** @type{?proto.ei.EggIncCurrentEvents} */ (
    jspb.Message.getWrapperField(this, proto.ei.EggIncCurrentEvents, 2));
};


/** @param {?proto.ei.EggIncCurrentEvents|undefined} value */
proto.ei.PeriodicalsResponse.prototype.setEvents = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.PeriodicalsResponse.prototype.clearEvents = function() {
  this.setEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasEvents = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractsResponse contracts = 3;
 * @return {?proto.ei.ContractsResponse}
 */
proto.ei.PeriodicalsResponse.prototype.getContracts = function() {
  return /** @type{?proto.ei.ContractsResponse} */ (
    jspb.Message.getWrapperField(this, proto.ei.ContractsResponse, 3));
};


/** @param {?proto.ei.ContractsResponse|undefined} value */
proto.ei.PeriodicalsResponse.prototype.setContracts = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ei.PeriodicalsResponse.prototype.clearContracts = function() {
  this.setContracts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.PeriodicalsResponse.prototype.hasContracts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ServerGift gifts = 4;
 * @return {!Array<!proto.ei.ServerGift>}
 */
proto.ei.PeriodicalsResponse.prototype.getGiftsList = function() {
  return /** @type{!Array<!proto.ei.ServerGift>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ServerGift, 4));
};


/** @param {!Array<!proto.ei.ServerGift>} value */
proto.ei.PeriodicalsResponse.prototype.setGiftsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ServerGift=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ServerGift}
 */
proto.ei.PeriodicalsResponse.prototype.addGifts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ServerGift, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ei.PeriodicalsResponse.prototype.clearGiftsList = function() {
  this.setGiftsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.GetPeriodicalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.GetPeriodicalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.GetPeriodicalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GetPeriodicalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    piggyFull: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    piggyFoundFull: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    secondsFullRealtime: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    secondsFullGametime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    lostIncrements: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    currentClientVersion: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    debug: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.GetPeriodicalsRequest}
 */
proto.ei.GetPeriodicalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.GetPeriodicalsRequest;
  return proto.ei.GetPeriodicalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.GetPeriodicalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.GetPeriodicalsRequest}
 */
proto.ei.GetPeriodicalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFull(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPiggyFoundFull(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullRealtime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsFullGametime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLostIncrements(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentClientVersion(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.GetPeriodicalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.GetPeriodicalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.GetPeriodicalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.GetPeriodicalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.GetPeriodicalsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.GetPeriodicalsRequest.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool piggy_full = 2;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getPiggyFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.ei.GetPeriodicalsRequest.prototype.setPiggyFull = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearPiggyFull = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasPiggyFull = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool piggy_found_full = 3;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getPiggyFoundFull = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ei.GetPeriodicalsRequest.prototype.setPiggyFoundFull = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearPiggyFoundFull = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasPiggyFoundFull = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double seconds_full_realtime = 4;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getSecondsFullRealtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.ei.GetPeriodicalsRequest.prototype.setSecondsFullRealtime = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearSecondsFullRealtime = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasSecondsFullRealtime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double seconds_full_gametime = 5;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getSecondsFullGametime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.ei.GetPeriodicalsRequest.prototype.setSecondsFullGametime = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearSecondsFullGametime = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasSecondsFullGametime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 lost_increments = 7;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getLostIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ei.GetPeriodicalsRequest.prototype.setLostIncrements = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearLostIncrements = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasLostIncrements = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double soul_eggs = 8;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.ei.GetPeriodicalsRequest.prototype.setSoulEggs = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearSoulEggs = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 current_client_version = 10;
 * @return {number}
 */
proto.ei.GetPeriodicalsRequest.prototype.getCurrentClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.ei.GetPeriodicalsRequest.prototype.setCurrentClientVersion = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearCurrentClientVersion = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasCurrentClientVersion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.ei.GetPeriodicalsRequest.prototype.setDebug = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.GetPeriodicalsRequest.prototype.clearDebug = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.GetPeriodicalsRequest.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AdAttributionRawData.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AdAttributionRawData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AdAttributionRawData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRawData.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceAdId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    userId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    adNetwork: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    jsonData: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AdAttributionRawData}
 */
proto.ei.AdAttributionRawData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AdAttributionRawData;
  return proto.ei.AdAttributionRawData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AdAttributionRawData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AdAttributionRawData}
 */
proto.ei.AdAttributionRawData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAdId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdNetwork(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AdAttributionRawData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AdAttributionRawData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AdAttributionRawData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRawData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string device_ad_id = 1;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getDeviceAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRawData.prototype.setDeviceAdId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRawData.prototype.clearDeviceAdId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasDeviceAdId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRawData.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRawData.prototype.clearUserId = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ad_network = 2;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getAdNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRawData.prototype.setAdNetwork = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRawData.prototype.clearAdNetwork = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasAdNetwork = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string json_data = 3;
 * @return {string}
 */
proto.ei.AdAttributionRawData.prototype.getJsonData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRawData.prototype.setJsonData = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRawData.prototype.clearJsonData = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRawData.prototype.hasJsonData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AdAttributionRow.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AdAttributionRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AdAttributionRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    adId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    adNetwork: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    campaign: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    keyword: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    extra: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    clickDate: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    downloadDate: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    approxTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AdAttributionRow}
 */
proto.ei.AdAttributionRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AdAttributionRow;
  return proto.ei.AdAttributionRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AdAttributionRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AdAttributionRow}
 */
proto.ei.AdAttributionRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdNetwork(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaign(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtra(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setClickDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadDate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setApproxTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AdAttributionRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AdAttributionRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AdAttributionRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRow.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearUserId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ad_id = 2;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRow.prototype.setAdId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearAdId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasAdId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ad_network = 3;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getAdNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRow.prototype.setAdNetwork = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearAdNetwork = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasAdNetwork = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string campaign = 4;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getCampaign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRow.prototype.setCampaign = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearCampaign = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasCampaign = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string keyword = 5;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRow.prototype.setKeyword = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearKeyword = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasKeyword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string extra = 6;
 * @return {string}
 */
proto.ei.AdAttributionRow.prototype.getExtra = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ei.AdAttributionRow.prototype.setExtra = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearExtra = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float click_date = 7;
 * @return {number}
 */
proto.ei.AdAttributionRow.prototype.getClickDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.ei.AdAttributionRow.prototype.setClickDate = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearClickDate = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasClickDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float download_date = 8;
 * @return {number}
 */
proto.ei.AdAttributionRow.prototype.getDownloadDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.ei.AdAttributionRow.prototype.setDownloadDate = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearDownloadDate = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasDownloadDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float approx_time = 9;
 * @return {number}
 */
proto.ei.AdAttributionRow.prototype.getApproxTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.ei.AdAttributionRow.prototype.setApproxTime = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionRow.prototype.clearApproxTime = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionRow.prototype.hasApproxTime = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.AdAttributionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.AdAttributionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.AdAttributionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceAdId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    networkName: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    attribution: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    orgName: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    orgId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    campaignName: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    campaignId: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    clickDate: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    conversionDate: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    conversionType: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    geo: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    adgroupName: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    adgroupId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    keyword: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    keywordId: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    keywordExtra: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    creativesetName: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    creativesetId: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.AdAttributionInfo}
 */
proto.ei.AdAttributionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.AdAttributionInfo;
  return proto.ei.AdAttributionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.AdAttributionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.AdAttributionInfo}
 */
proto.ei.AdAttributionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAdId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttribution(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClickDate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionDate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeo(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdgroupName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdgroupId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywordId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywordExtra(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreativesetName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreativesetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.AdAttributionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.AdAttributionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.AdAttributionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.AdAttributionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string device_ad_id = 1;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getDeviceAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setDeviceAdId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearDeviceAdId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasDeviceAdId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string network_name = 2;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getNetworkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setNetworkName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearNetworkName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasNetworkName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool attribution = 3;
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.getAttribution = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ei.AdAttributionInfo.prototype.setAttribution = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearAttribution = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasAttribution = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string org_name = 4;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getOrgName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setOrgName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearOrgName = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasOrgName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string org_id = 5;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setOrgId = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearOrgId = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasOrgId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string campaign_name = 6;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCampaignName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setCampaignName = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearCampaignName = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCampaignName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string campaign_id = 7;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCampaignId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setCampaignId = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearCampaignId = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCampaignId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string click_date = 8;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getClickDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setClickDate = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearClickDate = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasClickDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string conversion_date = 9;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getConversionDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setConversionDate = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearConversionDate = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasConversionDate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string conversion_type = 10;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getConversionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setConversionType = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearConversionType = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasConversionType = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string geo = 11;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getGeo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setGeo = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearGeo = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasGeo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string adgroup_name = 12;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getAdgroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setAdgroupName = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearAdgroupName = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasAdgroupName = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string adgroup_id = 13;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getAdgroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setAdgroupId = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearAdgroupId = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasAdgroupId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string keyword = 14;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setKeyword = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearKeyword = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasKeyword = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string keyword_id = 15;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getKeywordId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setKeywordId = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearKeywordId = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasKeywordId = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string keyword_extra = 16;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getKeywordExtra = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setKeywordExtra = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearKeywordExtra = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasKeywordExtra = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string creativeset_name = 17;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCreativesetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setCreativesetName = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearCreativesetName = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCreativesetName = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string creativeset_id = 18;
 * @return {string}
 */
proto.ei.AdAttributionInfo.prototype.getCreativesetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.ei.AdAttributionInfo.prototype.setCreativesetId = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 */
proto.ei.AdAttributionInfo.prototype.clearCreativesetId = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.AdAttributionInfo.prototype.hasCreativesetId = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * @enum {number}
 */
proto.ei.Egg = {
  EDIBLE: 1,
  SUPERFOOD: 2,
  MEDICAL: 3,
  ROCKET_FUEL: 4,
  SUPER_MATERIAL: 5,
  FUSION: 6,
  QUANTUM: 7,
  IMMORTALITY: 8,
  TACHYON: 9,
  GRAVITON: 10,
  DILITHIUM: 11,
  PRODIGY: 12,
  TERRAFORM: 13,
  ANTIMATTER: 14,
  DARK_MATTER: 15,
  AI: 16,
  NEBULA: 17,
  UNIVERSE: 18,
  ENLIGHTENMENT: 19,
  CHOCOLATE: 100,
  EASTER: 101,
  WATERBALLOON: 102,
  FIREWORK: 103,
  PUMPKIN: 104,
  UNKNOWN: 1000
};

/**
 * @enum {number}
 */
proto.ei.FarmType = {
  EMPTY: 1,
  HOME: 2,
  CONTRACT: 3
};

/**
 * @enum {number}
 */
proto.ei.GoalType = {
  EGGS_LAID: 1,
  UNKNOWN_GOAL: 100
};

/**
 * @enum {number}
 */
proto.ei.RewardType = {
  CASH: 1,
  GOLD: 2,
  SOUL_EGGS: 3,
  EGGS_OF_PROPHECY: 4,
  EPIC_RESEARCH_ITEM: 5,
  PIGGY_FILL: 6,
  PIGGY_MULTIPLIER: 7,
  PIGGY_LEVEL_BUMP: 8,
  BOOST: 9,
  BOOST_TOKEN: 10,
  UNKNOWN_REWARD: 100
};

goog.object.extend(exports, proto.ei);
