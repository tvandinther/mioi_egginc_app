// source: egginc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ActiveArtifactSet', null, global);
goog.exportSymbol('proto.ActiveArtifactSlot', null, global);
goog.exportSymbol('proto.Artifact', null, global);
goog.exportSymbol('proto.Artifact.Level', null, global);
goog.exportSymbol('proto.Artifact.Name', null, global);
goog.exportSymbol('proto.Artifact.Rarity', null, global);
goog.exportSymbol('proto.Artifact.Type', null, global);
goog.exportSymbol('proto.ArtifactInventoryItem', null, global);
goog.exportSymbol('proto.ArtifactsConfiguration', null, global);
goog.exportSymbol('proto.ArtifactsConfiguration.ArtifactParameters', null, global);
goog.exportSymbol('proto.ArtifactsConfiguration.MissionParameters', null, global);
goog.exportSymbol('proto.ArtifactsConfiguration.MissionParameters.Duration', null, global);
goog.exportSymbol('proto.ArtifactsConfigurationRequest', null, global);
goog.exportSymbol('proto.ArtifactsConfigurationResponse', null, global);
goog.exportSymbol('proto.ArtifactsDatabase', null, global);
goog.exportSymbol('proto.ArtifactsDatabase.ActiveArtifactSet', null, global);
goog.exportSymbol('proto.ArtifactsDatabase.ActiveArtifactSlot', null, global);
goog.exportSymbol('proto.ArtifactsDatabase.CraftableArtifact', null, global);
goog.exportSymbol('proto.Backup', null, global);
goog.exportSymbol('proto.Backup.AchievementInfo', null, global);
goog.exportSymbol('proto.Backup.ActiveBoost', null, global);
goog.exportSymbol('proto.Backup.ArtifactsStatus', null, global);
goog.exportSymbol('proto.Backup.Farm', null, global);
goog.exportSymbol('proto.Backup.Game', null, global);
goog.exportSymbol('proto.Backup.Misc', null, global);
goog.exportSymbol('proto.Backup.Mission', null, global);
goog.exportSymbol('proto.Backup.Missions', null, global);
goog.exportSymbol('proto.Backup.NewsHeadline', null, global);
goog.exportSymbol('proto.Backup.OwnedBoost', null, global);
goog.exportSymbol('proto.Backup.ResearchItem', null, global);
goog.exportSymbol('proto.Backup.Settings', null, global);
goog.exportSymbol('proto.Backup.Stats', null, global);
goog.exportSymbol('proto.Backup.Tutorial', null, global);
goog.exportSymbol('proto.BasicRequestInfo', null, global);
goog.exportSymbol('proto.CompleteArtifact', null, global);
goog.exportSymbol('proto.Contract', null, global);
goog.exportSymbol('proto.Contract.Goal', null, global);
goog.exportSymbol('proto.Contract.GoalSet', null, global);
goog.exportSymbol('proto.ContractsResponse', null, global);
goog.exportSymbol('proto.CoopBuffHistory', null, global);
goog.exportSymbol('proto.CoopBuffState', null, global);
goog.exportSymbol('proto.CoopStatus', null, global);
goog.exportSymbol('proto.CoopStatus.ContributionInfo', null, global);
goog.exportSymbol('proto.CoopStatus.CoopGift', null, global);
goog.exportSymbol('proto.CoopStatusRequest', null, global);
goog.exportSymbol('proto.CoopStatusResponse', null, global);
goog.exportSymbol('proto.CraftableArtifact', null, global);
goog.exportSymbol('proto.Egg', null, global);
goog.exportSymbol('proto.ErrorCode', null, global);
goog.exportSymbol('proto.FarmType', null, global);
goog.exportSymbol('proto.FirstContact', null, global);
goog.exportSymbol('proto.FirstContactRequest', null, global);
goog.exportSymbol('proto.FirstContactResponse', null, global);
goog.exportSymbol('proto.GoalType', null, global);
goog.exportSymbol('proto.HabLevel', null, global);
goog.exportSymbol('proto.InventorySlot', null, global);
goog.exportSymbol('proto.League', null, global);
goog.exportSymbol('proto.LocalContract', null, global);
goog.exportSymbol('proto.Mission', null, global);
goog.exportSymbol('proto.Mission.DurationType', null, global);
goog.exportSymbol('proto.Mission.Fuel', null, global);
goog.exportSymbol('proto.Mission.Spaceship', null, global);
goog.exportSymbol('proto.Mission.Status', null, global);
goog.exportSymbol('proto.MyContracts', null, global);
goog.exportSymbol('proto.Periodicals', null, global);
goog.exportSymbol('proto.PeriodicalsRequest', null, global);
goog.exportSymbol('proto.PeriodicalsResponse', null, global);
goog.exportSymbol('proto.Reward', null, global);
goog.exportSymbol('proto.RewardType', null, global);
goog.exportSymbol('proto.ServerGift', null, global);
goog.exportSymbol('proto.TrophyLevel', null, global);
goog.exportSymbol('proto.Type', null, global);
goog.exportSymbol('proto.VehicleType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Backup.repeatedFields_, null);
};
goog.inherits(proto.Backup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.displayName = 'proto.Backup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Settings = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Settings.displayName = 'proto.Backup.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Tutorial = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Backup.Tutorial.repeatedFields_, null);
};
goog.inherits(proto.Backup.Tutorial, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Tutorial.displayName = 'proto.Backup.Tutorial';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Stats = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Backup.Stats.repeatedFields_, null);
};
goog.inherits(proto.Backup.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Stats.displayName = 'proto.Backup.Stats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.ResearchItem = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.ResearchItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.ResearchItem.displayName = 'proto.Backup.ResearchItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.NewsHeadline = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.NewsHeadline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.NewsHeadline.displayName = 'proto.Backup.NewsHeadline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.AchievementInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.AchievementInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.AchievementInfo.displayName = 'proto.Backup.AchievementInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.ActiveBoost = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.ActiveBoost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.ActiveBoost.displayName = 'proto.Backup.ActiveBoost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.OwnedBoost = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.OwnedBoost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.OwnedBoost.displayName = 'proto.Backup.OwnedBoost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Game = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Backup.Game.repeatedFields_, null);
};
goog.inherits(proto.Backup.Game, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Game.displayName = 'proto.Backup.Game';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.ArtifactsStatus = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.ArtifactsStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.ArtifactsStatus.displayName = 'proto.Backup.ArtifactsStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Farm = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Backup.Farm.repeatedFields_, null);
};
goog.inherits(proto.Backup.Farm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Farm.displayName = 'proto.Backup.Farm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Mission = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.Mission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Mission.displayName = 'proto.Backup.Mission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Missions = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Backup.Missions.repeatedFields_, null);
};
goog.inherits(proto.Backup.Missions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Missions.displayName = 'proto.Backup.Missions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Backup.Misc = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Backup.Misc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Backup.Misc.displayName = 'proto.Backup.Misc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FirstContactRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FirstContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FirstContactRequest.displayName = 'proto.FirstContactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FirstContactResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FirstContactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FirstContactResponse.displayName = 'proto.FirstContactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FirstContact = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FirstContact.repeatedFields_, null);
};
goog.inherits(proto.FirstContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FirstContact.displayName = 'proto.FirstContact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Reward = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Reward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Reward.displayName = 'proto.Reward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Contract = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Contract.repeatedFields_, null);
};
goog.inherits(proto.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Contract.displayName = 'proto.Contract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Contract.Goal = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Contract.Goal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Contract.Goal.displayName = 'proto.Contract.Goal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Contract.GoalSet = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Contract.GoalSet.repeatedFields_, null);
};
goog.inherits(proto.Contract.GoalSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Contract.GoalSet.displayName = 'proto.Contract.GoalSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BasicRequestInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BasicRequestInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BasicRequestInfo.displayName = 'proto.BasicRequestInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ContractsResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ContractsResponse.repeatedFields_, null);
};
goog.inherits(proto.ContractsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ContractsResponse.displayName = 'proto.ContractsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopStatusRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoopStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopStatusRequest.displayName = 'proto.CoopStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopStatusResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoopStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopStatusResponse.displayName = 'proto.CoopStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopStatus = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoopStatus.repeatedFields_, null);
};
goog.inherits(proto.CoopStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopStatus.displayName = 'proto.CoopStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopStatus.CoopGift = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoopStatus.CoopGift, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopStatus.CoopGift.displayName = 'proto.CoopStatus.CoopGift';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopStatus.ContributionInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoopStatus.ContributionInfo.repeatedFields_, null);
};
goog.inherits(proto.CoopStatus.ContributionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopStatus.ContributionInfo.displayName = 'proto.CoopStatus.ContributionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LocalContract = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.LocalContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LocalContract.displayName = 'proto.LocalContract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MyContracts = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MyContracts.repeatedFields_, null);
};
goog.inherits(proto.MyContracts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MyContracts.displayName = 'proto.MyContracts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopBuffState = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoopBuffState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopBuffState.displayName = 'proto.CoopBuffState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoopBuffHistory = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoopBuffHistory.repeatedFields_, null);
};
goog.inherits(proto.CoopBuffHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CoopBuffHistory.displayName = 'proto.CoopBuffHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ServerGift = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ServerGift, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ServerGift.displayName = 'proto.ServerGift';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PeriodicalsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PeriodicalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PeriodicalsRequest.displayName = 'proto.PeriodicalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PeriodicalsResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PeriodicalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PeriodicalsResponse.displayName = 'proto.PeriodicalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Periodicals = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Periodicals.repeatedFields_, null);
};
goog.inherits(proto.Periodicals, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Periodicals.displayName = 'proto.Periodicals';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Mission = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Mission.repeatedFields_, null);
};
goog.inherits(proto.Mission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Mission.displayName = 'proto.Mission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Mission.Fuel = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Mission.Fuel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Mission.Fuel.displayName = 'proto.Mission.Fuel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Artifact = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Artifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Artifact.displayName = 'proto.Artifact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CompleteArtifact = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CompleteArtifact.repeatedFields_, null);
};
goog.inherits(proto.CompleteArtifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CompleteArtifact.displayName = 'proto.CompleteArtifact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactInventoryItem = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactInventoryItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactInventoryItem.displayName = 'proto.ArtifactInventoryItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.InventorySlot = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.InventorySlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.InventorySlot.displayName = 'proto.InventorySlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsConfigurationRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactsConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsConfigurationRequest.displayName = 'proto.ArtifactsConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsConfigurationResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactsConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsConfigurationResponse.displayName = 'proto.ArtifactsConfigurationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsConfiguration = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ArtifactsConfiguration.repeatedFields_, null);
};
goog.inherits(proto.ArtifactsConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsConfiguration.displayName = 'proto.ArtifactsConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsConfiguration.MissionParameters = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ArtifactsConfiguration.MissionParameters.repeatedFields_, null);
};
goog.inherits(proto.ArtifactsConfiguration.MissionParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsConfiguration.MissionParameters.displayName = 'proto.ArtifactsConfiguration.MissionParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsConfiguration.MissionParameters.Duration = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactsConfiguration.MissionParameters.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsConfiguration.MissionParameters.Duration.displayName = 'proto.ArtifactsConfiguration.MissionParameters.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsConfiguration.ArtifactParameters = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactsConfiguration.ArtifactParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsConfiguration.ArtifactParameters.displayName = 'proto.ArtifactsConfiguration.ArtifactParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsDatabase = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ArtifactsDatabase.repeatedFields_, null);
};
goog.inherits(proto.ArtifactsDatabase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsDatabase.displayName = 'proto.ArtifactsDatabase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsDatabase.ActiveArtifactSlot = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactsDatabase.ActiveArtifactSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsDatabase.ActiveArtifactSlot.displayName = 'proto.ArtifactsDatabase.ActiveArtifactSlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsDatabase.ActiveArtifactSet = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ArtifactsDatabase.ActiveArtifactSet.repeatedFields_, null);
};
goog.inherits(proto.ArtifactsDatabase.ActiveArtifactSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsDatabase.ActiveArtifactSet.displayName = 'proto.ArtifactsDatabase.ActiveArtifactSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ArtifactsDatabase.CraftableArtifact = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ArtifactsDatabase.CraftableArtifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ArtifactsDatabase.CraftableArtifact.displayName = 'proto.ArtifactsDatabase.CraftableArtifact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ActiveArtifactSlot = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ActiveArtifactSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ActiveArtifactSlot.displayName = 'proto.ActiveArtifactSlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ActiveArtifactSet = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ActiveArtifactSet.repeatedFields_, null);
};
goog.inherits(proto.ActiveArtifactSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ActiveArtifactSet.displayName = 'proto.ActiveArtifactSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CraftableArtifact = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CraftableArtifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CraftableArtifact.displayName = 'proto.CraftableArtifact';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Backup.repeatedFields_ = [12];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.toObject = function (includeInstance, msg) {
    var f, obj = {
      userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
      approxTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      settings: (f = msg.getSettings()) && proto.Backup.Settings.toObject(includeInstance, f),
      tutorial: (f = msg.getTutorial()) && proto.Backup.Tutorial.toObject(includeInstance, f),
      stats: (f = msg.getStats()) && proto.Backup.Stats.toObject(includeInstance, f),
      game: (f = msg.getGame()) && proto.Backup.Game.toObject(includeInstance, f),
      missions: (f = msg.getMissions()) && proto.Backup.Missions.toObject(includeInstance, f),
      misc: (f = msg.getMisc()) && proto.Backup.Misc.toObject(includeInstance, f),
      farmsList: jspb.Message.toObjectList(msg.getFarmsList(),
          proto.Backup.Farm.toObject, includeInstance),
      contracts: (f = msg.getContracts()) && proto.MyContracts.toObject(includeInstance, f),
      artifactsStatus: (f = msg.getArtifactsStatus()) && proto.Backup.ArtifactsStatus.toObject(includeInstance, f),
      artifactsDatabase: (f = msg.getArtifactsDatabase()) && proto.ArtifactsDatabase.toObject(includeInstance, f),
      gameServicesId: jspb.Message.getFieldWithDefault(msg, 16, ""),
      deviceId: jspb.Message.getFieldWithDefault(msg, 17, ""),
      eiUserId: jspb.Message.getFieldWithDefault(msg, 18, ""),
      forceOfferBackup: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
      clientVersion: jspb.Message.getFieldWithDefault(msg, 21, 0),
      forceBackup: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
      checksum: jspb.Message.getFieldWithDefault(msg, 100, 0),
      signature: jspb.Message.getFieldWithDefault(msg, 101, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup}
 */
proto.Backup.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup;
  return proto.Backup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup}
 */
proto.Backup.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserName(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setApproxTime(value);
        break;
      case 4:
        var value = new proto.Backup.Settings;
        reader.readMessage(value, proto.Backup.Settings.deserializeBinaryFromReader);
        msg.setSettings(value);
        break;
      case 5:
        var value = new proto.Backup.Tutorial;
        reader.readMessage(value, proto.Backup.Tutorial.deserializeBinaryFromReader);
        msg.setTutorial(value);
        break;
      case 6:
        var value = new proto.Backup.Stats;
        reader.readMessage(value, proto.Backup.Stats.deserializeBinaryFromReader);
        msg.setStats(value);
        break;
      case 7:
        var value = new proto.Backup.Game;
        reader.readMessage(value, proto.Backup.Game.deserializeBinaryFromReader);
        msg.setGame(value);
        break;
      case 9:
        var value = new proto.Backup.Missions;
        reader.readMessage(value, proto.Backup.Missions.deserializeBinaryFromReader);
        msg.setMissions(value);
        break;
      case 10:
        var value = new proto.Backup.Misc;
        reader.readMessage(value, proto.Backup.Misc.deserializeBinaryFromReader);
        msg.setMisc(value);
        break;
      case 12:
        var value = new proto.Backup.Farm;
        reader.readMessage(value, proto.Backup.Farm.deserializeBinaryFromReader);
        msg.addFarms(value);
        break;
      case 13:
        var value = new proto.MyContracts;
        reader.readMessage(value, proto.MyContracts.deserializeBinaryFromReader);
        msg.setContracts(value);
        break;
      case 14:
        var value = new proto.Backup.ArtifactsStatus;
        reader.readMessage(value, proto.Backup.ArtifactsStatus.deserializeBinaryFromReader);
        msg.setArtifactsStatus(value);
        break;
      case 15:
        var value = new proto.ArtifactsDatabase;
        reader.readMessage(value, proto.ArtifactsDatabase.deserializeBinaryFromReader);
        msg.setArtifactsDatabase(value);
        break;
      case 16:
        var value = /** @type {string} */ (reader.readString());
        msg.setGameServicesId(value);
        break;
      case 17:
        var value = /** @type {string} */ (reader.readString());
        msg.setDeviceId(value);
        break;
      case 18:
        var value = /** @type {string} */ (reader.readString());
        msg.setEiUserId(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setForceOfferBackup(value);
        break;
      case 21:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setClientVersion(value);
        break;
      case 22:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setForceBackup(value);
        break;
      case 100:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setChecksum(value);
        break;
      case 101:
        var value = /** @type {string} */ (reader.readString());
        msg.setSignature(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getApproxTime();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
        4,
        f,
        proto.Backup.Settings.serializeBinaryToWriter
    );
  }
  f = message.getTutorial();
  if (f != null) {
    writer.writeMessage(
        5,
        f,
        proto.Backup.Tutorial.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
        6,
        f,
        proto.Backup.Stats.serializeBinaryToWriter
    );
  }
  f = message.getGame();
  if (f != null) {
    writer.writeMessage(
        7,
        f,
        proto.Backup.Game.serializeBinaryToWriter
    );
  }
  f = message.getMissions();
  if (f != null) {
    writer.writeMessage(
        9,
        f,
        proto.Backup.Missions.serializeBinaryToWriter
    );
  }
  f = message.getMisc();
  if (f != null) {
    writer.writeMessage(
        10,
        f,
        proto.Backup.Misc.serializeBinaryToWriter
    );
  }
  f = message.getFarmsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        12,
        f,
        proto.Backup.Farm.serializeBinaryToWriter
    );
  }
  f = message.getContracts();
  if (f != null) {
    writer.writeMessage(
        13,
        f,
        proto.MyContracts.serializeBinaryToWriter
    );
  }
  f = message.getArtifactsStatus();
  if (f != null) {
    writer.writeMessage(
        14,
        f,
        proto.Backup.ArtifactsStatus.serializeBinaryToWriter
    );
  }
  f = message.getArtifactsDatabase();
  if (f != null) {
    writer.writeMessage(
        15,
        f,
        proto.ArtifactsDatabase.serializeBinaryToWriter
    );
  }
  f = message.getGameServicesId();
  if (f.length > 0) {
    writer.writeString(
        16,
        f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
        17,
        f
    );
  }
  f = message.getEiUserId();
  if (f.length > 0) {
    writer.writeString(
        18,
        f
    );
  }
  f = message.getForceOfferBackup();
  if (f) {
    writer.writeBool(
        20,
        f
    );
  }
  f = message.getClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        21,
        f
    );
  }
  f = message.getForceBackup();
  if (f) {
    writer.writeBool(
        22,
        f
    );
  }
  f = message.getChecksum();
  if (f !== 0) {
    writer.writeUint64(
        100,
        f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
        101,
        f
    );
  }
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Settings.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Settings.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Settings} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Settings.toObject = function (includeInstance, msg) {
    var f, obj = {
      sfx: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      music: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      lowBatteryMode: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      lowPerformanceMode: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
      notificationsQueried: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
      notificationsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
      coppaQueried: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
      coppaRestricted: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
      forceTouchChickenBtn: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
      lowPerformance: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
      notifyDailyGift: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
      gdprConsentQueried: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
      gdprConsentGiven: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
      userAdsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
      userCloudEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
      gdprAgeRestricted: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
      lastDayAgeQueried: jspb.Message.getFieldWithDefault(msg, 17, 0),
      ageQueried: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
      ageRestricted: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
      dataCollectionConsentQueried: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
      dataCollectionConsentGiven: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
      userAnalyticsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
      userPersonalizedAdsEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
      lastBackupTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 24, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Settings}
 */
proto.Backup.Settings.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Settings;
  return proto.Backup.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Settings}
 */
proto.Backup.Settings.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSfx(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setMusic(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setLowBatteryMode(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setLowPerformanceMode(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNotificationsQueried(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNotificationsEnabled(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCoppaQueried(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCoppaRestricted(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setForceTouchChickenBtn(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setLowPerformance(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNotifyDailyGift(value);
        break;
      case 12:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setGdprConsentQueried(value);
        break;
      case 13:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setGdprConsentGiven(value);
        break;
      case 14:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setUserAdsEnabled(value);
        break;
      case 15:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setUserCloudEnabled(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setGdprAgeRestricted(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLastDayAgeQueried(value);
        break;
      case 18:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAgeQueried(value);
        break;
      case 19:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAgeRestricted(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setDataCollectionConsentQueried(value);
        break;
      case 21:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setDataCollectionConsentGiven(value);
        break;
      case 22:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setUserAnalyticsEnabled(value);
        break;
      case 23:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setUserPersonalizedAdsEnabled(value);
        break;
      case 24:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastBackupTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Settings.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Settings.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSfx();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getMusic();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
  f = message.getLowBatteryMode();
  if (f) {
    writer.writeBool(
        3,
        f
    );
  }
  f = message.getLowPerformanceMode();
  if (f) {
    writer.writeBool(
        4,
        f
    );
  }
  f = message.getNotificationsQueried();
  if (f) {
    writer.writeBool(
        5,
        f
    );
  }
  f = message.getNotificationsEnabled();
  if (f) {
    writer.writeBool(
        6,
        f
    );
  }
  f = message.getCoppaQueried();
  if (f) {
    writer.writeBool(
        7,
        f
    );
  }
  f = message.getCoppaRestricted();
  if (f) {
    writer.writeBool(
        8,
        f
    );
  }
  f = message.getForceTouchChickenBtn();
  if (f) {
    writer.writeBool(
        9,
        f
    );
  }
  f = message.getLowPerformance();
  if (f) {
    writer.writeBool(
        10,
        f
    );
  }
  f = message.getNotifyDailyGift();
  if (f) {
    writer.writeBool(
        11,
        f
    );
  }
  f = message.getGdprConsentQueried();
  if (f) {
    writer.writeBool(
        12,
        f
    );
  }
  f = message.getGdprConsentGiven();
  if (f) {
    writer.writeBool(
        13,
        f
    );
  }
  f = message.getUserAdsEnabled();
  if (f) {
    writer.writeBool(
        14,
        f
    );
  }
  f = message.getUserCloudEnabled();
  if (f) {
    writer.writeBool(
        15,
        f
    );
  }
  f = message.getGdprAgeRestricted();
  if (f) {
    writer.writeBool(
        16,
        f
    );
  }
  f = message.getLastDayAgeQueried();
  if (f !== 0) {
    writer.writeUint32(
        17,
        f
    );
  }
  f = message.getAgeQueried();
  if (f) {
    writer.writeBool(
        18,
        f
    );
  }
  f = message.getAgeRestricted();
  if (f) {
    writer.writeBool(
        19,
        f
    );
  }
  f = message.getDataCollectionConsentQueried();
  if (f) {
    writer.writeBool(
        20,
        f
    );
  }
  f = message.getDataCollectionConsentGiven();
  if (f) {
    writer.writeBool(
        21,
        f
    );
  }
  f = message.getUserAnalyticsEnabled();
  if (f) {
    writer.writeBool(
        22,
        f
    );
  }
  f = message.getUserPersonalizedAdsEnabled();
  if (f) {
    writer.writeBool(
        23,
        f
    );
  }
  f = message.getLastBackupTime();
  if (f !== 0.0) {
    writer.writeDouble(
        24,
        f
    );
  }
};


/**
 * optional bool sfx = 1;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getSfx = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setSfx = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool music = 2;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getMusic = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setMusic = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool low_battery_mode = 3;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getLowBatteryMode = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setLowBatteryMode = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool low_performance_mode = 4;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getLowPerformanceMode = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setLowPerformanceMode = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool notifications_queried = 5;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getNotificationsQueried = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setNotificationsQueried = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool notifications_enabled = 6;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getNotificationsEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setNotificationsEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool coppa_queried = 7;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getCoppaQueried = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setCoppaQueried = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool coppa_restricted = 8;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getCoppaRestricted = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setCoppaRestricted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool force_touch_chicken_btn = 9;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getForceTouchChickenBtn = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setForceTouchChickenBtn = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool low_performance = 10;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getLowPerformance = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setLowPerformance = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool notify_daily_gift = 11;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getNotifyDailyGift = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setNotifyDailyGift = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool gdpr_consent_queried = 12;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getGdprConsentQueried = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setGdprConsentQueried = function (value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool gdpr_consent_given = 13;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getGdprConsentGiven = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setGdprConsentGiven = function (value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool user_ads_enabled = 14;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getUserAdsEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setUserAdsEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool user_cloud_enabled = 15;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getUserCloudEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setUserCloudEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool gdpr_age_restricted = 16;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getGdprAgeRestricted = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setGdprAgeRestricted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional uint32 last_day_age_queried = 17;
 * @return {number}
 */
proto.Backup.Settings.prototype.getLastDayAgeQueried = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setLastDayAgeQueried = function (value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool age_queried = 18;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getAgeQueried = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setAgeQueried = function (value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool age_restricted = 19;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getAgeRestricted = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setAgeRestricted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool data_collection_consent_queried = 20;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getDataCollectionConsentQueried = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setDataCollectionConsentQueried = function (value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool data_collection_consent_given = 21;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getDataCollectionConsentGiven = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setDataCollectionConsentGiven = function (value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool user_analytics_enabled = 22;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getUserAnalyticsEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setUserAnalyticsEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool user_personalized_ads_enabled = 23;
 * @return {boolean}
 */
proto.Backup.Settings.prototype.getUserPersonalizedAdsEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setUserPersonalizedAdsEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional double last_backup_time = 24;
 * @return {number}
 */
proto.Backup.Settings.prototype.getLastBackupTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Settings} returns this
 */
proto.Backup.Settings.prototype.setLastBackupTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Backup.Tutorial.repeatedFields_ = [11];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Tutorial.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Tutorial.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Tutorial} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Tutorial.toObject = function (includeInstance, msg) {
    var f, obj = {
      introShown: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      clickTutorialShown: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      buyHabShown: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      hireVehicleShown: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
      qNumShown: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
      sNumShown: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
      contractsTabShown: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
      contractInfoShown: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
      joinCoopShown: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
      switchFarmShown: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
      tutorialsShownList: (f = jspb.Message.getRepeatedBooleanField(msg, 11)) == null ? undefined : f
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Tutorial}
 */
proto.Backup.Tutorial.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Tutorial;
  return proto.Backup.Tutorial.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Tutorial} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Tutorial}
 */
proto.Backup.Tutorial.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIntroShown(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setClickTutorialShown(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setBuyHabShown(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHireVehicleShown(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setQNumShown(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSNumShown(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setContractsTabShown(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setContractInfoShown(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setJoinCoopShown(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSwitchFarmShown(value);
        break;
      case 11:
        var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
        for (var i = 0; i < values.length; i++) {
          msg.addTutorialsShown(values[i]);
        }
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Tutorial.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Tutorial.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Tutorial} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Tutorial.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getIntroShown();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getClickTutorialShown();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
  f = message.getBuyHabShown();
  if (f) {
    writer.writeBool(
        3,
        f
    );
  }
  f = message.getHireVehicleShown();
  if (f) {
    writer.writeBool(
        4,
        f
    );
  }
  f = message.getQNumShown();
  if (f) {
    writer.writeBool(
        5,
        f
    );
  }
  f = message.getSNumShown();
  if (f) {
    writer.writeBool(
        6,
        f
    );
  }
  f = message.getContractsTabShown();
  if (f) {
    writer.writeBool(
        7,
        f
    );
  }
  f = message.getContractInfoShown();
  if (f) {
    writer.writeBool(
        8,
        f
    );
  }
  f = message.getJoinCoopShown();
  if (f) {
    writer.writeBool(
        9,
        f
    );
  }
  f = message.getSwitchFarmShown();
  if (f) {
    writer.writeBool(
        10,
        f
    );
  }
  f = message.getTutorialsShownList();
  if (f.length > 0) {
    writer.writePackedBool(
        11,
        f
    );
  }
};


/**
 * optional bool intro_shown = 1;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getIntroShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setIntroShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool click_tutorial_shown = 2;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getClickTutorialShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setClickTutorialShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool buy_hab_shown = 3;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getBuyHabShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setBuyHabShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool hire_vehicle_shown = 4;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getHireVehicleShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setHireVehicleShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool q_num_shown = 5;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getQNumShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setQNumShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool s_num_shown = 6;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getSNumShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setSNumShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool contracts_tab_shown = 7;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getContractsTabShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setContractsTabShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool contract_info_shown = 8;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getContractInfoShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setContractInfoShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool join_coop_shown = 9;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getJoinCoopShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setJoinCoopShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool switch_farm_shown = 10;
 * @return {boolean}
 */
proto.Backup.Tutorial.prototype.getSwitchFarmShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setSwitchFarmShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * repeated bool tutorials_shown = 11;
 * @return {!Array<boolean>}
 */
proto.Backup.Tutorial.prototype.getTutorialsShownList = function () {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 11));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.setTutorialsShownList = function (value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.addTutorialsShown = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Tutorial} returns this
 */
proto.Backup.Tutorial.prototype.clearTutorialsShownList = function () {
  return this.setTutorialsShownList([]);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Backup.Stats.repeatedFields_ = [8];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Stats.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Stats.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Stats} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Stats.toObject = function (includeInstance, msg) {
    var f, obj = {
      refillUses: jspb.Message.getFieldWithDefault(msg, 2, 0),
      videoDoublerUses: jspb.Message.getFieldWithDefault(msg, 3, 0),
      warp1Uses: jspb.Message.getFieldWithDefault(msg, 4, 0),
      warp8Uses: jspb.Message.getFieldWithDefault(msg, 5, 0),
      droneTakedowns: jspb.Message.getFieldWithDefault(msg, 6, 0),
      unlimitedChickensUses: jspb.Message.getFieldWithDefault(msg, 7, 0),
      eggTotalsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
      prestigeCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
      droneTakedownsElite: jspb.Message.getFieldWithDefault(msg, 10, 0),
      piggyBreakCount: jspb.Message.getFieldWithDefault(msg, 11, 0),
      iapPacksPurchased: jspb.Message.getFieldWithDefault(msg, 12, 0),
      boostsUsed: jspb.Message.getFieldWithDefault(msg, 13, 0),
      piggyFull: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
      piggyFoundFull: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
      timePiggyFilledRealtime: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
      timePiggyFullGametime: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
      lostPiggyIncrements: jspb.Message.getFieldWithDefault(msg, 18, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Stats}
 */
proto.Backup.Stats.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Stats;
  return proto.Backup.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Stats}
 */
proto.Backup.Stats.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setRefillUses(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setVideoDoublerUses(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setWarp1Uses(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setWarp8Uses(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setDroneTakedowns(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setUnlimitedChickensUses(value);
        break;
      case 8:
        var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
        for (var i = 0; i < values.length; i++) {
          msg.addEggTotals(values[i]);
        }
        break;
      case 9:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setPrestigeCount(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setDroneTakedownsElite(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setPiggyBreakCount(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setIapPacksPurchased(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setBoostsUsed(value);
        break;
      case 14:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPiggyFull(value);
        break;
      case 15:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPiggyFoundFull(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTimePiggyFilledRealtime(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTimePiggyFullGametime(value);
        break;
      case 18:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setLostPiggyIncrements(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Stats.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Stats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Stats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Stats.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getRefillUses();
  if (f !== 0) {
    writer.writeUint64(
        2,
        f
    );
  }
  f = message.getVideoDoublerUses();
  if (f !== 0) {
    writer.writeUint64(
        3,
        f
    );
  }
  f = message.getWarp1Uses();
  if (f !== 0) {
    writer.writeUint64(
        4,
        f
    );
  }
  f = message.getWarp8Uses();
  if (f !== 0) {
    writer.writeUint64(
        5,
        f
    );
  }
  f = message.getDroneTakedowns();
  if (f !== 0) {
    writer.writeUint64(
        6,
        f
    );
  }
  f = message.getUnlimitedChickensUses();
  if (f !== 0) {
    writer.writeUint64(
        7,
        f
    );
  }
  f = message.getEggTotalsList();
  if (f.length > 0) {
    writer.writePackedDouble(
        8,
        f
    );
  }
  f = message.getPrestigeCount();
  if (f !== 0) {
    writer.writeUint64(
        9,
        f
    );
  }
  f = message.getDroneTakedownsElite();
  if (f !== 0) {
    writer.writeUint64(
        10,
        f
    );
  }
  f = message.getPiggyBreakCount();
  if (f !== 0) {
    writer.writeUint64(
        11,
        f
    );
  }
  f = message.getIapPacksPurchased();
  if (f !== 0) {
    writer.writeUint64(
        12,
        f
    );
  }
  f = message.getBoostsUsed();
  if (f !== 0) {
    writer.writeUint64(
        13,
        f
    );
  }
  f = message.getPiggyFull();
  if (f) {
    writer.writeBool(
        14,
        f
    );
  }
  f = message.getPiggyFoundFull();
  if (f) {
    writer.writeBool(
        15,
        f
    );
  }
  f = message.getTimePiggyFilledRealtime();
  if (f !== 0.0) {
    writer.writeDouble(
        16,
        f
    );
  }
  f = message.getTimePiggyFullGametime();
  if (f !== 0.0) {
    writer.writeDouble(
        17,
        f
    );
  }
  f = message.getLostPiggyIncrements();
  if (f !== 0) {
    writer.writeUint64(
        18,
        f
    );
  }
};


/**
 * optional uint64 refill_uses = 2;
 * @return {number}
 */
proto.Backup.Stats.prototype.getRefillUses = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setRefillUses = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 video_doubler_uses = 3;
 * @return {number}
 */
proto.Backup.Stats.prototype.getVideoDoublerUses = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setVideoDoublerUses = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 warp_1_uses = 4;
 * @return {number}
 */
proto.Backup.Stats.prototype.getWarp1Uses = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setWarp1Uses = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 warp_8_uses = 5;
 * @return {number}
 */
proto.Backup.Stats.prototype.getWarp8Uses = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setWarp8Uses = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 drone_takedowns = 6;
 * @return {number}
 */
proto.Backup.Stats.prototype.getDroneTakedowns = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setDroneTakedowns = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 unlimited_chickens_uses = 7;
 * @return {number}
 */
proto.Backup.Stats.prototype.getUnlimitedChickensUses = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setUnlimitedChickensUses = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated double egg_totals = 8;
 * @return {!Array<number>}
 */
proto.Backup.Stats.prototype.getEggTotalsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setEggTotalsList = function (value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.addEggTotals = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.clearEggTotalsList = function () {
  return this.setEggTotalsList([]);
};


/**
 * optional uint64 prestige_count = 9;
 * @return {number}
 */
proto.Backup.Stats.prototype.getPrestigeCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setPrestigeCount = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 drone_takedowns_elite = 10;
 * @return {number}
 */
proto.Backup.Stats.prototype.getDroneTakedownsElite = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setDroneTakedownsElite = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 piggy_break_count = 11;
 * @return {number}
 */
proto.Backup.Stats.prototype.getPiggyBreakCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setPiggyBreakCount = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 iap_packs_purchased = 12;
 * @return {number}
 */
proto.Backup.Stats.prototype.getIapPacksPurchased = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setIapPacksPurchased = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 boosts_used = 13;
 * @return {number}
 */
proto.Backup.Stats.prototype.getBoostsUsed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setBoostsUsed = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool piggy_full = 14;
 * @return {boolean}
 */
proto.Backup.Stats.prototype.getPiggyFull = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setPiggyFull = function (value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool piggy_found_full = 15;
 * @return {boolean}
 */
proto.Backup.Stats.prototype.getPiggyFoundFull = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setPiggyFoundFull = function (value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional double time_piggy_filled_realtime = 16;
 * @return {number}
 */
proto.Backup.Stats.prototype.getTimePiggyFilledRealtime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setTimePiggyFilledRealtime = function (value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional double time_piggy_full_gametime = 17;
 * @return {number}
 */
proto.Backup.Stats.prototype.getTimePiggyFullGametime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setTimePiggyFullGametime = function (value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional uint64 lost_piggy_increments = 18;
 * @return {number}
 */
proto.Backup.Stats.prototype.getLostPiggyIncrements = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Stats} returns this
 */
proto.Backup.Stats.prototype.setLostPiggyIncrements = function (value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.ResearchItem.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.ResearchItem.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.ResearchItem} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.ResearchItem.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      level: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.ResearchItem}
 */
proto.Backup.ResearchItem.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.ResearchItem;
  return proto.Backup.ResearchItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.ResearchItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.ResearchItem}
 */
proto.Backup.ResearchItem.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLevel(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.ResearchItem.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.ResearchItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.ResearchItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.ResearchItem.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Backup.ResearchItem.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.ResearchItem} returns this
 */
proto.Backup.ResearchItem.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 level = 2;
 * @return {number}
 */
proto.Backup.ResearchItem.prototype.getLevel = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ResearchItem} returns this
 */
proto.Backup.ResearchItem.prototype.setLevel = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.NewsHeadline.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.NewsHeadline.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.NewsHeadline} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.NewsHeadline.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      read: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.NewsHeadline}
 */
proto.Backup.NewsHeadline.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.NewsHeadline;
  return proto.Backup.NewsHeadline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.NewsHeadline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.NewsHeadline}
 */
proto.Backup.NewsHeadline.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setRead(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.NewsHeadline.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.NewsHeadline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.NewsHeadline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.NewsHeadline.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getRead();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Backup.NewsHeadline.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.NewsHeadline} returns this
 */
proto.Backup.NewsHeadline.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool read = 2;
 * @return {boolean}
 */
proto.Backup.NewsHeadline.prototype.getRead = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.NewsHeadline} returns this
 */
proto.Backup.NewsHeadline.prototype.setRead = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.AchievementInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.AchievementInfo.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.AchievementInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.AchievementInfo.toObject = function (includeInstance, msg) {
    var f, obj = {
      name: jspb.Message.getFieldWithDefault(msg, 1, ""),
      achieved: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.AchievementInfo}
 */
proto.Backup.AchievementInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.AchievementInfo;
  return proto.Backup.AchievementInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.AchievementInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.AchievementInfo}
 */
proto.Backup.AchievementInfo.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAchieved(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.AchievementInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.AchievementInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.AchievementInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.AchievementInfo.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getAchieved();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Backup.AchievementInfo.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.AchievementInfo} returns this
 */
proto.Backup.AchievementInfo.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool achieved = 2;
 * @return {boolean}
 */
proto.Backup.AchievementInfo.prototype.getAchieved = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.AchievementInfo} returns this
 */
proto.Backup.AchievementInfo.prototype.setAchieved = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.ActiveBoost.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.ActiveBoost.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.ActiveBoost} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.ActiveBoost.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      timeRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      referenceValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.ActiveBoost}
 */
proto.Backup.ActiveBoost.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.ActiveBoost;
  return proto.Backup.ActiveBoost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.ActiveBoost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.ActiveBoost}
 */
proto.Backup.ActiveBoost.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTimeRemaining(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setReferenceValue(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.ActiveBoost.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.ActiveBoost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.ActiveBoost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.ActiveBoost.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getTimeRemaining();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getReferenceValue();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Backup.ActiveBoost.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.ActiveBoost} returns this
 */
proto.Backup.ActiveBoost.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double time_remaining = 2;
 * @return {number}
 */
proto.Backup.ActiveBoost.prototype.getTimeRemaining = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ActiveBoost} returns this
 */
proto.Backup.ActiveBoost.prototype.setTimeRemaining = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double reference_value = 3;
 * @return {number}
 */
proto.Backup.ActiveBoost.prototype.getReferenceValue = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ActiveBoost} returns this
 */
proto.Backup.ActiveBoost.prototype.setReferenceValue = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.OwnedBoost.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.OwnedBoost.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.OwnedBoost} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.OwnedBoost.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      count: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.OwnedBoost}
 */
proto.Backup.OwnedBoost.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.OwnedBoost;
  return proto.Backup.OwnedBoost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.OwnedBoost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.OwnedBoost}
 */
proto.Backup.OwnedBoost.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.OwnedBoost.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.OwnedBoost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.OwnedBoost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.OwnedBoost.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Backup.OwnedBoost.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.OwnedBoost} returns this
 */
proto.Backup.OwnedBoost.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.Backup.OwnedBoost.prototype.getCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.OwnedBoost} returns this
 */
proto.Backup.OwnedBoost.prototype.setCount = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Backup.Game.repeatedFields_ = [9, 11, 15, 18, 19, 30];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Game.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Game.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Game} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Game.toObject = function (includeInstance, msg) {
    var f, obj = {
      maxEggReached: jspb.Message.getFieldWithDefault(msg, 1, 0),
      goldenEggsEarned: jspb.Message.getFieldWithDefault(msg, 2, 0),
      goldenEggsSpent: jspb.Message.getFieldWithDefault(msg, 3, 0),
      prestigeCashEarned: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      lifetimeCashEarned: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      piggyBank: jspb.Message.getFieldWithDefault(msg, 7, 0),
      permitLevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
      epicResearchList: jspb.Message.toObjectList(msg.getEpicResearchList(),
          proto.Backup.ResearchItem.toObject, includeInstance),
      nextDailyGiftTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
      newsList: jspb.Message.toObjectList(msg.getNewsList(),
          proto.Backup.NewsHeadline.toObject, includeInstance),
      lastNewsTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
      currentMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
      currentMultiplierExpiration: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
      achievementsList: jspb.Message.toObjectList(msg.getAchievementsList(),
          proto.Backup.AchievementInfo.toObject, includeInstance),
      unclaimedGoldenEggs: jspb.Message.getFieldWithDefault(msg, 16, 0),
      maxFarmSizeReachedList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
      eggMedalLevelsList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
      lastDailyGiftCollectedDay: jspb.Message.getFieldWithDefault(msg, 20, 0),
      currentFarm: jspb.Message.getFieldWithDefault(msg, 22, 0),
      prophecyEggs: jspb.Message.getFieldWithDefault(msg, 23, 0),
      unclaimedProphecyEggs: jspb.Message.getFieldWithDefault(msg, 24, 0),
      longIdleNotificationSet: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
      longIdleNotificationThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 26, 0.0),
      longIdleReward: jspb.Message.getFloatingPointFieldWithDefault(msg, 27, 0.0),
      dailyGiftIndex: jspb.Message.getFieldWithDefault(msg, 28, 0),
      hyperloopStation: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
      boostsList: jspb.Message.toObjectList(msg.getBoostsList(),
          proto.Backup.OwnedBoost.toObject, includeInstance),
      piggyFullAlertShown: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
      totalTimeCheatsDetected: jspb.Message.getFieldWithDefault(msg, 32, 0),
      prestigeSoulBoostCash: jspb.Message.getFloatingPointFieldWithDefault(msg, 33, 0.0),
      soulEggs: jspb.Message.getFloatingPointFieldWithDefault(msg, 34, 0.0),
      unclaimedSoulEggs: jspb.Message.getFloatingPointFieldWithDefault(msg, 35, 0.0),
      forceEliteContracts: jspb.Message.getBooleanFieldWithDefault(msg, 36, false),
      newPlayerEventEndTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 37, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Game}
 */
proto.Backup.Game.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Game;
  return proto.Backup.Game.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Game} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Game}
 */
proto.Backup.Game.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Egg} */ (reader.readEnum());
        msg.setMaxEggReached(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setGoldenEggsEarned(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setGoldenEggsSpent(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setPrestigeCashEarned(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLifetimeCashEarned(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setPiggyBank(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setPermitLevel(value);
        break;
      case 9:
        var value = new proto.Backup.ResearchItem;
        reader.readMessage(value, proto.Backup.ResearchItem.deserializeBinaryFromReader);
        msg.addEpicResearch(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setNextDailyGiftTime(value);
        break;
      case 11:
        var value = new proto.Backup.NewsHeadline;
        reader.readMessage(value, proto.Backup.NewsHeadline.deserializeBinaryFromReader);
        msg.addNews(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastNewsTime(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCurrentMultiplier(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCurrentMultiplierExpiration(value);
        break;
      case 15:
        var value = new proto.Backup.AchievementInfo;
        reader.readMessage(value, proto.Backup.AchievementInfo.deserializeBinaryFromReader);
        msg.addAchievements(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setUnclaimedGoldenEggs(value);
        break;
      case 18:
        var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
        for (var i = 0; i < values.length; i++) {
          msg.addMaxFarmSizeReached(values[i]);
        }
        break;
      case 19:
        var values = /** @type {!Array<!proto.TrophyLevel>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
        for (var i = 0; i < values.length; i++) {
          msg.addEggMedalLevels(values[i]);
        }
        break;
      case 20:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLastDailyGiftCollectedDay(value);
        break;
      case 22:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCurrentFarm(value);
        break;
      case 23:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setProphecyEggs(value);
        break;
      case 24:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setUnclaimedProphecyEggs(value);
        break;
      case 25:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setLongIdleNotificationSet(value);
        break;
      case 26:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLongIdleNotificationThreshold(value);
        break;
      case 27:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLongIdleReward(value);
        break;
      case 28:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setDailyGiftIndex(value);
        break;
      case 29:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHyperloopStation(value);
        break;
      case 30:
        var value = new proto.Backup.OwnedBoost;
        reader.readMessage(value, proto.Backup.OwnedBoost.deserializeBinaryFromReader);
        msg.addBoosts(value);
        break;
      case 31:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPiggyFullAlertShown(value);
        break;
      case 32:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTotalTimeCheatsDetected(value);
        break;
      case 33:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setPrestigeSoulBoostCash(value);
        break;
      case 34:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSoulEggs(value);
        break;
      case 35:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setUnclaimedSoulEggs(value);
        break;
      case 36:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setForceEliteContracts(value);
        break;
      case 37:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setNewPlayerEventEndTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Game.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Game.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Game} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Game.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMaxEggReached();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getGoldenEggsEarned();
  if (f !== 0) {
    writer.writeUint64(
        2,
        f
    );
  }
  f = message.getGoldenEggsSpent();
  if (f !== 0) {
    writer.writeUint64(
        3,
        f
    );
  }
  f = message.getPrestigeCashEarned();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getLifetimeCashEarned();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getPiggyBank();
  if (f !== 0) {
    writer.writeUint64(
        7,
        f
    );
  }
  f = message.getPermitLevel();
  if (f !== 0) {
    writer.writeUint32(
        8,
        f
    );
  }
  f = message.getEpicResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        9,
        f,
        proto.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = message.getNextDailyGiftTime();
  if (f !== 0.0) {
    writer.writeDouble(
        10,
        f
    );
  }
  f = message.getNewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        11,
        f,
        proto.Backup.NewsHeadline.serializeBinaryToWriter
    );
  }
  f = message.getLastNewsTime();
  if (f !== 0.0) {
    writer.writeDouble(
        12,
        f
    );
  }
  f = message.getCurrentMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
        13,
        f
    );
  }
  f = message.getCurrentMultiplierExpiration();
  if (f !== 0.0) {
    writer.writeDouble(
        14,
        f
    );
  }
  f = message.getAchievementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        15,
        f,
        proto.Backup.AchievementInfo.serializeBinaryToWriter
    );
  }
  f = message.getUnclaimedGoldenEggs();
  if (f !== 0) {
    writer.writeUint64(
        16,
        f
    );
  }
  f = message.getMaxFarmSizeReachedList();
  if (f.length > 0) {
    writer.writePackedUint64(
        18,
        f
    );
  }
  f = message.getEggMedalLevelsList();
  if (f.length > 0) {
    writer.writePackedEnum(
        19,
        f
    );
  }
  f = message.getLastDailyGiftCollectedDay();
  if (f !== 0) {
    writer.writeUint32(
        20,
        f
    );
  }
  f = message.getCurrentFarm();
  if (f !== 0) {
    writer.writeUint32(
        22,
        f
    );
  }
  f = message.getProphecyEggs();
  if (f !== 0) {
    writer.writeUint64(
        23,
        f
    );
  }
  f = message.getUnclaimedProphecyEggs();
  if (f !== 0) {
    writer.writeUint32(
        24,
        f
    );
  }
  f = message.getLongIdleNotificationSet();
  if (f) {
    writer.writeBool(
        25,
        f
    );
  }
  f = message.getLongIdleNotificationThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
        26,
        f
    );
  }
  f = message.getLongIdleReward();
  if (f !== 0.0) {
    writer.writeDouble(
        27,
        f
    );
  }
  f = message.getDailyGiftIndex();
  if (f !== 0) {
    writer.writeUint32(
        28,
        f
    );
  }
  f = message.getHyperloopStation();
  if (f) {
    writer.writeBool(
        29,
        f
    );
  }
  f = message.getBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        30,
        f,
        proto.Backup.OwnedBoost.serializeBinaryToWriter
    );
  }
  f = message.getPiggyFullAlertShown();
  if (f) {
    writer.writeBool(
        31,
        f
    );
  }
  f = message.getTotalTimeCheatsDetected();
  if (f !== 0) {
    writer.writeUint32(
        32,
        f
    );
  }
  f = message.getPrestigeSoulBoostCash();
  if (f !== 0.0) {
    writer.writeDouble(
        33,
        f
    );
  }
  f = message.getSoulEggs();
  if (f !== 0.0) {
    writer.writeDouble(
        34,
        f
    );
  }
  f = message.getUnclaimedSoulEggs();
  if (f !== 0.0) {
    writer.writeDouble(
        35,
        f
    );
  }
  f = message.getForceEliteContracts();
  if (f) {
    writer.writeBool(
        36,
        f
    );
  }
  f = message.getNewPlayerEventEndTime();
  if (f !== 0.0) {
    writer.writeDouble(
        37,
        f
    );
  }
};


/**
 * optional Egg max_egg_reached = 1;
 * @return {!proto.Egg}
 */
proto.Backup.Game.prototype.getMaxEggReached = function () {
  return /** @type {!proto.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Egg} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setMaxEggReached = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 golden_eggs_earned = 2;
 * @return {number}
 */
proto.Backup.Game.prototype.getGoldenEggsEarned = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setGoldenEggsEarned = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 golden_eggs_spent = 3;
 * @return {number}
 */
proto.Backup.Game.prototype.getGoldenEggsSpent = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setGoldenEggsSpent = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double prestige_cash_earned = 5;
 * @return {number}
 */
proto.Backup.Game.prototype.getPrestigeCashEarned = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setPrestigeCashEarned = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double lifetime_cash_earned = 6;
 * @return {number}
 */
proto.Backup.Game.prototype.getLifetimeCashEarned = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setLifetimeCashEarned = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional uint64 piggy_bank = 7;
 * @return {number}
 */
proto.Backup.Game.prototype.getPiggyBank = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setPiggyBank = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 permit_level = 8;
 * @return {number}
 */
proto.Backup.Game.prototype.getPermitLevel = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setPermitLevel = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated ResearchItem epic_research = 9;
 * @return {!Array<!proto.Backup.ResearchItem>}
 */
proto.Backup.Game.prototype.getEpicResearchList = function () {
  return /** @type{!Array<!proto.Backup.ResearchItem>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.ResearchItem, 9));
};


/**
 * @param {!Array<!proto.Backup.ResearchItem>} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setEpicResearchList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.ResearchItem}
 */
proto.Backup.Game.prototype.addEpicResearch = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.clearEpicResearchList = function () {
  return this.setEpicResearchList([]);
};


/**
 * optional double next_daily_gift_time = 10;
 * @return {number}
 */
proto.Backup.Game.prototype.getNextDailyGiftTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setNextDailyGiftTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * repeated NewsHeadline news = 11;
 * @return {!Array<!proto.Backup.NewsHeadline>}
 */
proto.Backup.Game.prototype.getNewsList = function () {
  return /** @type{!Array<!proto.Backup.NewsHeadline>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.NewsHeadline, 11));
};


/**
 * @param {!Array<!proto.Backup.NewsHeadline>} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setNewsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.Backup.NewsHeadline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.NewsHeadline}
 */
proto.Backup.Game.prototype.addNews = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Backup.NewsHeadline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.clearNewsList = function () {
  return this.setNewsList([]);
};


/**
 * optional double last_news_time = 12;
 * @return {number}
 */
proto.Backup.Game.prototype.getLastNewsTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setLastNewsTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double current_multiplier = 13;
 * @return {number}
 */
proto.Backup.Game.prototype.getCurrentMultiplier = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setCurrentMultiplier = function (value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double current_multiplier_expiration = 14;
 * @return {number}
 */
proto.Backup.Game.prototype.getCurrentMultiplierExpiration = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setCurrentMultiplierExpiration = function (value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * repeated AchievementInfo achievements = 15;
 * @return {!Array<!proto.Backup.AchievementInfo>}
 */
proto.Backup.Game.prototype.getAchievementsList = function () {
  return /** @type{!Array<!proto.Backup.AchievementInfo>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.AchievementInfo, 15));
};


/**
 * @param {!Array<!proto.Backup.AchievementInfo>} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setAchievementsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.Backup.AchievementInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.AchievementInfo}
 */
proto.Backup.Game.prototype.addAchievements = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.Backup.AchievementInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.clearAchievementsList = function () {
  return this.setAchievementsList([]);
};


/**
 * optional uint64 unclaimed_golden_eggs = 16;
 * @return {number}
 */
proto.Backup.Game.prototype.getUnclaimedGoldenEggs = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setUnclaimedGoldenEggs = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * repeated uint64 max_farm_size_reached = 18;
 * @return {!Array<number>}
 */
proto.Backup.Game.prototype.getMaxFarmSizeReachedList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setMaxFarmSizeReachedList = function (value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.addMaxFarmSizeReached = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.clearMaxFarmSizeReachedList = function () {
  return this.setMaxFarmSizeReachedList([]);
};


/**
 * repeated TrophyLevel egg_medal_levels = 19;
 * @return {!Array<!proto.TrophyLevel>}
 */
proto.Backup.Game.prototype.getEggMedalLevelsList = function () {
  return /** @type {!Array<!proto.TrophyLevel>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<!proto.TrophyLevel>} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setEggMedalLevelsList = function (value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {!proto.TrophyLevel} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.addEggMedalLevels = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.clearEggMedalLevelsList = function () {
  return this.setEggMedalLevelsList([]);
};


/**
 * optional uint32 last_daily_gift_collected_day = 20;
 * @return {number}
 */
proto.Backup.Game.prototype.getLastDailyGiftCollectedDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setLastDailyGiftCollectedDay = function (value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional uint32 current_farm = 22;
 * @return {number}
 */
proto.Backup.Game.prototype.getCurrentFarm = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setCurrentFarm = function (value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional uint64 prophecy_eggs = 23;
 * @return {number}
 */
proto.Backup.Game.prototype.getProphecyEggs = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setProphecyEggs = function (value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional uint32 unclaimed_prophecy_eggs = 24;
 * @return {number}
 */
proto.Backup.Game.prototype.getUnclaimedProphecyEggs = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setUnclaimedProphecyEggs = function (value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional bool long_idle_notification_set = 25;
 * @return {boolean}
 */
proto.Backup.Game.prototype.getLongIdleNotificationSet = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setLongIdleNotificationSet = function (value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional double long_idle_notification_threshold = 26;
 * @return {number}
 */
proto.Backup.Game.prototype.getLongIdleNotificationThreshold = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setLongIdleNotificationThreshold = function (value) {
  return jspb.Message.setProto3FloatField(this, 26, value);
};


/**
 * optional double long_idle_reward = 27;
 * @return {number}
 */
proto.Backup.Game.prototype.getLongIdleReward = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setLongIdleReward = function (value) {
  return jspb.Message.setProto3FloatField(this, 27, value);
};


/**
 * optional uint32 daily_gift_index = 28;
 * @return {number}
 */
proto.Backup.Game.prototype.getDailyGiftIndex = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setDailyGiftIndex = function (value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional bool hyperloop_station = 29;
 * @return {boolean}
 */
proto.Backup.Game.prototype.getHyperloopStation = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setHyperloopStation = function (value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * repeated OwnedBoost boosts = 30;
 * @return {!Array<!proto.Backup.OwnedBoost>}
 */
proto.Backup.Game.prototype.getBoostsList = function () {
  return /** @type{!Array<!proto.Backup.OwnedBoost>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.OwnedBoost, 30));
};


/**
 * @param {!Array<!proto.Backup.OwnedBoost>} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setBoostsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.Backup.OwnedBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.OwnedBoost}
 */
proto.Backup.Game.prototype.addBoosts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.Backup.OwnedBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.clearBoostsList = function () {
  return this.setBoostsList([]);
};


/**
 * optional bool piggy_full_alert_shown = 31;
 * @return {boolean}
 */
proto.Backup.Game.prototype.getPiggyFullAlertShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setPiggyFullAlertShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional uint32 total_time_cheats_detected = 32;
 * @return {number}
 */
proto.Backup.Game.prototype.getTotalTimeCheatsDetected = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setTotalTimeCheatsDetected = function (value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional double prestige_soul_boost_cash = 33;
 * @return {number}
 */
proto.Backup.Game.prototype.getPrestigeSoulBoostCash = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 33, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setPrestigeSoulBoostCash = function (value) {
  return jspb.Message.setProto3FloatField(this, 33, value);
};


/**
 * optional double soul_eggs = 34;
 * @return {number}
 */
proto.Backup.Game.prototype.getSoulEggs = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 34, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setSoulEggs = function (value) {
  return jspb.Message.setProto3FloatField(this, 34, value);
};


/**
 * optional double unclaimed_soul_eggs = 35;
 * @return {number}
 */
proto.Backup.Game.prototype.getUnclaimedSoulEggs = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 35, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setUnclaimedSoulEggs = function (value) {
  return jspb.Message.setProto3FloatField(this, 35, value);
};


/**
 * optional bool force_elite_contracts = 36;
 * @return {boolean}
 */
proto.Backup.Game.prototype.getForceEliteContracts = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 36, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setForceEliteContracts = function (value) {
  return jspb.Message.setProto3BooleanField(this, 36, value);
};


/**
 * optional double new_player_event_end_time = 37;
 * @return {number}
 */
proto.Backup.Game.prototype.getNewPlayerEventEndTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 37, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Game} returns this
 */
proto.Backup.Game.prototype.setNewPlayerEventEndTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 37, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.ArtifactsStatus.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.ArtifactsStatus.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.ArtifactsStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.ArtifactsStatus.toObject = function (includeInstance, msg) {
    var f, obj = {
      infusing: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      itemBeingInfused: (f = msg.getItemBeingInfused()) && proto.ArtifactInventoryItem.toObject(includeInstance, f),
      eggTypeInfusing: jspb.Message.getFieldWithDefault(msg, 3, 0),
      infusingEggsRequired: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      eggsInfused: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      flowPercentageArtifacts: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      fuelingEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
      infusingEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
      lastFueledShip: jspb.Message.getFieldWithDefault(msg, 9, 0),
      inventoryScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
      introShown: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
      artifactBeingInfused: (f = msg.getArtifactBeingInfused()) && proto.Artifact.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.ArtifactsStatus}
 */
proto.Backup.ArtifactsStatus.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.ArtifactsStatus;
  return proto.Backup.ArtifactsStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.ArtifactsStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.ArtifactsStatus}
 */
proto.Backup.ArtifactsStatus.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setInfusing(value);
        break;
      case 2:
        var value = new proto.ArtifactInventoryItem;
        reader.readMessage(value, proto.ArtifactInventoryItem.deserializeBinaryFromReader);
        msg.setItemBeingInfused(value);
        break;
      case 3:
        var value = /** @type {!proto.Egg} */ (reader.readEnum());
        msg.setEggTypeInfusing(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setInfusingEggsRequired(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setEggsInfused(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFlowPercentageArtifacts(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setFuelingEnabled(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setInfusingEnabled(value);
        break;
      case 9:
        var value = /** @type {!proto.Mission.Spaceship} */ (reader.readEnum());
        msg.setLastFueledShip(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setInventoryScore(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setEnabled(value);
        break;
      case 12:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIntroShown(value);
        break;
      case 13:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.setArtifactBeingInfused(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.ArtifactsStatus.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.ArtifactsStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.ArtifactsStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.ArtifactsStatus.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInfusing();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getItemBeingInfused();
  if (f != null) {
    writer.writeMessage(
        2,
        f,
        proto.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
  f = message.getEggTypeInfusing();
  if (f !== 0.0) {
    writer.writeEnum(
        3,
        f
    );
  }
  f = message.getInfusingEggsRequired();
  if (f !== 0.0) {
    writer.writeDouble(
        4,
        f
    );
  }
  f = message.getEggsInfused();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getFlowPercentageArtifacts();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getFuelingEnabled();
  if (f) {
    writer.writeBool(
        7,
        f
    );
  }
  f = message.getInfusingEnabled();
  if (f) {
    writer.writeBool(
        8,
        f
    );
  }
  f = message.getLastFueledShip();
  if (f !== 0.0) {
    writer.writeEnum(
        9,
        f
    );
  }
  f = message.getInventoryScore();
  if (f !== 0.0) {
    writer.writeDouble(
        10,
        f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
        11,
        f
    );
  }
  f = message.getIntroShown();
  if (f) {
    writer.writeBool(
        12,
        f
    );
  }
  f = message.getArtifactBeingInfused();
  if (f != null) {
    writer.writeMessage(
        13,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool infusing = 1;
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.getInfusing = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setInfusing = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ArtifactInventoryItem item_being_infused = 2;
 * @return {?proto.ArtifactInventoryItem}
 */
proto.Backup.ArtifactsStatus.prototype.getItemBeingInfused = function () {
  return /** @type{?proto.ArtifactInventoryItem} */ (
      jspb.Message.getWrapperField(this, proto.ArtifactInventoryItem, 2));
};


/**
 * @param {?proto.ArtifactInventoryItem|undefined} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setItemBeingInfused = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.clearItemBeingInfused = function () {
  return this.setItemBeingInfused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.hasItemBeingInfused = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Egg egg_type_infusing = 3;
 * @return {!proto.Egg}
 */
proto.Backup.ArtifactsStatus.prototype.getEggTypeInfusing = function () {
  return /** @type {!proto.Egg} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Egg} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setEggTypeInfusing = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double infusing_eggs_required = 4;
 * @return {number}
 */
proto.Backup.ArtifactsStatus.prototype.getInfusingEggsRequired = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setInfusingEggsRequired = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double eggs_infused = 5;
 * @return {number}
 */
proto.Backup.ArtifactsStatus.prototype.getEggsInfused = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setEggsInfused = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double flow_percentage_artifacts = 6;
 * @return {number}
 */
proto.Backup.ArtifactsStatus.prototype.getFlowPercentageArtifacts = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setFlowPercentageArtifacts = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool fueling_enabled = 7;
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.getFuelingEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setFuelingEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool infusing_enabled = 8;
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.getInfusingEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setInfusingEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional Mission.Spaceship last_fueled_ship = 9;
 * @return {!proto.Mission.Spaceship}
 */
proto.Backup.ArtifactsStatus.prototype.getLastFueledShip = function () {
  return /** @type {!proto.Mission.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.Mission.Spaceship} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setLastFueledShip = function (value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional double inventory_score = 10;
 * @return {number}
 */
proto.Backup.ArtifactsStatus.prototype.getInventoryScore = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setInventoryScore = function (value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional bool enabled = 11;
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.getEnabled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setEnabled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool intro_shown = 12;
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.getIntroShown = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setIntroShown = function (value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional Artifact artifact_being_infused = 13;
 * @return {?proto.Artifact}
 */
proto.Backup.ArtifactsStatus.prototype.getArtifactBeingInfused = function () {
  return /** @type{?proto.Artifact} */ (
      jspb.Message.getWrapperField(this, proto.Artifact, 13));
};


/**
 * @param {?proto.Artifact|undefined} value
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.setArtifactBeingInfused = function (value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup.ArtifactsStatus} returns this
 */
proto.Backup.ArtifactsStatus.prototype.clearArtifactBeingInfused = function () {
  return this.setArtifactBeingInfused(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.ArtifactsStatus.prototype.hasArtifactBeingInfused = function () {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Backup.Farm.repeatedFields_ = [12, 13, 14, 15, 17, 18, 21, 22];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Farm.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Farm.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Farm} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Farm.toObject = function (includeInstance, msg) {
    var f, obj = {
      eggType: jspb.Message.getFieldWithDefault(msg, 1, 0),
      cashEarned: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      cashSpent: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      unclaimedCash: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      lastStepTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      numChickens: jspb.Message.getFieldWithDefault(msg, 6, 0),
      numChickensUnsettled: jspb.Message.getFieldWithDefault(msg, 7, 0),
      numChickensRunning: jspb.Message.getFieldWithDefault(msg, 8, 0),
      eggsLaid: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
      eggsPaidFor: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
      silosOwned: jspb.Message.getFieldWithDefault(msg, 11, 0),
      habsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
      habPopulationsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
      habPopulationInboundsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
      habIncubatorPopulationsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 15)) == null ? undefined : f,
      hatcheryPopulation: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
      vehiclesList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
      commonResearchList: jspb.Message.toObjectList(msg.getCommonResearchList(),
          proto.Backup.ResearchItem.toObject, includeInstance),
      farmType: jspb.Message.getFieldWithDefault(msg, 19, 0),
      contractId: jspb.Message.getFieldWithDefault(msg, 20, ""),
      hyperloopCarsList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
      activeBoostsList: jspb.Message.toObjectList(msg.getActiveBoostsList(),
          proto.Backup.ActiveBoost.toObject, includeInstance),
      timeCheatsDetected: jspb.Message.getFieldWithDefault(msg, 23, 0),
      timeCheatDebt: jspb.Message.getFloatingPointFieldWithDefault(msg, 24, 0.0),
      boostTokensReceived: jspb.Message.getFieldWithDefault(msg, 25, 0),
      boostTokensSpent: jspb.Message.getFieldWithDefault(msg, 26, 0),
      unclaimedBoostTokens: jspb.Message.getFieldWithDefault(msg, 27, 0),
      boostTokensGiven: jspb.Message.getFieldWithDefault(msg, 28, 0),
      gametimeUntilNextBoostToken: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
      eggsShipped: jspb.Message.getFloatingPointFieldWithDefault(msg, 30, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Farm}
 */
proto.Backup.Farm.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Farm;
  return proto.Backup.Farm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Farm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Farm}
 */
proto.Backup.Farm.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Egg} */ (reader.readEnum());
        msg.setEggType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCashEarned(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCashSpent(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setUnclaimedCash(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastStepTime(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumChickens(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumChickensUnsettled(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumChickensRunning(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setEggsLaid(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setEggsPaidFor(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSilosOwned(value);
        break;
      case 12:
        var values = /** @type {!Array<!proto.HabLevel>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
        for (var i = 0; i < values.length; i++) {
          msg.addHabs(values[i]);
        }
        break;
      case 13:
        var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
        for (var i = 0; i < values.length; i++) {
          msg.addHabPopulations(values[i]);
        }
        break;
      case 14:
        var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
        for (var i = 0; i < values.length; i++) {
          msg.addHabPopulationInbounds(values[i]);
        }
        break;
      case 15:
        var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
        for (var i = 0; i < values.length; i++) {
          msg.addHabIncubatorPopulations(values[i]);
        }
        break;
      case 16:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setHatcheryPopulation(value);
        break;
      case 17:
        var values = /** @type {!Array<!proto.VehicleType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
        for (var i = 0; i < values.length; i++) {
          msg.addVehicles(values[i]);
        }
        break;
      case 18:
        var value = new proto.Backup.ResearchItem;
        reader.readMessage(value, proto.Backup.ResearchItem.deserializeBinaryFromReader);
        msg.addCommonResearch(value);
        break;
      case 19:
        var value = /** @type {!proto.FarmType} */ (reader.readEnum());
        msg.setFarmType(value);
        break;
      case 20:
        var value = /** @type {string} */ (reader.readString());
        msg.setContractId(value);
        break;
      case 21:
        var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
        for (var i = 0; i < values.length; i++) {
          msg.addHyperloopCars(values[i]);
        }
        break;
      case 22:
        var value = new proto.Backup.ActiveBoost;
        reader.readMessage(value, proto.Backup.ActiveBoost.deserializeBinaryFromReader);
        msg.addActiveBoosts(value);
        break;
      case 23:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTimeCheatsDetected(value);
        break;
      case 24:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTimeCheatDebt(value);
        break;
      case 25:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setBoostTokensReceived(value);
        break;
      case 26:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setBoostTokensSpent(value);
        break;
      case 27:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setUnclaimedBoostTokens(value);
        break;
      case 28:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setBoostTokensGiven(value);
        break;
      case 29:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setGametimeUntilNextBoostToken(value);
        break;
      case 30:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setEggsShipped(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Farm.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Farm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Farm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Farm.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEggType();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getCashEarned();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getCashSpent();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getUnclaimedCash();
  if (f !== 0.0) {
    writer.writeDouble(
        4,
        f
    );
  }
  f = message.getLastStepTime();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getNumChickens();
  if (f !== 0) {
    writer.writeUint64(
        6,
        f
    );
  }
  f = message.getNumChickensUnsettled();
  if (f !== 0) {
    writer.writeUint64(
        7,
        f
    );
  }
  f = message.getNumChickensRunning();
  if (f !== 0) {
    writer.writeUint64(
        8,
        f
    );
  }
  f = message.getEggsLaid();
  if (f !== 0.0) {
    writer.writeDouble(
        9,
        f
    );
  }
  f = message.getEggsPaidFor();
  if (f !== 0.0) {
    writer.writeDouble(
        10,
        f
    );
  }
  f = message.getSilosOwned();
  if (f !== 0) {
    writer.writeUint32(
        11,
        f
    );
  }
  f = message.getHabsList();
  if (f.length > 0) {
    writer.writePackedEnum(
        12,
        f
    );
  }
  f = message.getHabPopulationsList();
  if (f.length > 0) {
    writer.writePackedUint64(
        13,
        f
    );
  }
  f = message.getHabPopulationInboundsList();
  if (f.length > 0) {
    writer.writePackedUint64(
        14,
        f
    );
  }
  f = message.getHabIncubatorPopulationsList();
  if (f.length > 0) {
    writer.writePackedDouble(
        15,
        f
    );
  }
  f = message.getHatcheryPopulation();
  if (f !== 0.0) {
    writer.writeDouble(
        16,
        f
    );
  }
  f = message.getVehiclesList();
  if (f.length > 0) {
    writer.writePackedEnum(
        17,
        f
    );
  }
  f = message.getCommonResearchList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        18,
        f,
        proto.Backup.ResearchItem.serializeBinaryToWriter
    );
  }
  f = message.getFarmType();
  if (f !== 0.0) {
    writer.writeEnum(
        19,
        f
    );
  }
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
        20,
        f
    );
  }
  f = message.getHyperloopCarsList();
  if (f.length > 0) {
    writer.writePackedUint32(
        21,
        f
    );
  }
  f = message.getActiveBoostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        22,
        f,
        proto.Backup.ActiveBoost.serializeBinaryToWriter
    );
  }
  f = message.getTimeCheatsDetected();
  if (f !== 0) {
    writer.writeUint32(
        23,
        f
    );
  }
  f = message.getTimeCheatDebt();
  if (f !== 0.0) {
    writer.writeDouble(
        24,
        f
    );
  }
  f = message.getBoostTokensReceived();
  if (f !== 0) {
    writer.writeUint32(
        25,
        f
    );
  }
  f = message.getBoostTokensSpent();
  if (f !== 0) {
    writer.writeUint32(
        26,
        f
    );
  }
  f = message.getUnclaimedBoostTokens();
  if (f !== 0) {
    writer.writeUint32(
        27,
        f
    );
  }
  f = message.getBoostTokensGiven();
  if (f !== 0) {
    writer.writeUint32(
        28,
        f
    );
  }
  f = message.getGametimeUntilNextBoostToken();
  if (f !== 0.0) {
    writer.writeDouble(
        29,
        f
    );
  }
  f = message.getEggsShipped();
  if (f !== 0.0) {
    writer.writeDouble(
        30,
        f
    );
  }
};


/**
 * optional Egg egg_type = 1;
 * @return {!proto.Egg}
 */
proto.Backup.Farm.prototype.getEggType = function () {
  return /** @type {!proto.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Egg} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setEggType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double cash_earned = 2;
 * @return {number}
 */
proto.Backup.Farm.prototype.getCashEarned = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setCashEarned = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double cash_spent = 3;
 * @return {number}
 */
proto.Backup.Farm.prototype.getCashSpent = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setCashSpent = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double unclaimed_cash = 4;
 * @return {number}
 */
proto.Backup.Farm.prototype.getUnclaimedCash = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setUnclaimedCash = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double last_step_time = 5;
 * @return {number}
 */
proto.Backup.Farm.prototype.getLastStepTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setLastStepTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint64 num_chickens = 6;
 * @return {number}
 */
proto.Backup.Farm.prototype.getNumChickens = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setNumChickens = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 num_chickens_unsettled = 7;
 * @return {number}
 */
proto.Backup.Farm.prototype.getNumChickensUnsettled = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setNumChickensUnsettled = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 num_chickens_running = 8;
 * @return {number}
 */
proto.Backup.Farm.prototype.getNumChickensRunning = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setNumChickensRunning = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double eggs_laid = 9;
 * @return {number}
 */
proto.Backup.Farm.prototype.getEggsLaid = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setEggsLaid = function (value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double eggs_paid_for = 10;
 * @return {number}
 */
proto.Backup.Farm.prototype.getEggsPaidFor = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setEggsPaidFor = function (value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional uint32 silos_owned = 11;
 * @return {number}
 */
proto.Backup.Farm.prototype.getSilosOwned = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setSilosOwned = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * repeated HabLevel habs = 12;
 * @return {!Array<!proto.HabLevel>}
 */
proto.Backup.Farm.prototype.getHabsList = function () {
  return /** @type {!Array<!proto.HabLevel>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<!proto.HabLevel>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setHabsList = function (value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!proto.HabLevel} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.addHabs = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearHabsList = function () {
  return this.setHabsList([]);
};


/**
 * repeated uint64 hab_populations = 13;
 * @return {!Array<number>}
 */
proto.Backup.Farm.prototype.getHabPopulationsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setHabPopulationsList = function (value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.addHabPopulations = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearHabPopulationsList = function () {
  return this.setHabPopulationsList([]);
};


/**
 * repeated uint64 hab_population_inbounds = 14;
 * @return {!Array<number>}
 */
proto.Backup.Farm.prototype.getHabPopulationInboundsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setHabPopulationInboundsList = function (value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.addHabPopulationInbounds = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearHabPopulationInboundsList = function () {
  return this.setHabPopulationInboundsList([]);
};


/**
 * repeated double hab_incubator_populations = 15;
 * @return {!Array<number>}
 */
proto.Backup.Farm.prototype.getHabIncubatorPopulationsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 15));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setHabIncubatorPopulationsList = function (value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.addHabIncubatorPopulations = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearHabIncubatorPopulationsList = function () {
  return this.setHabIncubatorPopulationsList([]);
};


/**
 * optional double hatchery_population = 16;
 * @return {number}
 */
proto.Backup.Farm.prototype.getHatcheryPopulation = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setHatcheryPopulation = function (value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * repeated VehicleType vehicles = 17;
 * @return {!Array<!proto.VehicleType>}
 */
proto.Backup.Farm.prototype.getVehiclesList = function () {
  return /** @type {!Array<!proto.VehicleType>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<!proto.VehicleType>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setVehiclesList = function (value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {!proto.VehicleType} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.addVehicles = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearVehiclesList = function () {
  return this.setVehiclesList([]);
};


/**
 * repeated ResearchItem common_research = 18;
 * @return {!Array<!proto.Backup.ResearchItem>}
 */
proto.Backup.Farm.prototype.getCommonResearchList = function () {
  return /** @type{!Array<!proto.Backup.ResearchItem>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.ResearchItem, 18));
};


/**
 * @param {!Array<!proto.Backup.ResearchItem>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setCommonResearchList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.Backup.ResearchItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.ResearchItem}
 */
proto.Backup.Farm.prototype.addCommonResearch = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.Backup.ResearchItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearCommonResearchList = function () {
  return this.setCommonResearchList([]);
};


/**
 * optional FarmType farm_type = 19;
 * @return {!proto.FarmType}
 */
proto.Backup.Farm.prototype.getFarmType = function () {
  return /** @type {!proto.FarmType} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.FarmType} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setFarmType = function (value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional string contract_id = 20;
 * @return {string}
 */
proto.Backup.Farm.prototype.getContractId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setContractId = function (value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated uint32 hyperloop_cars = 21;
 * @return {!Array<number>}
 */
proto.Backup.Farm.prototype.getHyperloopCarsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setHyperloopCarsList = function (value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.addHyperloopCars = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearHyperloopCarsList = function () {
  return this.setHyperloopCarsList([]);
};


/**
 * repeated ActiveBoost active_boosts = 22;
 * @return {!Array<!proto.Backup.ActiveBoost>}
 */
proto.Backup.Farm.prototype.getActiveBoostsList = function () {
  return /** @type{!Array<!proto.Backup.ActiveBoost>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.ActiveBoost, 22));
};


/**
 * @param {!Array<!proto.Backup.ActiveBoost>} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setActiveBoostsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.Backup.ActiveBoost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.ActiveBoost}
 */
proto.Backup.Farm.prototype.addActiveBoosts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.Backup.ActiveBoost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.clearActiveBoostsList = function () {
  return this.setActiveBoostsList([]);
};


/**
 * optional uint32 time_cheats_detected = 23;
 * @return {number}
 */
proto.Backup.Farm.prototype.getTimeCheatsDetected = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setTimeCheatsDetected = function (value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional double time_cheat_debt = 24;
 * @return {number}
 */
proto.Backup.Farm.prototype.getTimeCheatDebt = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setTimeCheatDebt = function (value) {
  return jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * optional uint32 boost_tokens_received = 25;
 * @return {number}
 */
proto.Backup.Farm.prototype.getBoostTokensReceived = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setBoostTokensReceived = function (value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional uint32 boost_tokens_spent = 26;
 * @return {number}
 */
proto.Backup.Farm.prototype.getBoostTokensSpent = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setBoostTokensSpent = function (value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional uint32 unclaimed_boost_tokens = 27;
 * @return {number}
 */
proto.Backup.Farm.prototype.getUnclaimedBoostTokens = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setUnclaimedBoostTokens = function (value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional uint32 boost_tokens_given = 28;
 * @return {number}
 */
proto.Backup.Farm.prototype.getBoostTokensGiven = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setBoostTokensGiven = function (value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional double gametime_until_next_boost_token = 29;
 * @return {number}
 */
proto.Backup.Farm.prototype.getGametimeUntilNextBoostToken = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setGametimeUntilNextBoostToken = function (value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional double eggs_shipped = 30;
 * @return {number}
 */
proto.Backup.Farm.prototype.getEggsShipped = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 30, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Farm} returns this
 */
proto.Backup.Farm.prototype.setEggsShipped = function (value) {
  return jspb.Message.setProto3FloatField(this, 30, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Mission.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Mission.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Mission} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Mission.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      completed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      referenceValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Mission}
 */
proto.Backup.Mission.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Mission;
  return proto.Backup.Mission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Mission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Mission}
 */
proto.Backup.Mission.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCompleted(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setReferenceValue(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Mission.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Mission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Mission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Mission.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getCompleted();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
  f = message.getReferenceValue();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Backup.Mission.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.Mission} returns this
 */
proto.Backup.Mission.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool completed = 2;
 * @return {boolean}
 */
proto.Backup.Mission.prototype.getCompleted = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Mission} returns this
 */
proto.Backup.Mission.prototype.setCompleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional double reference_value = 3;
 * @return {number}
 */
proto.Backup.Mission.prototype.getReferenceValue = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Mission} returns this
 */
proto.Backup.Mission.prototype.setReferenceValue = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Backup.Missions.repeatedFields_ = [3, 4];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Missions.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Missions.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Missions} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Missions.toObject = function (includeInstance, msg) {
    var f, obj = {
      currentMissionName: jspb.Message.getFieldWithDefault(msg, 1, ""),
      referenceValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      missionsList: jspb.Message.toObjectList(msg.getMissionsList(),
          proto.Backup.Mission.toObject, includeInstance),
      currentMissionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Missions}
 */
proto.Backup.Missions.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Missions;
  return proto.Backup.Missions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Missions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Missions}
 */
proto.Backup.Missions.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrentMissionName(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setReferenceValue(value);
        break;
      case 3:
        var value = new proto.Backup.Mission;
        reader.readMessage(value, proto.Backup.Mission.deserializeBinaryFromReader);
        msg.addMissions(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.addCurrentMissions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Missions.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Missions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Missions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Missions.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getCurrentMissionName();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getReferenceValue();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        3,
        f,
        proto.Backup.Mission.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
        4,
        f
    );
  }
};


/**
 * optional string current_mission_name = 1;
 * @return {string}
 */
proto.Backup.Missions.prototype.getCurrentMissionName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.setCurrentMissionName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double reference_value = 2;
 * @return {number}
 */
proto.Backup.Missions.prototype.getReferenceValue = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.setReferenceValue = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated Mission missions = 3;
 * @return {!Array<!proto.Backup.Mission>}
 */
proto.Backup.Missions.prototype.getMissionsList = function () {
  return /** @type{!Array<!proto.Backup.Mission>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.Mission, 3));
};


/**
 * @param {!Array<!proto.Backup.Mission>} value
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.setMissionsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Backup.Mission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.Mission}
 */
proto.Backup.Missions.prototype.addMissions = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Backup.Mission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.clearMissionsList = function () {
  return this.setMissionsList([]);
};


/**
 * repeated string current_missions = 4;
 * @return {!Array<string>}
 */
proto.Backup.Missions.prototype.getCurrentMissionsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.setCurrentMissionsList = function (value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.addCurrentMissions = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup.Missions} returns this
 */
proto.Backup.Missions.prototype.clearCurrentMissionsList = function () {
  return this.setCurrentMissionsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Backup.Misc.prototype.toObject = function (opt_includeInstance) {
    return proto.Backup.Misc.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Backup.Misc} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Backup.Misc.toObject = function (includeInstance, msg) {
    var f, obj = {
      chickenBtnPrefBig: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      freeHatcheryRefillGiven: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      lastShareFarmValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      lastShareSwarmFarmValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      lastShareSwarmSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      friendRank: jspb.Message.getFieldWithDefault(msg, 6, 0),
      friendRankPop: jspb.Message.getFieldWithDefault(msg, 7, 0),
      globalRank: jspb.Message.getFieldWithDefault(msg, 8, 0),
      globalRankPop: jspb.Message.getFieldWithDefault(msg, 9, 0),
      lastPrestigeAlertSoulEggs: jspb.Message.getFieldWithDefault(msg, 10, 0),
      trophyAlert: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
      arAlert: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
      contractsAlert: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
      coopAlert: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
      switchAlert: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
      eggOfProphecyAlert: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
      boostTokenAlert: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
      soulEggAlert: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
      backupReminderAlert: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Backup.Misc}
 */
proto.Backup.Misc.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Backup.Misc;
  return proto.Backup.Misc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Backup.Misc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Backup.Misc}
 */
proto.Backup.Misc.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setChickenBtnPrefBig(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setFreeHatcheryRefillGiven(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastShareFarmValue(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastShareSwarmFarmValue(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastShareSwarmSize(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setFriendRank(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setFriendRankPop(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setGlobalRank(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setGlobalRankPop(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setLastPrestigeAlertSoulEggs(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setTrophyAlert(value);
        break;
      case 12:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setArAlert(value);
        break;
      case 13:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setContractsAlert(value);
        break;
      case 14:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCoopAlert(value);
        break;
      case 15:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSwitchAlert(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setEggOfProphecyAlert(value);
        break;
      case 17:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setBoostTokenAlert(value);
        break;
      case 18:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSoulEggAlert(value);
        break;
      case 19:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setBackupReminderAlert(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Backup.Misc.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Backup.Misc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Backup.Misc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Backup.Misc.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getChickenBtnPrefBig();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getFreeHatcheryRefillGiven();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
  f = message.getLastShareFarmValue();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getLastShareSwarmFarmValue();
  if (f !== 0.0) {
    writer.writeDouble(
        4,
        f
    );
  }
  f = message.getLastShareSwarmSize();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getFriendRank();
  if (f !== 0) {
    writer.writeUint64(
        6,
        f
    );
  }
  f = message.getFriendRankPop();
  if (f !== 0) {
    writer.writeUint64(
        7,
        f
    );
  }
  f = message.getGlobalRank();
  if (f !== 0) {
    writer.writeUint64(
        8,
        f
    );
  }
  f = message.getGlobalRankPop();
  if (f !== 0) {
    writer.writeUint64(
        9,
        f
    );
  }
  f = message.getLastPrestigeAlertSoulEggs();
  if (f !== 0) {
    writer.writeUint64(
        10,
        f
    );
  }
  f = message.getTrophyAlert();
  if (f) {
    writer.writeBool(
        11,
        f
    );
  }
  f = message.getArAlert();
  if (f) {
    writer.writeBool(
        12,
        f
    );
  }
  f = message.getContractsAlert();
  if (f) {
    writer.writeBool(
        13,
        f
    );
  }
  f = message.getCoopAlert();
  if (f) {
    writer.writeBool(
        14,
        f
    );
  }
  f = message.getSwitchAlert();
  if (f) {
    writer.writeBool(
        15,
        f
    );
  }
  f = message.getEggOfProphecyAlert();
  if (f) {
    writer.writeBool(
        16,
        f
    );
  }
  f = message.getBoostTokenAlert();
  if (f) {
    writer.writeBool(
        17,
        f
    );
  }
  f = message.getSoulEggAlert();
  if (f) {
    writer.writeBool(
        18,
        f
    );
  }
  f = message.getBackupReminderAlert();
  if (f) {
    writer.writeBool(
        19,
        f
    );
  }
};


/**
 * optional bool chicken_btn_pref_big = 1;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getChickenBtnPrefBig = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setChickenBtnPrefBig = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool free_hatchery_refill_given = 2;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getFreeHatcheryRefillGiven = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setFreeHatcheryRefillGiven = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional double last_share_farm_value = 3;
 * @return {number}
 */
proto.Backup.Misc.prototype.getLastShareFarmValue = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setLastShareFarmValue = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double last_share_swarm_farm_value = 4;
 * @return {number}
 */
proto.Backup.Misc.prototype.getLastShareSwarmFarmValue = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setLastShareSwarmFarmValue = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double last_share_swarm_size = 5;
 * @return {number}
 */
proto.Backup.Misc.prototype.getLastShareSwarmSize = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setLastShareSwarmSize = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint64 friend_rank = 6;
 * @return {number}
 */
proto.Backup.Misc.prototype.getFriendRank = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setFriendRank = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 friend_rank_pop = 7;
 * @return {number}
 */
proto.Backup.Misc.prototype.getFriendRankPop = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setFriendRankPop = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 global_rank = 8;
 * @return {number}
 */
proto.Backup.Misc.prototype.getGlobalRank = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setGlobalRank = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 global_rank_pop = 9;
 * @return {number}
 */
proto.Backup.Misc.prototype.getGlobalRankPop = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setGlobalRankPop = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 last_prestige_alert_soul_eggs = 10;
 * @return {number}
 */
proto.Backup.Misc.prototype.getLastPrestigeAlertSoulEggs = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setLastPrestigeAlertSoulEggs = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool trophy_alert = 11;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getTrophyAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setTrophyAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool ar_alert = 12;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getArAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setArAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool contracts_alert = 13;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getContractsAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setContractsAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool coop_alert = 14;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getCoopAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setCoopAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool switch_alert = 15;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getSwitchAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setSwitchAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool egg_of_prophecy_alert = 16;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getEggOfProphecyAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setEggOfProphecyAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool boost_token_alert = 17;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getBoostTokenAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setBoostTokenAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool soul_egg_alert = 18;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getSoulEggAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setSoulEggAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool backup_reminder_alert = 19;
 * @return {boolean}
 */
proto.Backup.Misc.prototype.getBackupReminderAlert = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup.Misc} returns this
 */
proto.Backup.Misc.prototype.setBackupReminderAlert = function (value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.Backup.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.Backup.prototype.getUserName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setUserName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double approx_time = 3;
 * @return {number}
 */
proto.Backup.prototype.getApproxTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setApproxTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional Settings settings = 4;
 * @return {?proto.Backup.Settings}
 */
proto.Backup.prototype.getSettings = function () {
  return /** @type{?proto.Backup.Settings} */ (
      jspb.Message.getWrapperField(this, proto.Backup.Settings, 4));
};


/**
 * @param {?proto.Backup.Settings|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setSettings = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearSettings = function () {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasSettings = function () {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Tutorial tutorial = 5;
 * @return {?proto.Backup.Tutorial}
 */
proto.Backup.prototype.getTutorial = function () {
  return /** @type{?proto.Backup.Tutorial} */ (
      jspb.Message.getWrapperField(this, proto.Backup.Tutorial, 5));
};


/**
 * @param {?proto.Backup.Tutorial|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setTutorial = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearTutorial = function () {
  return this.setTutorial(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasTutorial = function () {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Stats stats = 6;
 * @return {?proto.Backup.Stats}
 */
proto.Backup.prototype.getStats = function () {
  return /** @type{?proto.Backup.Stats} */ (
      jspb.Message.getWrapperField(this, proto.Backup.Stats, 6));
};


/**
 * @param {?proto.Backup.Stats|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setStats = function (value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearStats = function () {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasStats = function () {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Game game = 7;
 * @return {?proto.Backup.Game}
 */
proto.Backup.prototype.getGame = function () {
  return /** @type{?proto.Backup.Game} */ (
      jspb.Message.getWrapperField(this, proto.Backup.Game, 7));
};


/**
 * @param {?proto.Backup.Game|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setGame = function (value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearGame = function () {
  return this.setGame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasGame = function () {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Missions missions = 9;
 * @return {?proto.Backup.Missions}
 */
proto.Backup.prototype.getMissions = function () {
  return /** @type{?proto.Backup.Missions} */ (
      jspb.Message.getWrapperField(this, proto.Backup.Missions, 9));
};


/**
 * @param {?proto.Backup.Missions|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setMissions = function (value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearMissions = function () {
  return this.setMissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasMissions = function () {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Misc misc = 10;
 * @return {?proto.Backup.Misc}
 */
proto.Backup.prototype.getMisc = function () {
  return /** @type{?proto.Backup.Misc} */ (
      jspb.Message.getWrapperField(this, proto.Backup.Misc, 10));
};


/**
 * @param {?proto.Backup.Misc|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setMisc = function (value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearMisc = function () {
  return this.setMisc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasMisc = function () {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated Farm farms = 12;
 * @return {!Array<!proto.Backup.Farm>}
 */
proto.Backup.prototype.getFarmsList = function () {
  return /** @type{!Array<!proto.Backup.Farm>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Backup.Farm, 12));
};


/**
 * @param {!Array<!proto.Backup.Farm>} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setFarmsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.Backup.Farm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Backup.Farm}
 */
proto.Backup.prototype.addFarms = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Backup.Farm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearFarmsList = function () {
  return this.setFarmsList([]);
};


/**
 * optional MyContracts contracts = 13;
 * @return {?proto.MyContracts}
 */
proto.Backup.prototype.getContracts = function () {
  return /** @type{?proto.MyContracts} */ (
      jspb.Message.getWrapperField(this, proto.MyContracts, 13));
};


/**
 * @param {?proto.MyContracts|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setContracts = function (value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearContracts = function () {
  return this.setContracts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasContracts = function () {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ArtifactsStatus artifacts_status = 14;
 * @return {?proto.Backup.ArtifactsStatus}
 */
proto.Backup.prototype.getArtifactsStatus = function () {
  return /** @type{?proto.Backup.ArtifactsStatus} */ (
      jspb.Message.getWrapperField(this, proto.Backup.ArtifactsStatus, 14));
};


/**
 * @param {?proto.Backup.ArtifactsStatus|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setArtifactsStatus = function (value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearArtifactsStatus = function () {
  return this.setArtifactsStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasArtifactsStatus = function () {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ArtifactsDatabase artifacts_database = 15;
 * @return {?proto.ArtifactsDatabase}
 */
proto.Backup.prototype.getArtifactsDatabase = function () {
  return /** @type{?proto.ArtifactsDatabase} */ (
      jspb.Message.getWrapperField(this, proto.ArtifactsDatabase, 15));
};


/**
 * @param {?proto.ArtifactsDatabase|undefined} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setArtifactsDatabase = function (value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.clearArtifactsDatabase = function () {
  return this.setArtifactsDatabase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Backup.prototype.hasArtifactsDatabase = function () {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string game_services_id = 16;
 * @return {string}
 */
proto.Backup.prototype.getGameServicesId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setGameServicesId = function (value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string device_id = 17;
 * @return {string}
 */
proto.Backup.prototype.getDeviceId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setDeviceId = function (value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string ei_user_id = 18;
 * @return {string}
 */
proto.Backup.prototype.getEiUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setEiUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool force_offer_backup = 20;
 * @return {boolean}
 */
proto.Backup.prototype.getForceOfferBackup = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setForceOfferBackup = function (value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional uint32 client_version = 21;
 * @return {number}
 */
proto.Backup.prototype.getClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional bool force_backup = 22;
 * @return {boolean}
 */
proto.Backup.prototype.getForceBackup = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setForceBackup = function (value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional uint64 checksum = 100;
 * @return {number}
 */
proto.Backup.prototype.getChecksum = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {number} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setChecksum = function (value) {
  return jspb.Message.setProto3IntField(this, 100, value);
};


/**
 * optional string signature = 101;
 * @return {string}
 */
proto.Backup.prototype.getSignature = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 101, ""));
};


/**
 * @param {string} value
 * @return {!proto.Backup} returns this
 */
proto.Backup.prototype.setSignature = function (value) {
  return jspb.Message.setProto3StringField(this, 101, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FirstContactRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.FirstContactRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FirstContactRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FirstContactRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      clientVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
      platform: jspb.Message.getFieldWithDefault(msg, 3, 0),
      eiUserId: jspb.Message.getFieldWithDefault(msg, 4, ""),
      deviceId: jspb.Message.getFieldWithDefault(msg, 5, ""),
      username: jspb.Message.getFieldWithDefault(msg, 6, ""),
      gameServicesId: jspb.Message.getFieldWithDefault(msg, 7, ""),
      requestInfo: (f = msg.getRequestInfo()) && proto.BasicRequestInfo.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FirstContactRequest}
 */
proto.FirstContactRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FirstContactRequest;
  return proto.FirstContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FirstContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FirstContactRequest}
 */
proto.FirstContactRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setClientVersion(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setPlatform(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setEiUserId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setDeviceId(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setUsername(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setGameServicesId(value);
        break;
      case 8:
        var value = new proto.BasicRequestInfo;
        reader.readMessage(value, proto.BasicRequestInfo.deserializeBinaryFromReader);
        msg.setRequestInfo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FirstContactRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.FirstContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FirstContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FirstContactRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
  f = message.getPlatform();
  if (f !== 0) {
    writer.writeUint32(
        3,
        f
    );
  }
  f = message.getEiUserId();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
        5,
        f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
        6,
        f
    );
  }
  f = message.getGameServicesId();
  if (f.length > 0) {
    writer.writeString(
        7,
        f
    );
  }
  f = message.getRequestInfo();
  if (f != null) {
    writer.writeMessage(
        8,
        f,
        proto.BasicRequestInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.FirstContactRequest.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 client_version = 2;
 * @return {number}
 */
proto.FirstContactRequest.prototype.getClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 platform = 3;
 * @return {number}
 */
proto.FirstContactRequest.prototype.getPlatform = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ei_user_id = 4;
 * @return {string}
 */
proto.FirstContactRequest.prototype.getEiUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setEiUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_id = 5;
 * @return {string}
 */
proto.FirstContactRequest.prototype.getDeviceId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setDeviceId = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string username = 6;
 * @return {string}
 */
proto.FirstContactRequest.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setUsername = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string game_services_id = 7;
 * @return {string}
 */
proto.FirstContactRequest.prototype.getGameServicesId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setGameServicesId = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional BasicRequestInfo request_info = 8;
 * @return {?proto.BasicRequestInfo}
 */
proto.FirstContactRequest.prototype.getRequestInfo = function () {
  return /** @type{?proto.BasicRequestInfo} */ (
      jspb.Message.getWrapperField(this, proto.BasicRequestInfo, 8));
};


/**
 * @param {?proto.BasicRequestInfo|undefined} value
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.setRequestInfo = function (value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.FirstContactRequest} returns this
 */
proto.FirstContactRequest.prototype.clearRequestInfo = function () {
  return this.setRequestInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FirstContactRequest.prototype.hasRequestInfo = function () {
  return jspb.Message.getField(this, 8) != null;
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FirstContactResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.FirstContactResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FirstContactResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FirstContactResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      firstContact: (f = msg.getFirstContact()) && proto.FirstContact.toObject(includeInstance, f),
      checksum: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FirstContactResponse}
 */
proto.FirstContactResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FirstContactResponse;
  return proto.FirstContactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FirstContactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FirstContactResponse}
 */
proto.FirstContactResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FirstContact;
        reader.readMessage(value, proto.FirstContact.deserializeBinaryFromReader);
        msg.setFirstContact(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setChecksum(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FirstContactResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.FirstContactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FirstContactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FirstContactResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getFirstContact();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.FirstContact.serializeBinaryToWriter
    );
  }
  f = message.getChecksum();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
};


/**
 * optional FirstContact first_contact = 1;
 * @return {?proto.FirstContact}
 */
proto.FirstContactResponse.prototype.getFirstContact = function () {
  return /** @type{?proto.FirstContact} */ (
      jspb.Message.getWrapperField(this, proto.FirstContact, 1));
};


/**
 * @param {?proto.FirstContact|undefined} value
 * @return {!proto.FirstContactResponse} returns this
 */
proto.FirstContactResponse.prototype.setFirstContact = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.FirstContactResponse} returns this
 */
proto.FirstContactResponse.prototype.clearFirstContact = function () {
  return this.setFirstContact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FirstContactResponse.prototype.hasFirstContact = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string checksum = 2;
 * @return {string}
 */
proto.FirstContactResponse.prototype.getChecksum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContactResponse} returns this
 */
proto.FirstContactResponse.prototype.setChecksum = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FirstContact.repeatedFields_ = [3];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FirstContact.prototype.toObject = function (opt_includeInstance) {
    return proto.FirstContact.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FirstContact} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FirstContact.toObject = function (includeInstance, msg) {
    var f, obj = {
      backup: (f = msg.getBackup()) && proto.Backup.toObject(includeInstance, f),
      eiUserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
      idsTransferredList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
      errorCode: jspb.Message.getFieldWithDefault(msg, 4, 0),
      errorMessage: jspb.Message.getFieldWithDefault(msg, 5, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FirstContact}
 */
proto.FirstContact.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FirstContact;
  return proto.FirstContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FirstContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FirstContact}
 */
proto.FirstContact.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Backup;
        reader.readMessage(value, proto.Backup.deserializeBinaryFromReader);
        msg.setBackup(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setEiUserId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.addIdsTransferred(value);
        break;
      case 4:
        var value = /** @type {!proto.ErrorCode} */ (reader.readEnum());
        msg.setErrorCode(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FirstContact.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.FirstContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FirstContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FirstContact.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getBackup();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Backup.serializeBinaryToWriter
    );
  }
  f = message.getEiUserId();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getIdsTransferredList();
  if (f.length > 0) {
    writer.writeRepeatedString(
        3,
        f
    );
  }
  f = message.getErrorCode();
  if (f !== 0.0) {
    writer.writeEnum(
        4,
        f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
        5,
        f
    );
  }
};


/**
 * optional Backup backup = 1;
 * @return {?proto.Backup}
 */
proto.FirstContact.prototype.getBackup = function () {
  return /** @type{?proto.Backup} */ (
      jspb.Message.getWrapperField(this, proto.Backup, 1));
};


/**
 * @param {?proto.Backup|undefined} value
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.setBackup = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.clearBackup = function () {
  return this.setBackup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FirstContact.prototype.hasBackup = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ei_user_id = 2;
 * @return {string}
 */
proto.FirstContact.prototype.getEiUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.setEiUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string ids_transferred = 3;
 * @return {!Array<string>}
 */
proto.FirstContact.prototype.getIdsTransferredList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.setIdsTransferredList = function (value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.addIdsTransferred = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.clearIdsTransferredList = function () {
  return this.setIdsTransferredList([]);
};


/**
 * optional ErrorCode error_code = 4;
 * @return {!proto.ErrorCode}
 */
proto.FirstContact.prototype.getErrorCode = function () {
  return /** @type {!proto.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ErrorCode} value
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.setErrorCode = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string error_message = 5;
 * @return {string}
 */
proto.FirstContact.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstContact} returns this
 */
proto.FirstContact.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Reward.prototype.toObject = function (opt_includeInstance) {
    return proto.Reward.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Reward} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Reward.toObject = function (includeInstance, msg) {
    var f, obj = {
      rewardType: jspb.Message.getFieldWithDefault(msg, 1, 0),
      rewardSubType: jspb.Message.getFieldWithDefault(msg, 2, ""),
      rewardAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Reward}
 */
proto.Reward.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Reward;
  return proto.Reward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Reward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Reward}
 */
proto.Reward.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.RewardType} */ (reader.readEnum());
        msg.setRewardType(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setRewardSubType(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setRewardAmount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Reward.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Reward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Reward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Reward.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getRewardType();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getRewardSubType();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getRewardAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
};


/**
 * optional RewardType reward_type = 1;
 * @return {!proto.RewardType}
 */
proto.Reward.prototype.getRewardType = function () {
  return /** @type {!proto.RewardType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.RewardType} value
 * @return {!proto.Reward} returns this
 */
proto.Reward.prototype.setRewardType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string reward_sub_type = 2;
 * @return {string}
 */
proto.Reward.prototype.getRewardSubType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Reward} returns this
 */
proto.Reward.prototype.setRewardSubType = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double reward_amount = 3;
 * @return {number}
 */
proto.Reward.prototype.getRewardAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Reward} returns this
 */
proto.Reward.prototype.setRewardAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Contract.repeatedFields_ = [3, 16];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Contract.prototype.toObject = function (opt_includeInstance) {
    return proto.Contract.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Contract} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Contract.toObject = function (includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, ""),
      egg: jspb.Message.getFieldWithDefault(msg, 2, 0),
      goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
          proto.Contract.Goal.toObject, includeInstance),
      coopAllowed: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
      maxCoopSize: jspb.Message.getFieldWithDefault(msg, 5, 0),
      expirationTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      lengthSeconds: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
      name: jspb.Message.getFieldWithDefault(msg, 9, ""),
      description: jspb.Message.getFieldWithDefault(msg, 10, ""),
      debug: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
      maxBoosts: jspb.Message.getFieldWithDefault(msg, 12, 0),
      maxSoulEggs: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
      minClientVersion: jspb.Message.getFieldWithDefault(msg, 14, 0),
      minutesPerToken: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
      goalSetsList: jspb.Message.toObjectList(msg.getGoalSetsList(),
          proto.Contract.GoalSet.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Contract}
 */
proto.Contract.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Contract;
  return proto.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Contract}
 */
proto.Contract.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {!proto.Egg} */ (reader.readEnum());
        msg.setEgg(value);
        break;
      case 3:
        var value = new proto.Contract.Goal;
        reader.readMessage(value, proto.Contract.Goal.deserializeBinaryFromReader);
        msg.addGoals(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCoopAllowed(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setMaxCoopSize(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setExpirationTime(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLengthSeconds(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setDebug(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setMaxBoosts(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setMaxSoulEggs(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setMinClientVersion(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setMinutesPerToken(value);
        break;
      case 16:
        var value = new proto.Contract.GoalSet;
        reader.readMessage(value, proto.Contract.GoalSet.deserializeBinaryFromReader);
        msg.addGoalSets(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Contract.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Contract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Contract.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getEgg();
  if (f !== 0.0) {
    writer.writeEnum(
        2,
        f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        3,
        f,
        proto.Contract.Goal.serializeBinaryToWriter
    );
  }
  f = message.getCoopAllowed();
  if (f) {
    writer.writeBool(
        4,
        f
    );
  }
  f = message.getMaxCoopSize();
  if (f !== 0) {
    writer.writeUint32(
        5,
        f
    );
  }
  f = message.getExpirationTime();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getLengthSeconds();
  if (f !== 0.0) {
    writer.writeDouble(
        7,
        f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
        9,
        f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
        10,
        f
    );
  }
  f = message.getDebug();
  if (f) {
    writer.writeBool(
        11,
        f
    );
  }
  f = message.getMaxBoosts();
  if (f !== 0) {
    writer.writeUint32(
        12,
        f
    );
  }
  f = message.getMaxSoulEggs();
  if (f !== 0.0) {
    writer.writeDouble(
        13,
        f
    );
  }
  f = message.getMinClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        14,
        f
    );
  }
  f = message.getMinutesPerToken();
  if (f !== 0.0) {
    writer.writeDouble(
        15,
        f
    );
  }
  f = message.getGoalSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        16,
        f,
        proto.Contract.GoalSet.serializeBinaryToWriter
    );
  }
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Contract.Goal.prototype.toObject = function (opt_includeInstance) {
    return proto.Contract.Goal.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Contract.Goal} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Contract.Goal.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getFieldWithDefault(msg, 1, 0),
      targetAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      rewardType: jspb.Message.getFieldWithDefault(msg, 3, 0),
      rewardSubType: jspb.Message.getFieldWithDefault(msg, 4, ""),
      rewardAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      targetSoulEggs: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Contract.Goal}
 */
proto.Contract.Goal.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Contract.Goal;
  return proto.Contract.Goal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Contract.Goal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Contract.Goal}
 */
proto.Contract.Goal.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.GoalType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTargetAmount(value);
        break;
      case 3:
        var value = /** @type {!proto.RewardType} */ (reader.readEnum());
        msg.setRewardType(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRewardSubType(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setRewardAmount(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTargetSoulEggs(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Contract.Goal.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Contract.Goal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Contract.Goal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Contract.Goal.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getTargetAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getRewardType();
  if (f !== 0.0) {
    writer.writeEnum(
        3,
        f
    );
  }
  f = message.getRewardSubType();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
  f = message.getRewardAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getTargetSoulEggs();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
};


/**
 * optional GoalType type = 1;
 * @return {!proto.GoalType}
 */
proto.Contract.Goal.prototype.getType = function () {
  return /** @type {!proto.GoalType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.GoalType} value
 * @return {!proto.Contract.Goal} returns this
 */
proto.Contract.Goal.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double target_amount = 2;
 * @return {number}
 */
proto.Contract.Goal.prototype.getTargetAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract.Goal} returns this
 */
proto.Contract.Goal.prototype.setTargetAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.RewardType}
 */
proto.Contract.Goal.prototype.getRewardType = function () {
  return /** @type {!proto.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.RewardType} value
 * @return {!proto.Contract.Goal} returns this
 */
proto.Contract.Goal.prototype.setRewardType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.Contract.Goal.prototype.getRewardSubType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Contract.Goal} returns this
 */
proto.Contract.Goal.prototype.setRewardSubType = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.Contract.Goal.prototype.getRewardAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract.Goal} returns this
 */
proto.Contract.Goal.prototype.setRewardAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double target_soul_eggs = 6;
 * @return {number}
 */
proto.Contract.Goal.prototype.getTargetSoulEggs = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract.Goal} returns this
 */
proto.Contract.Goal.prototype.setTargetSoulEggs = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Contract.GoalSet.repeatedFields_ = [1];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Contract.GoalSet.prototype.toObject = function (opt_includeInstance) {
    return proto.Contract.GoalSet.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Contract.GoalSet} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Contract.GoalSet.toObject = function (includeInstance, msg) {
    var f, obj = {
      goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
          proto.Contract.Goal.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Contract.GoalSet}
 */
proto.Contract.GoalSet.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Contract.GoalSet;
  return proto.Contract.GoalSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Contract.GoalSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Contract.GoalSet}
 */
proto.Contract.GoalSet.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Contract.Goal;
        reader.readMessage(value, proto.Contract.Goal.deserializeBinaryFromReader);
        msg.addGoals(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Contract.GoalSet.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Contract.GoalSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Contract.GoalSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Contract.GoalSet.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.Contract.Goal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Goal goals = 1;
 * @return {!Array<!proto.Contract.Goal>}
 */
proto.Contract.GoalSet.prototype.getGoalsList = function () {
  return /** @type{!Array<!proto.Contract.Goal>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Contract.Goal, 1));
};


/**
 * @param {!Array<!proto.Contract.Goal>} value
 * @return {!proto.Contract.GoalSet} returns this
 */
proto.Contract.GoalSet.prototype.setGoalsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Contract.Goal}
 */
proto.Contract.GoalSet.prototype.addGoals = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Contract.GoalSet} returns this
 */
proto.Contract.GoalSet.prototype.clearGoalsList = function () {
  return this.setGoalsList([]);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Contract.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Egg egg = 2;
 * @return {!proto.Egg}
 */
proto.Contract.prototype.getEgg = function () {
  return /** @type {!proto.Egg} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.Egg} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setEgg = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated Goal goals = 3;
 * @return {!Array<!proto.Contract.Goal>}
 */
proto.Contract.prototype.getGoalsList = function () {
  return /** @type{!Array<!proto.Contract.Goal>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Contract.Goal, 3));
};


/**
 * @param {!Array<!proto.Contract.Goal>} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setGoalsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Contract.Goal}
 */
proto.Contract.prototype.addGoals = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.clearGoalsList = function () {
  return this.setGoalsList([]);
};


/**
 * optional bool coop_allowed = 4;
 * @return {boolean}
 */
proto.Contract.prototype.getCoopAllowed = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setCoopAllowed = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 max_coop_size = 5;
 * @return {number}
 */
proto.Contract.prototype.getMaxCoopSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setMaxCoopSize = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double expiration_time = 6;
 * @return {number}
 */
proto.Contract.prototype.getExpirationTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setExpirationTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double length_seconds = 7;
 * @return {number}
 */
proto.Contract.prototype.getLengthSeconds = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setLengthSeconds = function (value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.Contract.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string description = 10;
 * @return {string}
 */
proto.Contract.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.Contract.prototype.getDebug = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setDebug = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional uint32 max_boosts = 12;
 * @return {number}
 */
proto.Contract.prototype.getMaxBoosts = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setMaxBoosts = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional double max_soul_eggs = 13;
 * @return {number}
 */
proto.Contract.prototype.getMaxSoulEggs = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setMaxSoulEggs = function (value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional uint32 min_client_version = 14;
 * @return {number}
 */
proto.Contract.prototype.getMinClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setMinClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional double minutes_per_token = 15;
 * @return {number}
 */
proto.Contract.prototype.getMinutesPerToken = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setMinutesPerToken = function (value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * repeated GoalSet goal_sets = 16;
 * @return {!Array<!proto.Contract.GoalSet>}
 */
proto.Contract.prototype.getGoalSetsList = function () {
  return /** @type{!Array<!proto.Contract.GoalSet>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Contract.GoalSet, 16));
};


/**
 * @param {!Array<!proto.Contract.GoalSet>} value
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.setGoalSetsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.Contract.GoalSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Contract.GoalSet}
 */
proto.Contract.prototype.addGoalSets = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.Contract.GoalSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Contract} returns this
 */
proto.Contract.prototype.clearGoalSetsList = function () {
  return this.setGoalSetsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.BasicRequestInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.BasicRequestInfo.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.BasicRequestInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.BasicRequestInfo.toObject = function (includeInstance, msg) {
    var f, obj = {
      eiUserId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      clientVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
      version: jspb.Message.getFieldWithDefault(msg, 3, ""),
      build: jspb.Message.getFieldWithDefault(msg, 4, ""),
      platform: jspb.Message.getFieldWithDefault(msg, 5, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BasicRequestInfo}
 */
proto.BasicRequestInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BasicRequestInfo;
  return proto.BasicRequestInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BasicRequestInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BasicRequestInfo}
 */
proto.BasicRequestInfo.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setEiUserId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setClientVersion(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setVersion(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setBuild(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setPlatform(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BasicRequestInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.BasicRequestInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BasicRequestInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BasicRequestInfo.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEiUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
        3,
        f
    );
  }
  f = message.getBuild();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
        5,
        f
    );
  }
};


/**
 * optional string ei_user_id = 1;
 * @return {string}
 */
proto.BasicRequestInfo.prototype.getEiUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BasicRequestInfo} returns this
 */
proto.BasicRequestInfo.prototype.setEiUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 client_version = 2;
 * @return {number}
 */
proto.BasicRequestInfo.prototype.getClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BasicRequestInfo} returns this
 */
proto.BasicRequestInfo.prototype.setClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.BasicRequestInfo.prototype.getVersion = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BasicRequestInfo} returns this
 */
proto.BasicRequestInfo.prototype.setVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string build = 4;
 * @return {string}
 */
proto.BasicRequestInfo.prototype.getBuild = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BasicRequestInfo} returns this
 */
proto.BasicRequestInfo.prototype.setBuild = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string platform = 5;
 * @return {string}
 */
proto.BasicRequestInfo.prototype.getPlatform = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BasicRequestInfo} returns this
 */
proto.BasicRequestInfo.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ContractsResponse.repeatedFields_ = [1];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ContractsResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.ContractsResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ContractsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ContractsResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      contractsList: jspb.Message.toObjectList(msg.getContractsList(),
          proto.Contract.toObject, includeInstance),
      serverTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      maxEop: jspb.Message.getFieldWithDefault(msg, 3, 0),
      warningMessage: jspb.Message.getFieldWithDefault(msg, 4, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ContractsResponse}
 */
proto.ContractsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ContractsResponse;
  return proto.ContractsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ContractsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ContractsResponse}
 */
proto.ContractsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Contract;
        reader.readMessage(value, proto.Contract.deserializeBinaryFromReader);
        msg.addContracts(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setServerTime(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setMaxEop(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setWarningMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ContractsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ContractsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ContractsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ContractsResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.Contract.serializeBinaryToWriter
    );
  }
  f = message.getServerTime();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getMaxEop();
  if (f !== 0) {
    writer.writeUint32(
        3,
        f
    );
  }
  f = message.getWarningMessage();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
};


/**
 * repeated Contract contracts = 1;
 * @return {!Array<!proto.Contract>}
 */
proto.ContractsResponse.prototype.getContractsList = function () {
  return /** @type{!Array<!proto.Contract>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Contract, 1));
};


/**
 * @param {!Array<!proto.Contract>} value
 * @return {!proto.ContractsResponse} returns this
 */
proto.ContractsResponse.prototype.setContractsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Contract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Contract}
 */
proto.ContractsResponse.prototype.addContracts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Contract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ContractsResponse} returns this
 */
proto.ContractsResponse.prototype.clearContractsList = function () {
  return this.setContractsList([]);
};


/**
 * optional double server_time = 2;
 * @return {number}
 */
proto.ContractsResponse.prototype.getServerTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ContractsResponse} returns this
 */
proto.ContractsResponse.prototype.setServerTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint32 max_eop = 3;
 * @return {number}
 */
proto.ContractsResponse.prototype.getMaxEop = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ContractsResponse} returns this
 */
proto.ContractsResponse.prototype.setMaxEop = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string warning_message = 4;
 * @return {string}
 */
proto.ContractsResponse.prototype.getWarningMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ContractsResponse} returns this
 */
proto.ContractsResponse.prototype.setWarningMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopStatusRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopStatusRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopStatusRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopStatusRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      coopId: jspb.Message.getFieldWithDefault(msg, 2, ""),
      userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
      clientVersion: jspb.Message.getFieldWithDefault(msg, 4, 0),
      requestInfo: (f = msg.getRequestInfo()) && proto.BasicRequestInfo.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopStatusRequest}
 */
proto.CoopStatusRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopStatusRequest;
  return proto.CoopStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopStatusRequest}
 */
proto.CoopStatusRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setContractId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCoopId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setClientVersion(value);
        break;
      case 5:
        var value = new proto.BasicRequestInfo;
        reader.readMessage(value, proto.BasicRequestInfo.deserializeBinaryFromReader);
        msg.setRequestInfo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopStatusRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopStatusRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getCoopId();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        3,
        f
    );
  }
  f = message.getClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        4,
        f
    );
  }
  f = message.getRequestInfo();
  if (f != null) {
    writer.writeMessage(
        5,
        f,
        proto.BasicRequestInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.CoopStatusRequest.prototype.getContractId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatusRequest} returns this
 */
proto.CoopStatusRequest.prototype.setContractId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string coop_id = 2;
 * @return {string}
 */
proto.CoopStatusRequest.prototype.getCoopId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatusRequest} returns this
 */
proto.CoopStatusRequest.prototype.setCoopId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.CoopStatusRequest.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatusRequest} returns this
 */
proto.CoopStatusRequest.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 client_version = 4;
 * @return {number}
 */
proto.CoopStatusRequest.prototype.getClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatusRequest} returns this
 */
proto.CoopStatusRequest.prototype.setClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional BasicRequestInfo request_info = 5;
 * @return {?proto.BasicRequestInfo}
 */
proto.CoopStatusRequest.prototype.getRequestInfo = function () {
  return /** @type{?proto.BasicRequestInfo} */ (
      jspb.Message.getWrapperField(this, proto.BasicRequestInfo, 5));
};


/**
 * @param {?proto.BasicRequestInfo|undefined} value
 * @return {!proto.CoopStatusRequest} returns this
 */
proto.CoopStatusRequest.prototype.setRequestInfo = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CoopStatusRequest} returns this
 */
proto.CoopStatusRequest.prototype.clearRequestInfo = function () {
  return this.setRequestInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CoopStatusRequest.prototype.hasRequestInfo = function () {
  return jspb.Message.getField(this, 5) != null;
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopStatusResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopStatusResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopStatusResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopStatusResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      coopstatus: (f = msg.getCoopstatus()) && proto.CoopStatus.toObject(includeInstance, f),
      checksum: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopStatusResponse}
 */
proto.CoopStatusResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopStatusResponse;
  return proto.CoopStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopStatusResponse}
 */
proto.CoopStatusResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.CoopStatus;
        reader.readMessage(value, proto.CoopStatus.deserializeBinaryFromReader);
        msg.setCoopstatus(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setChecksum(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopStatusResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopStatusResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getCoopstatus();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.CoopStatus.serializeBinaryToWriter
    );
  }
  f = message.getChecksum();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
};


/**
 * optional CoopStatus coopStatus = 1;
 * @return {?proto.CoopStatus}
 */
proto.CoopStatusResponse.prototype.getCoopstatus = function () {
  return /** @type{?proto.CoopStatus} */ (
      jspb.Message.getWrapperField(this, proto.CoopStatus, 1));
};


/**
 * @param {?proto.CoopStatus|undefined} value
 * @return {!proto.CoopStatusResponse} returns this
 */
proto.CoopStatusResponse.prototype.setCoopstatus = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CoopStatusResponse} returns this
 */
proto.CoopStatusResponse.prototype.clearCoopstatus = function () {
  return this.setCoopstatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CoopStatusResponse.prototype.hasCoopstatus = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string checksum = 2;
 * @return {string}
 */
proto.CoopStatusResponse.prototype.getChecksum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatusResponse} returns this
 */
proto.CoopStatusResponse.prototype.setChecksum = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoopStatus.repeatedFields_ = [4, 11];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopStatus.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopStatus.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopStatus.toObject = function (includeInstance, msg) {
    var f, obj = {
      contractId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      totalAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      coopId: jspb.Message.getFieldWithDefault(msg, 3, ""),
      contributorsList: jspb.Message.toObjectList(msg.getContributorsList(),
          proto.CoopStatus.ContributionInfo.toObject, includeInstance),
      secondsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      allMembersReporting: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
      gracePeriodSecondsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
      autoGenerated: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
      creatorId: jspb.Message.getFieldWithDefault(msg, 9, ""),
      pb_public: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
      giftsList: jspb.Message.toObjectList(msg.getGiftsList(),
          proto.CoopStatus.CoopGift.toObject, includeInstance),
      localTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopStatus}
 */
proto.CoopStatus.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopStatus;
  return proto.CoopStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopStatus}
 */
proto.CoopStatus.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setContractId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTotalAmount(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setCoopId(value);
        break;
      case 4:
        var value = new proto.CoopStatus.ContributionInfo;
        reader.readMessage(value, proto.CoopStatus.ContributionInfo.deserializeBinaryFromReader);
        msg.addContributors(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSecondsRemaining(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAllMembersReporting(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setGracePeriodSecondsRemaining(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAutoGenerated(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatorId(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPublic(value);
        break;
      case 11:
        var value = new proto.CoopStatus.CoopGift;
        reader.readMessage(value, proto.CoopStatus.CoopGift.deserializeBinaryFromReader);
        msg.addGifts(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLocalTimestamp(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopStatus.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopStatus.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getContractId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getTotalAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getCoopId();
  if (f.length > 0) {
    writer.writeString(
        3,
        f
    );
  }
  f = message.getContributorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        4,
        f,
        proto.CoopStatus.ContributionInfo.serializeBinaryToWriter
    );
  }
  f = message.getSecondsRemaining();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getAllMembersReporting();
  if (f) {
    writer.writeBool(
        6,
        f
    );
  }
  f = message.getGracePeriodSecondsRemaining();
  if (f !== 0.0) {
    writer.writeDouble(
        7,
        f
    );
  }
  f = message.getAutoGenerated();
  if (f) {
    writer.writeBool(
        8,
        f
    );
  }
  f = message.getCreatorId();
  if (f.length > 0) {
    writer.writeString(
        9,
        f
    );
  }
  f = message.getPublic();
  if (f) {
    writer.writeBool(
        10,
        f
    );
  }
  f = message.getGiftsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        11,
        f,
        proto.CoopStatus.CoopGift.serializeBinaryToWriter
    );
  }
  f = message.getLocalTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
        12,
        f
    );
  }
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopStatus.CoopGift.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopStatus.CoopGift.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopStatus.CoopGift} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopStatus.CoopGift.toObject = function (includeInstance, msg) {
    var f, obj = {
      userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
      userName: jspb.Message.getFieldWithDefault(msg, 3, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopStatus.CoopGift}
 */
proto.CoopStatus.CoopGift.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopStatus.CoopGift;
  return proto.CoopStatus.CoopGift.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopStatus.CoopGift} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopStatus.CoopGift}
 */
proto.CoopStatus.CoopGift.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setAmount(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopStatus.CoopGift.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopStatus.CoopGift.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopStatus.CoopGift} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopStatus.CoopGift.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
        3,
        f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.CoopStatus.CoopGift.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus.CoopGift} returns this
 */
proto.CoopStatus.CoopGift.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 amount = 2;
 * @return {number}
 */
proto.CoopStatus.CoopGift.prototype.getAmount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.CoopGift} returns this
 */
proto.CoopStatus.CoopGift.prototype.setAmount = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.CoopStatus.CoopGift.prototype.getUserName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus.CoopGift} returns this
 */
proto.CoopStatus.CoopGift.prototype.setUserName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoopStatus.ContributionInfo.repeatedFields_ = [13];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopStatus.ContributionInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopStatus.ContributionInfo.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopStatus.ContributionInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopStatus.ContributionInfo.toObject = function (includeInstance, msg) {
    var f, obj = {
      userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
      contributionAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      active: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
      platform: jspb.Message.getFieldWithDefault(msg, 5, 0),
      contributionRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      timeCheatDetected: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
      rankChange: jspb.Message.getFieldWithDefault(msg, 8, 0),
      pushId: jspb.Message.getFieldWithDefault(msg, 9, ""),
      banVotes: jspb.Message.getFieldWithDefault(msg, 10, 0),
      soulPower: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
      boostTokens: jspb.Message.getFieldWithDefault(msg, 12, 0),
      buffHistoryList: jspb.Message.toObjectList(msg.getBuffHistoryList(),
          proto.CoopBuffState.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopStatus.ContributionInfo}
 */
proto.CoopStatus.ContributionInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopStatus.ContributionInfo;
  return proto.CoopStatus.ContributionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopStatus.ContributionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopStatus.ContributionInfo}
 */
proto.CoopStatus.ContributionInfo.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserName(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setContributionAmount(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setActive(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setPlatform(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setContributionRate(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setTimeCheatDetected(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRankChange(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setPushId(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setBanVotes(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSoulPower(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setBoostTokens(value);
        break;
      case 13:
        var value = new proto.CoopBuffState;
        reader.readMessage(value, proto.CoopBuffState.deserializeBinaryFromReader);
        msg.addBuffHistory(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopStatus.ContributionInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopStatus.ContributionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopStatus.ContributionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopStatus.ContributionInfo.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getContributionAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
        4,
        f
    );
  }
  f = message.getPlatform();
  if (f !== 0) {
    writer.writeUint32(
        5,
        f
    );
  }
  f = message.getContributionRate();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getTimeCheatDetected();
  if (f) {
    writer.writeBool(
        7,
        f
    );
  }
  f = message.getRankChange();
  if (f !== 0) {
    writer.writeInt32(
        8,
        f
    );
  }
  f = message.getPushId();
  if (f.length > 0) {
    writer.writeString(
        9,
        f
    );
  }
  f = message.getBanVotes();
  if (f !== 0) {
    writer.writeUint32(
        10,
        f
    );
  }
  f = message.getSoulPower();
  if (f !== 0.0) {
    writer.writeDouble(
        11,
        f
    );
  }
  f = message.getBoostTokens();
  if (f !== 0) {
    writer.writeUint32(
        12,
        f
    );
  }
  f = message.getBuffHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        13,
        f,
        proto.CoopBuffState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.CoopStatus.ContributionInfo.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.CoopStatus.ContributionInfo.prototype.getUserName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setUserName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double contribution_amount = 3;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getContributionAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setContributionAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.CoopStatus.ContributionInfo.prototype.getActive = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 platform = 5;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getPlatform = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double contribution_rate = 6;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getContributionRate = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setContributionRate = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool time_cheat_detected = 7;
 * @return {boolean}
 */
proto.CoopStatus.ContributionInfo.prototype.getTimeCheatDetected = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setTimeCheatDetected = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 rank_change = 8;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getRankChange = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setRankChange = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string push_id = 9;
 * @return {string}
 */
proto.CoopStatus.ContributionInfo.prototype.getPushId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setPushId = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint32 ban_votes = 10;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getBanVotes = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setBanVotes = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional double soul_power = 11;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getSoulPower = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setSoulPower = function (value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional uint32 boost_tokens = 12;
 * @return {number}
 */
proto.CoopStatus.ContributionInfo.prototype.getBoostTokens = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setBoostTokens = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated CoopBuffState buff_history = 13;
 * @return {!Array<!proto.CoopBuffState>}
 */
proto.CoopStatus.ContributionInfo.prototype.getBuffHistoryList = function () {
  return /** @type{!Array<!proto.CoopBuffState>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.CoopBuffState, 13));
};


/**
 * @param {!Array<!proto.CoopBuffState>} value
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.setBuffHistoryList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.CoopBuffState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoopBuffState}
 */
proto.CoopStatus.ContributionInfo.prototype.addBuffHistory = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.CoopBuffState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CoopStatus.ContributionInfo} returns this
 */
proto.CoopStatus.ContributionInfo.prototype.clearBuffHistoryList = function () {
  return this.setBuffHistoryList([]);
};


/**
 * optional string contract_id = 1;
 * @return {string}
 */
proto.CoopStatus.prototype.getContractId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setContractId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double total_amount = 2;
 * @return {number}
 */
proto.CoopStatus.prototype.getTotalAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setTotalAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string coop_id = 3;
 * @return {string}
 */
proto.CoopStatus.prototype.getCoopId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setCoopId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ContributionInfo contributors = 4;
 * @return {!Array<!proto.CoopStatus.ContributionInfo>}
 */
proto.CoopStatus.prototype.getContributorsList = function () {
  return /** @type{!Array<!proto.CoopStatus.ContributionInfo>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.CoopStatus.ContributionInfo, 4));
};


/**
 * @param {!Array<!proto.CoopStatus.ContributionInfo>} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setContributorsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.CoopStatus.ContributionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoopStatus.ContributionInfo}
 */
proto.CoopStatus.prototype.addContributors = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.CoopStatus.ContributionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.clearContributorsList = function () {
  return this.setContributorsList([]);
};


/**
 * optional double seconds_remaining = 5;
 * @return {number}
 */
proto.CoopStatus.prototype.getSecondsRemaining = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setSecondsRemaining = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool all_members_reporting = 6;
 * @return {boolean}
 */
proto.CoopStatus.prototype.getAllMembersReporting = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setAllMembersReporting = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional double grace_period_seconds_remaining = 7;
 * @return {number}
 */
proto.CoopStatus.prototype.getGracePeriodSecondsRemaining = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setGracePeriodSecondsRemaining = function (value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool auto_generated = 8;
 * @return {boolean}
 */
proto.CoopStatus.prototype.getAutoGenerated = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setAutoGenerated = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string creator_id = 9;
 * @return {string}
 */
proto.CoopStatus.prototype.getCreatorId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setCreatorId = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool public = 10;
 * @return {boolean}
 */
proto.CoopStatus.prototype.getPublic = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setPublic = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * repeated CoopGift gifts = 11;
 * @return {!Array<!proto.CoopStatus.CoopGift>}
 */
proto.CoopStatus.prototype.getGiftsList = function () {
  return /** @type{!Array<!proto.CoopStatus.CoopGift>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.CoopStatus.CoopGift, 11));
};


/**
 * @param {!Array<!proto.CoopStatus.CoopGift>} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setGiftsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.CoopStatus.CoopGift=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoopStatus.CoopGift}
 */
proto.CoopStatus.prototype.addGifts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.CoopStatus.CoopGift, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.clearGiftsList = function () {
  return this.setGiftsList([]);
};


/**
 * optional double local_timestamp = 12;
 * @return {number}
 */
proto.CoopStatus.prototype.getLocalTimestamp = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopStatus} returns this
 */
proto.CoopStatus.prototype.setLocalTimestamp = function (value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.LocalContract.prototype.toObject = function (opt_includeInstance) {
    return proto.LocalContract.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.LocalContract} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.LocalContract.toObject = function (includeInstance, msg) {
    var f, obj = {
      contract: (f = msg.getContract()) && proto.Contract.toObject(includeInstance, f),
      coopId: jspb.Message.getFieldWithDefault(msg, 2, ""),
      timeAccepted: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      cancelled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
      coopSharedEndTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      lastAmountWhenRewardGiven: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      accepted: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
      pb_new: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
      coopGracePeriodEndTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
      coopContributionFinalized: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
      coopLastUploadedContribution: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
      boostsUsed: jspb.Message.getFieldWithDefault(msg, 12, 0),
      coopUserId: jspb.Message.getFieldWithDefault(msg, 13, ""),
      numGoalsAchieved: jspb.Message.getFieldWithDefault(msg, 14, 0),
      league: jspb.Message.getFieldWithDefault(msg, 15, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LocalContract}
 */
proto.LocalContract.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LocalContract;
  return proto.LocalContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LocalContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LocalContract}
 */
proto.LocalContract.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Contract;
        reader.readMessage(value, proto.Contract.deserializeBinaryFromReader);
        msg.setContract(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCoopId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTimeAccepted(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCancelled(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCoopSharedEndTime(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLastAmountWhenRewardGiven(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAccepted(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNew(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCoopGracePeriodEndTime(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCoopContributionFinalized(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCoopLastUploadedContribution(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setBoostsUsed(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setCoopUserId(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setNumGoalsAchieved(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLeague(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LocalContract.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.LocalContract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LocalContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LocalContract.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Contract.serializeBinaryToWriter
    );
  }
  f = message.getCoopId();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
  f = message.getTimeAccepted();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getCancelled();
  if (f) {
    writer.writeBool(
        4,
        f
    );
  }
  f = message.getCoopSharedEndTime();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getLastAmountWhenRewardGiven();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getAccepted();
  if (f) {
    writer.writeBool(
        7,
        f
    );
  }
  f = message.getNew();
  if (f) {
    writer.writeBool(
        8,
        f
    );
  }
  f = message.getCoopGracePeriodEndTime();
  if (f !== 0.0) {
    writer.writeDouble(
        9,
        f
    );
  }
  f = message.getCoopContributionFinalized();
  if (f) {
    writer.writeBool(
        10,
        f
    );
  }
  f = message.getCoopLastUploadedContribution();
  if (f !== 0.0) {
    writer.writeDouble(
        11,
        f
    );
  }
  f = message.getBoostsUsed();
  if (f !== 0) {
    writer.writeUint32(
        12,
        f
    );
  }
  f = message.getCoopUserId();
  if (f.length > 0) {
    writer.writeString(
        13,
        f
    );
  }
  f = message.getNumGoalsAchieved();
  if (f !== 0) {
    writer.writeUint32(
        14,
        f
    );
  }
  f = message.getLeague();
  if (f !== 0) {
    writer.writeUint32(
        15,
        f
    );
  }
};


/**
 * optional Contract contract = 1;
 * @return {?proto.Contract}
 */
proto.LocalContract.prototype.getContract = function () {
  return /** @type{?proto.Contract} */ (
      jspb.Message.getWrapperField(this, proto.Contract, 1));
};


/**
 * @param {?proto.Contract|undefined} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setContract = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.clearContract = function () {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.LocalContract.prototype.hasContract = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coop_id = 2;
 * @return {string}
 */
proto.LocalContract.prototype.getCoopId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCoopId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double time_accepted = 3;
 * @return {number}
 */
proto.LocalContract.prototype.getTimeAccepted = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setTimeAccepted = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool cancelled = 4;
 * @return {boolean}
 */
proto.LocalContract.prototype.getCancelled = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCancelled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional double coop_shared_end_time = 5;
 * @return {number}
 */
proto.LocalContract.prototype.getCoopSharedEndTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCoopSharedEndTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double last_amount_when_reward_given = 6;
 * @return {number}
 */
proto.LocalContract.prototype.getLastAmountWhenRewardGiven = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setLastAmountWhenRewardGiven = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool accepted = 7;
 * @return {boolean}
 */
proto.LocalContract.prototype.getAccepted = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setAccepted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool new = 8;
 * @return {boolean}
 */
proto.LocalContract.prototype.getNew = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setNew = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional double coop_grace_period_end_time = 9;
 * @return {number}
 */
proto.LocalContract.prototype.getCoopGracePeriodEndTime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCoopGracePeriodEndTime = function (value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional bool coop_contribution_finalized = 10;
 * @return {boolean}
 */
proto.LocalContract.prototype.getCoopContributionFinalized = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCoopContributionFinalized = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional double coop_last_uploaded_contribution = 11;
 * @return {number}
 */
proto.LocalContract.prototype.getCoopLastUploadedContribution = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCoopLastUploadedContribution = function (value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional uint32 boosts_used = 12;
 * @return {number}
 */
proto.LocalContract.prototype.getBoostsUsed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setBoostsUsed = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string coop_user_id = 13;
 * @return {string}
 */
proto.LocalContract.prototype.getCoopUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setCoopUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional uint32 num_goals_achieved = 14;
 * @return {number}
 */
proto.LocalContract.prototype.getNumGoalsAchieved = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setNumGoalsAchieved = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint32 league = 15;
 * @return {number}
 */
proto.LocalContract.prototype.getLeague = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.LocalContract} returns this
 */
proto.LocalContract.prototype.setLeague = function (value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MyContracts.repeatedFields_ = [1, 2, 3, 4];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.MyContracts.prototype.toObject = function (opt_includeInstance) {
    return proto.MyContracts.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.MyContracts} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.MyContracts.toObject = function (includeInstance, msg) {
    var f, obj = {
      contractsList: jspb.Message.toObjectList(msg.getContractsList(),
          proto.LocalContract.toObject, includeInstance),
      archivedList: jspb.Message.toObjectList(msg.getArchivedList(),
          proto.LocalContract.toObject, includeInstance),
      contractIdsSeenList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
      coopStatusesList: jspb.Message.toObjectList(msg.getCoopStatusesList(),
          proto.CoopStatus.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MyContracts}
 */
proto.MyContracts.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MyContracts;
  return proto.MyContracts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MyContracts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MyContracts}
 */
proto.MyContracts.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.LocalContract;
        reader.readMessage(value, proto.LocalContract.deserializeBinaryFromReader);
        msg.addContracts(value);
        break;
      case 2:
        var value = new proto.LocalContract;
        reader.readMessage(value, proto.LocalContract.deserializeBinaryFromReader);
        msg.addArchived(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.addContractIdsSeen(value);
        break;
      case 4:
        var value = new proto.CoopStatus;
        reader.readMessage(value, proto.CoopStatus.deserializeBinaryFromReader);
        msg.addCoopStatuses(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MyContracts.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.MyContracts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MyContracts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MyContracts.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.LocalContract.serializeBinaryToWriter
    );
  }
  f = message.getArchivedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        2,
        f,
        proto.LocalContract.serializeBinaryToWriter
    );
  }
  f = message.getContractIdsSeenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
        3,
        f
    );
  }
  f = message.getCoopStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        4,
        f,
        proto.CoopStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LocalContract contracts = 1;
 * @return {!Array<!proto.LocalContract>}
 */
proto.MyContracts.prototype.getContractsList = function () {
  return /** @type{!Array<!proto.LocalContract>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.LocalContract, 1));
};


/**
 * @param {!Array<!proto.LocalContract>} value
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.setContractsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.LocalContract}
 */
proto.MyContracts.prototype.addContracts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.clearContractsList = function () {
  return this.setContractsList([]);
};


/**
 * repeated LocalContract archived = 2;
 * @return {!Array<!proto.LocalContract>}
 */
proto.MyContracts.prototype.getArchivedList = function () {
  return /** @type{!Array<!proto.LocalContract>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.LocalContract, 2));
};


/**
 * @param {!Array<!proto.LocalContract>} value
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.setArchivedList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.LocalContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.LocalContract}
 */
proto.MyContracts.prototype.addArchived = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.LocalContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.clearArchivedList = function () {
  return this.setArchivedList([]);
};


/**
 * repeated string contract_ids_seen = 3;
 * @return {!Array<string>}
 */
proto.MyContracts.prototype.getContractIdsSeenList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.setContractIdsSeenList = function (value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.addContractIdsSeen = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.clearContractIdsSeenList = function () {
  return this.setContractIdsSeenList([]);
};


/**
 * repeated CoopStatus coop_statuses = 4;
 * @return {!Array<!proto.CoopStatus>}
 */
proto.MyContracts.prototype.getCoopStatusesList = function () {
  return /** @type{!Array<!proto.CoopStatus>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.CoopStatus, 4));
};


/**
 * @param {!Array<!proto.CoopStatus>} value
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.setCoopStatusesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.CoopStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoopStatus}
 */
proto.MyContracts.prototype.addCoopStatuses = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.CoopStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MyContracts} returns this
 */
proto.MyContracts.prototype.clearCoopStatusesList = function () {
  return this.setCoopStatusesList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopBuffState.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopBuffState.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopBuffState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopBuffState.toObject = function (includeInstance, msg) {
    var f, obj = {
      eggLayingRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      earnings: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      serverTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopBuffState}
 */
proto.CoopBuffState.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopBuffState;
  return proto.CoopBuffState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopBuffState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopBuffState}
 */
proto.CoopBuffState.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setEggLayingRate(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setEarnings(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setServerTimestamp(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopBuffState.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopBuffState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopBuffState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopBuffState.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEggLayingRate();
  if (f !== 0.0) {
    writer.writeDouble(
        1,
        f
    );
  }
  f = message.getEarnings();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getServerTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
};


/**
 * optional double egg_laying_rate = 1;
 * @return {number}
 */
proto.CoopBuffState.prototype.getEggLayingRate = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopBuffState} returns this
 */
proto.CoopBuffState.prototype.setEggLayingRate = function (value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double earnings = 2;
 * @return {number}
 */
proto.CoopBuffState.prototype.getEarnings = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopBuffState} returns this
 */
proto.CoopBuffState.prototype.setEarnings = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double server_timestamp = 3;
 * @return {number}
 */
proto.CoopBuffState.prototype.getServerTimestamp = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.CoopBuffState} returns this
 */
proto.CoopBuffState.prototype.setServerTimestamp = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoopBuffHistory.repeatedFields_ = [1];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CoopBuffHistory.prototype.toObject = function (opt_includeInstance) {
    return proto.CoopBuffHistory.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CoopBuffHistory} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CoopBuffHistory.toObject = function (includeInstance, msg) {
    var f, obj = {
      historyList: jspb.Message.toObjectList(msg.getHistoryList(),
          proto.CoopBuffState.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoopBuffHistory}
 */
proto.CoopBuffHistory.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoopBuffHistory;
  return proto.CoopBuffHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoopBuffHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoopBuffHistory}
 */
proto.CoopBuffHistory.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.CoopBuffState;
        reader.readMessage(value, proto.CoopBuffState.deserializeBinaryFromReader);
        msg.addHistory(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoopBuffHistory.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CoopBuffHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoopBuffHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoopBuffHistory.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.CoopBuffState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CoopBuffState history = 1;
 * @return {!Array<!proto.CoopBuffState>}
 */
proto.CoopBuffHistory.prototype.getHistoryList = function () {
  return /** @type{!Array<!proto.CoopBuffState>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.CoopBuffState, 1));
};


/**
 * @param {!Array<!proto.CoopBuffState>} value
 * @return {!proto.CoopBuffHistory} returns this
 */
proto.CoopBuffHistory.prototype.setHistoryList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoopBuffState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoopBuffState}
 */
proto.CoopBuffHistory.prototype.addHistory = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoopBuffState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CoopBuffHistory} returns this
 */
proto.CoopBuffHistory.prototype.clearHistoryList = function () {
  return this.setHistoryList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ServerGift.prototype.toObject = function (opt_includeInstance) {
    return proto.ServerGift.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ServerGift} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ServerGift.toObject = function (includeInstance, msg) {
    var f, obj = {
      userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      rewardType: jspb.Message.getFieldWithDefault(msg, 3, 0),
      rewardSubType: jspb.Message.getFieldWithDefault(msg, 4, ""),
      rewardAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ServerGift}
 */
proto.ServerGift.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ServerGift;
  return proto.ServerGift.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ServerGift} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ServerGift}
 */
proto.ServerGift.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 3:
        var value = /** @type {!proto.RewardType} */ (reader.readEnum());
        msg.setRewardType(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRewardSubType(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setRewardAmount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ServerGift.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ServerGift.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ServerGift} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ServerGift.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getRewardType();
  if (f !== 0.0) {
    writer.writeEnum(
        3,
        f
    );
  }
  f = message.getRewardSubType();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
  f = message.getRewardAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.ServerGift.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServerGift} returns this
 */
proto.ServerGift.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.RewardType}
 */
proto.ServerGift.prototype.getRewardType = function () {
  return /** @type {!proto.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.RewardType} value
 * @return {!proto.ServerGift} returns this
 */
proto.ServerGift.prototype.setRewardType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.ServerGift.prototype.getRewardSubType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ServerGift} returns this
 */
proto.ServerGift.prototype.setRewardSubType = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.ServerGift.prototype.getRewardAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ServerGift} returns this
 */
proto.ServerGift.prototype.setRewardAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.PeriodicalsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.PeriodicalsRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.PeriodicalsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.PeriodicalsRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
      piggyFull: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      piggyFoundFull: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      secondsFullRealtime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      secondsFullGametime: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      lostIncrements: jspb.Message.getFieldWithDefault(msg, 7, 0),
      soulEggs: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
      clientVersion: jspb.Message.getFieldWithDefault(msg, 10, 0),
      debug: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
      requestInfo: (f = msg.getRequestInfo()) && proto.BasicRequestInfo.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PeriodicalsRequest}
 */
proto.PeriodicalsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PeriodicalsRequest;
  return proto.PeriodicalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PeriodicalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PeriodicalsRequest}
 */
proto.PeriodicalsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPiggyFull(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPiggyFoundFull(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSecondsFullRealtime(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSecondsFullGametime(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLostIncrements(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSoulEggs(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setClientVersion(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setDebug(value);
        break;
      case 12:
        var value = new proto.BasicRequestInfo;
        reader.readMessage(value, proto.BasicRequestInfo.deserializeBinaryFromReader);
        msg.setRequestInfo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PeriodicalsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.PeriodicalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PeriodicalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PeriodicalsRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
        1,
        f
    );
  }
  f = message.getPiggyFull();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
  f = message.getPiggyFoundFull();
  if (f) {
    writer.writeBool(
        3,
        f
    );
  }
  f = message.getSecondsFullRealtime();
  if (f !== 0.0) {
    writer.writeDouble(
        4,
        f
    );
  }
  f = message.getSecondsFullGametime();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getLostIncrements();
  if (f !== 0) {
    writer.writeUint32(
        7,
        f
    );
  }
  f = message.getSoulEggs();
  if (f !== 0.0) {
    writer.writeDouble(
        8,
        f
    );
  }
  f = message.getClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        10,
        f
    );
  }
  f = message.getDebug();
  if (f) {
    writer.writeBool(
        11,
        f
    );
  }
  f = message.getRequestInfo();
  if (f != null) {
    writer.writeMessage(
        12,
        f,
        proto.BasicRequestInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.PeriodicalsRequest.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool piggy_full = 2;
 * @return {boolean}
 */
proto.PeriodicalsRequest.prototype.getPiggyFull = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setPiggyFull = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool piggy_found_full = 3;
 * @return {boolean}
 */
proto.PeriodicalsRequest.prototype.getPiggyFoundFull = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setPiggyFoundFull = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional double seconds_full_realtime = 4;
 * @return {number}
 */
proto.PeriodicalsRequest.prototype.getSecondsFullRealtime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setSecondsFullRealtime = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double seconds_full_gametime = 5;
 * @return {number}
 */
proto.PeriodicalsRequest.prototype.getSecondsFullGametime = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setSecondsFullGametime = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint32 lost_increments = 7;
 * @return {number}
 */
proto.PeriodicalsRequest.prototype.getLostIncrements = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setLostIncrements = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double soul_eggs = 8;
 * @return {number}
 */
proto.PeriodicalsRequest.prototype.getSoulEggs = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setSoulEggs = function (value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional uint32 client_version = 10;
 * @return {number}
 */
proto.PeriodicalsRequest.prototype.getClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.PeriodicalsRequest.prototype.getDebug = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setDebug = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional BasicRequestInfo request_info = 12;
 * @return {?proto.BasicRequestInfo}
 */
proto.PeriodicalsRequest.prototype.getRequestInfo = function () {
  return /** @type{?proto.BasicRequestInfo} */ (
      jspb.Message.getWrapperField(this, proto.BasicRequestInfo, 12));
};


/**
 * @param {?proto.BasicRequestInfo|undefined} value
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.setRequestInfo = function (value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PeriodicalsRequest} returns this
 */
proto.PeriodicalsRequest.prototype.clearRequestInfo = function () {
  return this.setRequestInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PeriodicalsRequest.prototype.hasRequestInfo = function () {
  return jspb.Message.getField(this, 12) != null;
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.PeriodicalsResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.PeriodicalsResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.PeriodicalsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.PeriodicalsResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      periodicals: (f = msg.getPeriodicals()) && proto.Periodicals.toObject(includeInstance, f),
      checksum: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PeriodicalsResponse}
 */
proto.PeriodicalsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PeriodicalsResponse;
  return proto.PeriodicalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PeriodicalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PeriodicalsResponse}
 */
proto.PeriodicalsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Periodicals;
        reader.readMessage(value, proto.Periodicals.deserializeBinaryFromReader);
        msg.setPeriodicals(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setChecksum(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PeriodicalsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.PeriodicalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PeriodicalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PeriodicalsResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPeriodicals();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Periodicals.serializeBinaryToWriter
    );
  }
  f = message.getChecksum();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
};


/**
 * optional Periodicals periodicals = 1;
 * @return {?proto.Periodicals}
 */
proto.PeriodicalsResponse.prototype.getPeriodicals = function () {
  return /** @type{?proto.Periodicals} */ (
      jspb.Message.getWrapperField(this, proto.Periodicals, 1));
};


/**
 * @param {?proto.Periodicals|undefined} value
 * @return {!proto.PeriodicalsResponse} returns this
 */
proto.PeriodicalsResponse.prototype.setPeriodicals = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PeriodicalsResponse} returns this
 */
proto.PeriodicalsResponse.prototype.clearPeriodicals = function () {
  return this.setPeriodicals(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PeriodicalsResponse.prototype.hasPeriodicals = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string checksum = 2;
 * @return {string}
 */
proto.PeriodicalsResponse.prototype.getChecksum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PeriodicalsResponse} returns this
 */
proto.PeriodicalsResponse.prototype.setChecksum = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Periodicals.repeatedFields_ = [4];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Periodicals.prototype.toObject = function (opt_includeInstance) {
    return proto.Periodicals.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Periodicals} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Periodicals.toObject = function (includeInstance, msg) {
    var f, obj = {
      sales: jspb.Message.getFieldWithDefault(msg, 1, 0),
      events: jspb.Message.getFieldWithDefault(msg, 2, 0),
      contracts: (f = msg.getContracts()) && proto.ContractsResponse.toObject(includeInstance, f),
      giftsList: jspb.Message.toObjectList(msg.getGiftsList(),
          proto.ServerGift.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Periodicals}
 */
proto.Periodicals.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Periodicals;
  return proto.Periodicals.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Periodicals} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Periodicals}
 */
proto.Periodicals.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSales(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setEvents(value);
        break;
      case 3:
        var value = new proto.ContractsResponse;
        reader.readMessage(value, proto.ContractsResponse.deserializeBinaryFromReader);
        msg.setContracts(value);
        break;
      case 4:
        var value = new proto.ServerGift;
        reader.readMessage(value, proto.ServerGift.deserializeBinaryFromReader);
        msg.addGifts(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Periodicals.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Periodicals.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Periodicals} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Periodicals.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSales();
  if (f !== 0) {
    writer.writeUint32(
        1,
        f
    );
  }
  f = message.getEvents();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
  f = message.getContracts();
  if (f != null) {
    writer.writeMessage(
        3,
        f,
        proto.ContractsResponse.serializeBinaryToWriter
    );
  }
  f = message.getGiftsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        4,
        f,
        proto.ServerGift.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 sales = 1;
 * @return {number}
 */
proto.Periodicals.prototype.getSales = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Periodicals} returns this
 */
proto.Periodicals.prototype.setSales = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 events = 2;
 * @return {number}
 */
proto.Periodicals.prototype.getEvents = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Periodicals} returns this
 */
proto.Periodicals.prototype.setEvents = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ContractsResponse contracts = 3;
 * @return {?proto.ContractsResponse}
 */
proto.Periodicals.prototype.getContracts = function () {
  return /** @type{?proto.ContractsResponse} */ (
      jspb.Message.getWrapperField(this, proto.ContractsResponse, 3));
};


/**
 * @param {?proto.ContractsResponse|undefined} value
 * @return {!proto.Periodicals} returns this
 */
proto.Periodicals.prototype.setContracts = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Periodicals} returns this
 */
proto.Periodicals.prototype.clearContracts = function () {
  return this.setContracts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Periodicals.prototype.hasContracts = function () {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ServerGift gifts = 4;
 * @return {!Array<!proto.ServerGift>}
 */
proto.Periodicals.prototype.getGiftsList = function () {
  return /** @type{!Array<!proto.ServerGift>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ServerGift, 4));
};


/**
 * @param {!Array<!proto.ServerGift>} value
 * @return {!proto.Periodicals} returns this
 */
proto.Periodicals.prototype.setGiftsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ServerGift=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ServerGift}
 */
proto.Periodicals.prototype.addGifts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ServerGift, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Periodicals} returns this
 */
proto.Periodicals.prototype.clearGiftsList = function () {
  return this.setGiftsList([]);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Mission.repeatedFields_ = [4];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Mission.prototype.toObject = function (opt_includeInstance) {
    return proto.Mission.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Mission} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Mission.toObject = function (includeInstance, msg) {
    var f, obj = {
      ship: jspb.Message.getFieldWithDefault(msg, 1, 0),
      status: jspb.Message.getFieldWithDefault(msg, 2, 0),
      durationType: jspb.Message.getFieldWithDefault(msg, 3, 0),
      fuelsList: jspb.Message.toObjectList(msg.getFuelsList(),
          proto.Mission.Fuel.toObject, includeInstance),
      durationSeconds: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      secondsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      identifier: jspb.Message.getFieldWithDefault(msg, 7, ""),
      startTimeDerived: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
      capacity: jspb.Message.getFieldWithDefault(msg, 9, 0),
      missionLog: jspb.Message.getFieldWithDefault(msg, 10, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Mission}
 */
proto.Mission.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Mission;
  return proto.Mission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Mission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Mission}
 */
proto.Mission.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Mission.Spaceship} */ (reader.readEnum());
        msg.setShip(value);
        break;
      case 2:
        var value = /** @type {!proto.Mission.Status} */ (reader.readEnum());
        msg.setStatus(value);
        break;
      case 3:
        var value = /** @type {!proto.Mission.DurationType} */ (reader.readEnum());
        msg.setDurationType(value);
        break;
      case 4:
        var value = new proto.Mission.Fuel;
        reader.readMessage(value, proto.Mission.Fuel.deserializeBinaryFromReader);
        msg.addFuels(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setDurationSeconds(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSecondsRemaining(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setIdentifier(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setStartTimeDerived(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCapacity(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setMissionLog(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Mission.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Mission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Mission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Mission.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getShip();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
        2,
        f
    );
  }
  f = message.getDurationType();
  if (f !== 0.0) {
    writer.writeEnum(
        3,
        f
    );
  }
  f = message.getFuelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        4,
        f,
        proto.Mission.Fuel.serializeBinaryToWriter
    );
  }
  f = message.getDurationSeconds();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getSecondsRemaining();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
        7,
        f
    );
  }
  f = message.getStartTimeDerived();
  if (f !== 0.0) {
    writer.writeDouble(
        8,
        f
    );
  }
  f = message.getCapacity();
  if (f !== 0) {
    writer.writeUint32(
        9,
        f
    );
  }
  f = message.getMissionLog();
  if (f.length > 0) {
    writer.writeString(
        10,
        f
    );
  }
};


/**
 * @enum {number}
 */
proto.Mission.Spaceship = {
  CHICKEN_ONE: 0,
  CHICKEN_NINE: 1,
  CHICKEN_HEAVY: 2,
  BCR: 3,
  MILLENNIUM_CHICKEN: 4,
  CORELLIHEN_CORVETTE: 5,
  GALEGGTICA: 6,
  CHICKFIANT: 7,
  VOYEGGER: 8,
  HENERPRISE: 9
};

/**
 * @enum {number}
 */
proto.Mission.DurationType = {
  SHORT: 0,
  LONG: 1,
  EPIC: 2,
  TUTORIAL: 3
};

/**
 * @enum {number}
 */
proto.Mission.Status = {
  FUELING: 0,
  PREPARE_TO_LAUNCH: 5,
  EXPLORING: 10,
  RETURNED: 15,
  ANALYZING: 16,
  COMPLETE: 20,
  ARCHIVED: 25
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Mission.Fuel.prototype.toObject = function (opt_includeInstance) {
    return proto.Mission.Fuel.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Mission.Fuel} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Mission.Fuel.toObject = function (includeInstance, msg) {
    var f, obj = {
      egg: jspb.Message.getFieldWithDefault(msg, 1, 0),
      amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Mission.Fuel}
 */
proto.Mission.Fuel.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Mission.Fuel;
  return proto.Mission.Fuel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Mission.Fuel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Mission.Fuel}
 */
proto.Mission.Fuel.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Egg} */ (reader.readEnum());
        msg.setEgg(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setAmount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Mission.Fuel.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Mission.Fuel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Mission.Fuel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Mission.Fuel.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEgg();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
};


/**
 * optional Egg egg = 1;
 * @return {!proto.Egg}
 */
proto.Mission.Fuel.prototype.getEgg = function () {
  return /** @type {!proto.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Egg} value
 * @return {!proto.Mission.Fuel} returns this
 */
proto.Mission.Fuel.prototype.setEgg = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.Mission.Fuel.prototype.getAmount = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Mission.Fuel} returns this
 */
proto.Mission.Fuel.prototype.setAmount = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional Spaceship ship = 1;
 * @return {!proto.Mission.Spaceship}
 */
proto.Mission.prototype.getShip = function () {
  return /** @type {!proto.Mission.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Mission.Spaceship} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setShip = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.Mission.Status}
 */
proto.Mission.prototype.getStatus = function () {
  return /** @type {!proto.Mission.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.Mission.Status} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setStatus = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional DurationType duration_type = 3;
 * @return {!proto.Mission.DurationType}
 */
proto.Mission.prototype.getDurationType = function () {
  return /** @type {!proto.Mission.DurationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Mission.DurationType} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setDurationType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated Fuel fuels = 4;
 * @return {!Array<!proto.Mission.Fuel>}
 */
proto.Mission.prototype.getFuelsList = function () {
  return /** @type{!Array<!proto.Mission.Fuel>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Mission.Fuel, 4));
};


/**
 * @param {!Array<!proto.Mission.Fuel>} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setFuelsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.Mission.Fuel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Mission.Fuel}
 */
proto.Mission.prototype.addFuels = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Mission.Fuel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.clearFuelsList = function () {
  return this.setFuelsList([]);
};


/**
 * optional double duration_seconds = 5;
 * @return {number}
 */
proto.Mission.prototype.getDurationSeconds = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setDurationSeconds = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double seconds_remaining = 6;
 * @return {number}
 */
proto.Mission.prototype.getSecondsRemaining = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setSecondsRemaining = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string identifier = 7;
 * @return {string}
 */
proto.Mission.prototype.getIdentifier = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setIdentifier = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double start_time_derived = 8;
 * @return {number}
 */
proto.Mission.prototype.getStartTimeDerived = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setStartTimeDerived = function (value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional uint32 capacity = 9;
 * @return {number}
 */
proto.Mission.prototype.getCapacity = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setCapacity = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string mission_log = 10;
 * @return {string}
 */
proto.Mission.prototype.getMissionLog = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Mission} returns this
 */
proto.Mission.prototype.setMissionLog = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Artifact.prototype.toObject = function (opt_includeInstance) {
    return proto.Artifact.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Artifact} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Artifact.toObject = function (includeInstance, msg) {
    var f, obj = {
      name: jspb.Message.getFieldWithDefault(msg, 1, 0),
      level: jspb.Message.getFieldWithDefault(msg, 2, 0),
      rarity: jspb.Message.getFieldWithDefault(msg, 3, 0),
      egg: jspb.Message.getFieldWithDefault(msg, 4, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Artifact}
 */
proto.Artifact.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Artifact;
  return proto.Artifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Artifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Artifact}
 */
proto.Artifact.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Artifact.Name} */ (reader.readEnum());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {!proto.Artifact.Level} */ (reader.readEnum());
        msg.setLevel(value);
        break;
      case 3:
        var value = /** @type {!proto.Artifact.Rarity} */ (reader.readEnum());
        msg.setRarity(value);
        break;
      case 4:
        var value = /** @type {!proto.Egg} */ (reader.readEnum());
        msg.setEgg(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Artifact.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Artifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Artifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Artifact.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getName();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
        2,
        f
    );
  }
  f = message.getRarity();
  if (f !== 0.0) {
    writer.writeEnum(
        3,
        f
    );
  }
  f = message.getEgg();
  if (f !== 0.0) {
    writer.writeEnum(
        4,
        f
    );
  }
};


/**
 * @enum {number}
 */
proto.Artifact.Type = {
  ARTIFACT: 0,
  STONE: 1,
  INGREDIENT: 2,
  STONE_INGREDIENT: 3
};

/**
 * @enum {number}
 */
proto.Artifact.Name = {
  LUNAR_TOTEM: 0,
  TACHYON_STONE: 1,
  TACHYON_STONE_FRAGMENT: 2,
  NEODYMIUM_MEDALLION: 3,
  BEAK_OF_MIDAS: 4,
  LIGHT_OF_EGGENDIL: 5,
  DEMETERS_NECKLACE: 6,
  VIAL_OF_MARTIAN_DUST: 7,
  GUSSET: 8,
  CHALICE: 9,
  BOOK_OF_BASAN: 10,
  PHOENIX_FEATHER: 11,
  TUNGSTEN_ANKH: 12,
  EXTRATERRESTRIAL_ALUMINUM: 13,
  ANCIENT_TUNGSTEN: 14,
  SPACE_ROCKS: 15,
  ALIEN_WOOD: 16,
  GOLD_METEORITE: 17,
  TAU_CETI_GEODE: 18,
  CENTAURIAN_STEEL: 19,
  ERIDANI_FEATHER: 20,
  AURELIAN_BROOCH: 21,
  CARVED_RAINSTICK: 22,
  PUZZLE_CUBE: 23,
  QUANTUM_METRONOME: 24,
  SHIP_IN_A_BOTTLE: 25,
  TACHYON_DEFLECTOR: 26,
  INTERSTELLAR_COMPASS: 27,
  DILITHIUM_MONOCLE: 28,
  TITANIUM_ACTUATOR: 29,
  MERCURYS_LENS: 30,
  DILITHIUM_STONE: 31,
  SHELL_STONE: 32,
  LUNAR_STONE: 33,
  SOUL_STONE: 34,
  DRONE_PARTS: 35,
  QUANTUM_STONE: 36,
  TERRA_STONE: 37,
  LIFE_STONE: 38,
  PROPHECY_STONE: 39,
  CLARITY_STONE: 40,
  CELESTIAL_BRONZE: 41,
  LALANDE_HIDE: 42,
  SOLAR_TITANIUM: 43,
  DILITHIUM_STONE_FRAGMENT: 44,
  SHELL_STONE_FRAGMENT: 45,
  LUNAR_STONE_FRAGMENT: 46,
  SOUL_STONE_FRAGMENT: 47,
  PROPHECY_STONE_FRAGMENT: 48,
  QUANTUM_STONE_FRAGMENT: 49,
  TERRA_STONE_FRAGMENT: 50,
  LIFE_STONE_FRAGMENT: 51,
  CLARITY_STONE_FRAGMENT: 52,
  UNKNOWN: 65533
};

/**
 * @enum {number}
 */
proto.Artifact.Level = {
  INFERIOR: 0,
  LESSER: 1,
  NORMAL: 2,
  GREATER: 3,
  SUPERIOR: 4
};

/**
 * @enum {number}
 */
proto.Artifact.Rarity = {
  COMMON: 0,
  RARE: 1,
  EPIC: 2,
  LEGENDARY: 3
};

/**
 * optional Name name = 1;
 * @return {!proto.Artifact.Name}
 */
proto.Artifact.prototype.getName = function () {
  return /** @type {!proto.Artifact.Name} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Artifact.Name} value
 * @return {!proto.Artifact} returns this
 */
proto.Artifact.prototype.setName = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Level level = 2;
 * @return {!proto.Artifact.Level}
 */
proto.Artifact.prototype.getLevel = function () {
  return /** @type {!proto.Artifact.Level} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.Artifact.Level} value
 * @return {!proto.Artifact} returns this
 */
proto.Artifact.prototype.setLevel = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Rarity rarity = 3;
 * @return {!proto.Artifact.Rarity}
 */
proto.Artifact.prototype.getRarity = function () {
  return /** @type {!proto.Artifact.Rarity} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Artifact.Rarity} value
 * @return {!proto.Artifact} returns this
 */
proto.Artifact.prototype.setRarity = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Egg egg = 4;
 * @return {!proto.Egg}
 */
proto.Artifact.prototype.getEgg = function () {
  return /** @type {!proto.Egg} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.Egg} value
 * @return {!proto.Artifact} returns this
 */
proto.Artifact.prototype.setEgg = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CompleteArtifact.repeatedFields_ = [2];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CompleteArtifact.prototype.toObject = function (opt_includeInstance) {
    return proto.CompleteArtifact.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CompleteArtifact} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CompleteArtifact.toObject = function (includeInstance, msg) {
    var f, obj = {
      artifactBase: (f = msg.getArtifactBase()) && proto.Artifact.toObject(includeInstance, f),
      stonesList: jspb.Message.toObjectList(msg.getStonesList(),
          proto.Artifact.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CompleteArtifact}
 */
proto.CompleteArtifact.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CompleteArtifact;
  return proto.CompleteArtifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CompleteArtifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CompleteArtifact}
 */
proto.CompleteArtifact.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.setArtifactBase(value);
        break;
      case 2:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.addStones(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CompleteArtifact.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CompleteArtifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CompleteArtifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CompleteArtifact.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getArtifactBase();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getStonesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        2,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional Artifact artifact_base = 1;
 * @return {?proto.Artifact}
 */
proto.CompleteArtifact.prototype.getArtifactBase = function () {
  return /** @type{?proto.Artifact} */ (
      jspb.Message.getWrapperField(this, proto.Artifact, 1));
};


/**
 * @param {?proto.Artifact|undefined} value
 * @return {!proto.CompleteArtifact} returns this
 */
proto.CompleteArtifact.prototype.setArtifactBase = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CompleteArtifact} returns this
 */
proto.CompleteArtifact.prototype.clearArtifactBase = function () {
  return this.setArtifactBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CompleteArtifact.prototype.hasArtifactBase = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Artifact stones = 2;
 * @return {!Array<!proto.Artifact>}
 */
proto.CompleteArtifact.prototype.getStonesList = function () {
  return /** @type{!Array<!proto.Artifact>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Artifact, 2));
};


/**
 * @param {!Array<!proto.Artifact>} value
 * @return {!proto.CompleteArtifact} returns this
 */
proto.CompleteArtifact.prototype.setStonesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Artifact}
 */
proto.CompleteArtifact.prototype.addStones = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CompleteArtifact} returns this
 */
proto.CompleteArtifact.prototype.clearStonesList = function () {
  return this.setStonesList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactInventoryItem.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactInventoryItem.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactInventoryItem} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactInventoryItem.toObject = function (includeInstance, msg) {
    var f, obj = {
      itemId: jspb.Message.getFieldWithDefault(msg, 1, 0),
      artifact: (f = msg.getArtifact()) && proto.CompleteArtifact.toObject(includeInstance, f),
      quantity: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      serverId: jspb.Message.getFieldWithDefault(msg, 4, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactInventoryItem}
 */
proto.ArtifactInventoryItem.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactInventoryItem;
  return proto.ArtifactInventoryItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactInventoryItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactInventoryItem}
 */
proto.ArtifactInventoryItem.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setItemId(value);
        break;
      case 2:
        var value = new proto.CompleteArtifact;
        reader.readMessage(value, proto.CompleteArtifact.deserializeBinaryFromReader);
        msg.setArtifact(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setQuantity(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setServerId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactInventoryItem.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactInventoryItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactInventoryItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactInventoryItem.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f !== 0) {
    writer.writeUint64(
        1,
        f
    );
  }
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
        2,
        f,
        proto.CompleteArtifact.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getServerId();
  if (f.length > 0) {
    writer.writeString(
        4,
        f
    );
  }
};


/**
 * optional uint64 item_id = 1;
 * @return {number}
 */
proto.ArtifactInventoryItem.prototype.getItemId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactInventoryItem} returns this
 */
proto.ArtifactInventoryItem.prototype.setItemId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CompleteArtifact artifact = 2;
 * @return {?proto.CompleteArtifact}
 */
proto.ArtifactInventoryItem.prototype.getArtifact = function () {
  return /** @type{?proto.CompleteArtifact} */ (
      jspb.Message.getWrapperField(this, proto.CompleteArtifact, 2));
};


/**
 * @param {?proto.CompleteArtifact|undefined} value
 * @return {!proto.ArtifactInventoryItem} returns this
 */
proto.ArtifactInventoryItem.prototype.setArtifact = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ArtifactInventoryItem} returns this
 */
proto.ArtifactInventoryItem.prototype.clearArtifact = function () {
  return this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ArtifactInventoryItem.prototype.hasArtifact = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double quantity = 3;
 * @return {number}
 */
proto.ArtifactInventoryItem.prototype.getQuantity = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactInventoryItem} returns this
 */
proto.ArtifactInventoryItem.prototype.setQuantity = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string server_id = 4;
 * @return {string}
 */
proto.ArtifactInventoryItem.prototype.getServerId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ArtifactInventoryItem} returns this
 */
proto.ArtifactInventoryItem.prototype.setServerId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.InventorySlot.prototype.toObject = function (opt_includeInstance) {
    return proto.InventorySlot.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.InventorySlot} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.InventorySlot.toObject = function (includeInstance, msg) {
    var f, obj = {
      occupied: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      itemId: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.InventorySlot}
 */
proto.InventorySlot.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.InventorySlot;
  return proto.InventorySlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.InventorySlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.InventorySlot}
 */
proto.InventorySlot.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setOccupied(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setItemId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.InventorySlot.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.InventorySlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.InventorySlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.InventorySlot.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getOccupied();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getItemId();
  if (f !== 0) {
    writer.writeUint32(
        2,
        f
    );
  }
};


/**
 * optional bool occupied = 1;
 * @return {boolean}
 */
proto.InventorySlot.prototype.getOccupied = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.InventorySlot} returns this
 */
proto.InventorySlot.prototype.setOccupied = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 item_id = 2;
 * @return {number}
 */
proto.InventorySlot.prototype.getItemId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.InventorySlot} returns this
 */
proto.InventorySlot.prototype.setItemId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsConfigurationRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsConfigurationRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsConfigurationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsConfigurationRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      clientVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
      requestInfo: (f = msg.getRequestInfo()) && proto.BasicRequestInfo.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsConfigurationRequest}
 */
proto.ArtifactsConfigurationRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsConfigurationRequest;
  return proto.ArtifactsConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsConfigurationRequest}
 */
proto.ArtifactsConfigurationRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setClientVersion(value);
        break;
      case 2:
        var value = new proto.BasicRequestInfo;
        reader.readMessage(value, proto.BasicRequestInfo.deserializeBinaryFromReader);
        msg.setRequestInfo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsConfigurationRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsConfigurationRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getClientVersion();
  if (f !== 0) {
    writer.writeUint32(
        1,
        f
    );
  }
  f = message.getRequestInfo();
  if (f != null) {
    writer.writeMessage(
        2,
        f,
        proto.BasicRequestInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 client_version = 1;
 * @return {number}
 */
proto.ArtifactsConfigurationRequest.prototype.getClientVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfigurationRequest} returns this
 */
proto.ArtifactsConfigurationRequest.prototype.setClientVersion = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BasicRequestInfo request_info = 2;
 * @return {?proto.BasicRequestInfo}
 */
proto.ArtifactsConfigurationRequest.prototype.getRequestInfo = function () {
  return /** @type{?proto.BasicRequestInfo} */ (
      jspb.Message.getWrapperField(this, proto.BasicRequestInfo, 2));
};


/**
 * @param {?proto.BasicRequestInfo|undefined} value
 * @return {!proto.ArtifactsConfigurationRequest} returns this
 */
proto.ArtifactsConfigurationRequest.prototype.setRequestInfo = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ArtifactsConfigurationRequest} returns this
 */
proto.ArtifactsConfigurationRequest.prototype.clearRequestInfo = function () {
  return this.setRequestInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ArtifactsConfigurationRequest.prototype.hasRequestInfo = function () {
  return jspb.Message.getField(this, 2) != null;
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsConfigurationResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsConfigurationResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsConfigurationResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsConfigurationResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      artifactsConfiguration: (f = msg.getArtifactsConfiguration()) && proto.ArtifactsConfiguration.toObject(includeInstance, f),
      checksum: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsConfigurationResponse}
 */
proto.ArtifactsConfigurationResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsConfigurationResponse;
  return proto.ArtifactsConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsConfigurationResponse}
 */
proto.ArtifactsConfigurationResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.ArtifactsConfiguration;
        reader.readMessage(value, proto.ArtifactsConfiguration.deserializeBinaryFromReader);
        msg.setArtifactsConfiguration(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setChecksum(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsConfigurationResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsConfigurationResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getArtifactsConfiguration();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.ArtifactsConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getChecksum();
  if (f.length > 0) {
    writer.writeString(
        2,
        f
    );
  }
};


/**
 * optional ArtifactsConfiguration artifacts_configuration = 1;
 * @return {?proto.ArtifactsConfiguration}
 */
proto.ArtifactsConfigurationResponse.prototype.getArtifactsConfiguration = function () {
  return /** @type{?proto.ArtifactsConfiguration} */ (
      jspb.Message.getWrapperField(this, proto.ArtifactsConfiguration, 1));
};


/**
 * @param {?proto.ArtifactsConfiguration|undefined} value
 * @return {!proto.ArtifactsConfigurationResponse} returns this
 */
proto.ArtifactsConfigurationResponse.prototype.setArtifactsConfiguration = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ArtifactsConfigurationResponse} returns this
 */
proto.ArtifactsConfigurationResponse.prototype.clearArtifactsConfiguration = function () {
  return this.setArtifactsConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ArtifactsConfigurationResponse.prototype.hasArtifactsConfiguration = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string checksum = 2;
 * @return {string}
 */
proto.ArtifactsConfigurationResponse.prototype.getChecksum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ArtifactsConfigurationResponse} returns this
 */
proto.ArtifactsConfigurationResponse.prototype.setChecksum = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ArtifactsConfiguration.repeatedFields_ = [1, 2];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsConfiguration.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsConfiguration.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsConfiguration} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsConfiguration.toObject = function (includeInstance, msg) {
    var f, obj = {
      missionParametersList: jspb.Message.toObjectList(msg.getMissionParametersList(),
          proto.ArtifactsConfiguration.MissionParameters.toObject, includeInstance),
      artifactParametersList: jspb.Message.toObjectList(msg.getArtifactParametersList(),
          proto.ArtifactsConfiguration.ArtifactParameters.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsConfiguration}
 */
proto.ArtifactsConfiguration.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsConfiguration;
  return proto.ArtifactsConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsConfiguration}
 */
proto.ArtifactsConfiguration.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.ArtifactsConfiguration.MissionParameters;
        reader.readMessage(value, proto.ArtifactsConfiguration.MissionParameters.deserializeBinaryFromReader);
        msg.addMissionParameters(value);
        break;
      case 2:
        var value = new proto.ArtifactsConfiguration.ArtifactParameters;
        reader.readMessage(value, proto.ArtifactsConfiguration.ArtifactParameters.deserializeBinaryFromReader);
        msg.addArtifactParameters(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsConfiguration.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsConfiguration.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMissionParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.ArtifactsConfiguration.MissionParameters.serializeBinaryToWriter
    );
  }
  f = message.getArtifactParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        2,
        f,
        proto.ArtifactsConfiguration.ArtifactParameters.serializeBinaryToWriter
    );
  }
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ArtifactsConfiguration.MissionParameters.repeatedFields_ = [3];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsConfiguration.MissionParameters.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsConfiguration.MissionParameters.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsConfiguration.MissionParameters} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsConfiguration.MissionParameters.toObject = function (includeInstance, msg) {
    var f, obj = {
      ship: jspb.Message.getFieldWithDefault(msg, 1, 0),
      durationsList: jspb.Message.toObjectList(msg.getDurationsList(),
          proto.ArtifactsConfiguration.MissionParameters.Duration.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsConfiguration.MissionParameters}
 */
proto.ArtifactsConfiguration.MissionParameters.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsConfiguration.MissionParameters;
  return proto.ArtifactsConfiguration.MissionParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsConfiguration.MissionParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsConfiguration.MissionParameters}
 */
proto.ArtifactsConfiguration.MissionParameters.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Mission.Spaceship} */ (reader.readEnum());
        msg.setShip(value);
        break;
      case 3:
        var value = new proto.ArtifactsConfiguration.MissionParameters.Duration;
        reader.readMessage(value, proto.ArtifactsConfiguration.MissionParameters.Duration.deserializeBinaryFromReader);
        msg.addDurations(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsConfiguration.MissionParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsConfiguration.MissionParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsConfiguration.MissionParameters.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getShip();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getDurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        3,
        f,
        proto.ArtifactsConfiguration.MissionParameters.Duration.serializeBinaryToWriter
    );
  }
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsConfiguration.MissionParameters.Duration.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsConfiguration.MissionParameters.Duration} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsConfiguration.MissionParameters.Duration.toObject = function (includeInstance, msg) {
    var f, obj = {
      durationType: jspb.Message.getFieldWithDefault(msg, 1, 0),
      seconds: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      quality: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      minQuality: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      maxQuality: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      capacity: jspb.Message.getFieldWithDefault(msg, 6, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsConfiguration.MissionParameters.Duration;
  return proto.ArtifactsConfiguration.MissionParameters.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsConfiguration.MissionParameters.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Mission.DurationType} */ (reader.readEnum());
        msg.setDurationType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setSeconds(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setQuality(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setMinQuality(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setMaxQuality(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCapacity(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsConfiguration.MissionParameters.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsConfiguration.MissionParameters.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getDurationType();
  if (f !== 0.0) {
    writer.writeEnum(
        1,
        f
    );
  }
  f = message.getSeconds();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getQuality();
  if (f !== 0.0) {
    writer.writeFloat(
        3,
        f
    );
  }
  f = message.getMinQuality();
  if (f !== 0.0) {
    writer.writeFloat(
        4,
        f
    );
  }
  f = message.getMaxQuality();
  if (f !== 0.0) {
    writer.writeFloat(
        5,
        f
    );
  }
  f = message.getCapacity();
  if (f !== 0) {
    writer.writeUint32(
        6,
        f
    );
  }
};


/**
 * optional Mission.DurationType duration_type = 1;
 * @return {!proto.Mission.DurationType}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.getDurationType = function () {
  return /** @type {!proto.Mission.DurationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Mission.DurationType} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.setDurationType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double seconds = 2;
 * @return {number}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.getSeconds = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.setSeconds = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float quality = 3;
 * @return {number}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.getQuality = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.setQuality = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float min_quality = 4;
 * @return {number}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.getMinQuality = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.setMinQuality = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float max_quality = 5;
 * @return {number}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.getMaxQuality = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.setMaxQuality = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint32 capacity = 6;
 * @return {number}
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.getCapacity = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.Duration.prototype.setCapacity = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Mission.Spaceship ship = 1;
 * @return {!proto.Mission.Spaceship}
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.getShip = function () {
  return /** @type {!proto.Mission.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Mission.Spaceship} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.setShip = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Duration durations = 3;
 * @return {!Array<!proto.ArtifactsConfiguration.MissionParameters.Duration>}
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.getDurationsList = function () {
  return /** @type{!Array<!proto.ArtifactsConfiguration.MissionParameters.Duration>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsConfiguration.MissionParameters.Duration, 3));
};


/**
 * @param {!Array<!proto.ArtifactsConfiguration.MissionParameters.Duration>} value
 * @return {!proto.ArtifactsConfiguration.MissionParameters} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.setDurationsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ArtifactsConfiguration.MissionParameters.Duration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsConfiguration.MissionParameters.Duration}
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.addDurations = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ArtifactsConfiguration.MissionParameters.Duration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsConfiguration.MissionParameters} returns this
 */
proto.ArtifactsConfiguration.MissionParameters.prototype.clearDurationsList = function () {
  return this.setDurationsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsConfiguration.ArtifactParameters.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsConfiguration.ArtifactParameters.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsConfiguration.ArtifactParameters} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsConfiguration.ArtifactParameters.toObject = function (includeInstance, msg) {
    var f, obj = {
      artifact: (f = msg.getArtifact()) && proto.Artifact.toObject(includeInstance, f),
      baseQuality: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      value: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      oddsMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      craftingPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      craftingPriceLow: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      craftingPriceDomain: jspb.Message.getFieldWithDefault(msg, 7, 0),
      craftingPriceCurve: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters}
 */
proto.ArtifactsConfiguration.ArtifactParameters.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsConfiguration.ArtifactParameters;
  return proto.ArtifactsConfiguration.ArtifactParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsConfiguration.ArtifactParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters}
 */
proto.ArtifactsConfiguration.ArtifactParameters.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.setArtifact(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setBaseQuality(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setValue(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setOddsMultiplier(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCraftingPrice(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCraftingPriceLow(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCraftingPriceDomain(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCraftingPriceCurve(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsConfiguration.ArtifactParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsConfiguration.ArtifactParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsConfiguration.ArtifactParameters.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getBaseQuality();
  if (f !== 0.0) {
    writer.writeDouble(
        2,
        f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
        3,
        f
    );
  }
  f = message.getOddsMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
        4,
        f
    );
  }
  f = message.getCraftingPrice();
  if (f !== 0.0) {
    writer.writeDouble(
        5,
        f
    );
  }
  f = message.getCraftingPriceLow();
  if (f !== 0.0) {
    writer.writeDouble(
        6,
        f
    );
  }
  f = message.getCraftingPriceDomain();
  if (f !== 0) {
    writer.writeUint32(
        7,
        f
    );
  }
  f = message.getCraftingPriceCurve();
  if (f !== 0.0) {
    writer.writeDouble(
        8,
        f
    );
  }
};


/**
 * optional Artifact artifact = 1;
 * @return {?proto.Artifact}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getArtifact = function () {
  return /** @type{?proto.Artifact} */ (
      jspb.Message.getWrapperField(this, proto.Artifact, 1));
};


/**
 * @param {?proto.Artifact|undefined} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setArtifact = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.clearArtifact = function () {
  return this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.hasArtifact = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double base_quality = 2;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getBaseQuality = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setBaseQuality = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double value = 3;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getValue = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setValue = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double odds_multiplier = 4;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getOddsMultiplier = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setOddsMultiplier = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double crafting_price = 5;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getCraftingPrice = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setCraftingPrice = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double crafting_price_low = 6;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getCraftingPriceLow = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setCraftingPriceLow = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional uint32 crafting_price_domain = 7;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getCraftingPriceDomain = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setCraftingPriceDomain = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double crafting_price_curve = 8;
 * @return {number}
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.getCraftingPriceCurve = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters} returns this
 */
proto.ArtifactsConfiguration.ArtifactParameters.prototype.setCraftingPriceCurve = function (value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * repeated MissionParameters mission_parameters = 1;
 * @return {!Array<!proto.ArtifactsConfiguration.MissionParameters>}
 */
proto.ArtifactsConfiguration.prototype.getMissionParametersList = function () {
  return /** @type{!Array<!proto.ArtifactsConfiguration.MissionParameters>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsConfiguration.MissionParameters, 1));
};


/**
 * @param {!Array<!proto.ArtifactsConfiguration.MissionParameters>} value
 * @return {!proto.ArtifactsConfiguration} returns this
 */
proto.ArtifactsConfiguration.prototype.setMissionParametersList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ArtifactsConfiguration.MissionParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsConfiguration.MissionParameters}
 */
proto.ArtifactsConfiguration.prototype.addMissionParameters = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ArtifactsConfiguration.MissionParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsConfiguration} returns this
 */
proto.ArtifactsConfiguration.prototype.clearMissionParametersList = function () {
  return this.setMissionParametersList([]);
};


/**
 * repeated ArtifactParameters artifact_parameters = 2;
 * @return {!Array<!proto.ArtifactsConfiguration.ArtifactParameters>}
 */
proto.ArtifactsConfiguration.prototype.getArtifactParametersList = function () {
  return /** @type{!Array<!proto.ArtifactsConfiguration.ArtifactParameters>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsConfiguration.ArtifactParameters, 2));
};


/**
 * @param {!Array<!proto.ArtifactsConfiguration.ArtifactParameters>} value
 * @return {!proto.ArtifactsConfiguration} returns this
 */
proto.ArtifactsConfiguration.prototype.setArtifactParametersList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ArtifactsConfiguration.ArtifactParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsConfiguration.ArtifactParameters}
 */
proto.ArtifactsConfiguration.prototype.addArtifactParameters = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ArtifactsConfiguration.ArtifactParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsConfiguration} returns this
 */
proto.ArtifactsConfiguration.prototype.clearArtifactParametersList = function () {
  return this.setArtifactParametersList([]);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ArtifactsDatabase.repeatedFields_ = [1, 3, 4, 5, 7, 8, 9, 10, 11];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsDatabase.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsDatabase.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsDatabase} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsDatabase.toObject = function (includeInstance, msg) {
    var f, obj = {
      inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
          proto.ArtifactInventoryItem.toObject, includeInstance),
      itemSequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
      inventorySlotsList: jspb.Message.toObjectList(msg.getInventorySlotsList(),
          proto.InventorySlot.toObject, includeInstance),
      missionsList: jspb.Message.toObjectList(msg.getMissionsList(),
          proto.Mission.toObject, includeInstance),
      archivedMissionsList: jspb.Message.toObjectList(msg.getArchivedMissionsList(),
          proto.Mission.toObject, includeInstance),
      activeArtifactsList: jspb.Message.toObjectList(msg.getActiveArtifactsList(),
          proto.ArtifactsDatabase.ActiveArtifactSlot.toObject, includeInstance),
      discoveredArtifactsList: jspb.Message.toObjectList(msg.getDiscoveredArtifactsList(),
          proto.Artifact.toObject, includeInstance),
      craftableArtifactsList: jspb.Message.toObjectList(msg.getCraftableArtifactsList(),
          proto.ArtifactsDatabase.CraftableArtifact.toObject, includeInstance),
      craftingCountsList: jspb.Message.toObjectList(msg.getCraftingCountsList(),
          proto.ArtifactsDatabase.CraftableArtifact.toObject, includeInstance),
      activeArtifactSetsList: jspb.Message.toObjectList(msg.getActiveArtifactSetsList(),
          proto.ArtifactsDatabase.ActiveArtifactSet.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsDatabase}
 */
proto.ArtifactsDatabase.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsDatabase;
  return proto.ArtifactsDatabase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsDatabase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsDatabase}
 */
proto.ArtifactsDatabase.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.ArtifactInventoryItem;
        reader.readMessage(value, proto.ArtifactInventoryItem.deserializeBinaryFromReader);
        msg.addInventoryItems(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setItemSequence(value);
        break;
      case 3:
        var value = new proto.InventorySlot;
        reader.readMessage(value, proto.InventorySlot.deserializeBinaryFromReader);
        msg.addInventorySlots(value);
        break;
      case 4:
        var value = new proto.Mission;
        reader.readMessage(value, proto.Mission.deserializeBinaryFromReader);
        msg.addMissions(value);
        break;
      case 5:
        var value = new proto.Mission;
        reader.readMessage(value, proto.Mission.deserializeBinaryFromReader);
        msg.addArchivedMissions(value);
        break;
      case 7:
        var value = new proto.ArtifactsDatabase.ActiveArtifactSlot;
        reader.readMessage(value, proto.ArtifactsDatabase.ActiveArtifactSlot.deserializeBinaryFromReader);
        msg.addActiveArtifacts(value);
        break;
      case 8:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.addDiscoveredArtifacts(value);
        break;
      case 9:
        var value = new proto.ArtifactsDatabase.CraftableArtifact;
        reader.readMessage(value, proto.ArtifactsDatabase.CraftableArtifact.deserializeBinaryFromReader);
        msg.addCraftableArtifacts(value);
        break;
      case 10:
        var value = new proto.ArtifactsDatabase.CraftableArtifact;
        reader.readMessage(value, proto.ArtifactsDatabase.CraftableArtifact.deserializeBinaryFromReader);
        msg.addCraftingCounts(value);
        break;
      case 11:
        var value = new proto.ArtifactsDatabase.ActiveArtifactSet;
        reader.readMessage(value, proto.ArtifactsDatabase.ActiveArtifactSet.deserializeBinaryFromReader);
        msg.addActiveArtifactSets(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsDatabase.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsDatabase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsDatabase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsDatabase.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInventoryItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
  f = message.getItemSequence();
  if (f !== 0) {
    writer.writeUint64(
        2,
        f
    );
  }
  f = message.getInventorySlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        3,
        f,
        proto.InventorySlot.serializeBinaryToWriter
    );
  }
  f = message.getMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        4,
        f,
        proto.Mission.serializeBinaryToWriter
    );
  }
  f = message.getArchivedMissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        5,
        f,
        proto.Mission.serializeBinaryToWriter
    );
  }
  f = message.getActiveArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        7,
        f,
        proto.ArtifactsDatabase.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
  f = message.getDiscoveredArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        8,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getCraftableArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        9,
        f,
        proto.ArtifactsDatabase.CraftableArtifact.serializeBinaryToWriter
    );
  }
  f = message.getCraftingCountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        10,
        f,
        proto.ArtifactsDatabase.CraftableArtifact.serializeBinaryToWriter
    );
  }
  f = message.getActiveArtifactSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        11,
        f,
        proto.ArtifactsDatabase.ActiveArtifactSet.serializeBinaryToWriter
    );
  }
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsDatabase.ActiveArtifactSlot.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsDatabase.ActiveArtifactSlot.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsDatabase.ActiveArtifactSlot} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsDatabase.ActiveArtifactSlot.toObject = function (includeInstance, msg) {
    var f, obj = {
      occupied: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      itemId: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSlot}
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsDatabase.ActiveArtifactSlot;
  return proto.ArtifactsDatabase.ActiveArtifactSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSlot}
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setOccupied(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setItemId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsDatabase.ActiveArtifactSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getOccupied();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getItemId();
  if (f !== 0) {
    writer.writeUint64(
        2,
        f
    );
  }
};


/**
 * optional bool occupied = 1;
 * @return {boolean}
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.prototype.getOccupied = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSlot} returns this
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.prototype.setOccupied = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 item_id = 2;
 * @return {number}
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.prototype.getItemId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSlot} returns this
 */
proto.ArtifactsDatabase.ActiveArtifactSlot.prototype.setItemId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ArtifactsDatabase.ActiveArtifactSet.repeatedFields_ = [1];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsDatabase.ActiveArtifactSet.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsDatabase.ActiveArtifactSet.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsDatabase.ActiveArtifactSet} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsDatabase.ActiveArtifactSet.toObject = function (includeInstance, msg) {
    var f, obj = {
      slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
          proto.ArtifactsDatabase.ActiveArtifactSlot.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSet}
 */
proto.ArtifactsDatabase.ActiveArtifactSet.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsDatabase.ActiveArtifactSet;
  return proto.ArtifactsDatabase.ActiveArtifactSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSet}
 */
proto.ArtifactsDatabase.ActiveArtifactSet.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.ArtifactsDatabase.ActiveArtifactSlot;
        reader.readMessage(value, proto.ArtifactsDatabase.ActiveArtifactSlot.deserializeBinaryFromReader);
        msg.addSlots(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsDatabase.ActiveArtifactSet.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsDatabase.ActiveArtifactSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsDatabase.ActiveArtifactSet.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.ArtifactsDatabase.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ActiveArtifactSlot slots = 1;
 * @return {!Array<!proto.ArtifactsDatabase.ActiveArtifactSlot>}
 */
proto.ArtifactsDatabase.ActiveArtifactSet.prototype.getSlotsList = function () {
  return /** @type{!Array<!proto.ArtifactsDatabase.ActiveArtifactSlot>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsDatabase.ActiveArtifactSlot, 1));
};


/**
 * @param {!Array<!proto.ArtifactsDatabase.ActiveArtifactSlot>} value
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSet} returns this
 */
proto.ArtifactsDatabase.ActiveArtifactSet.prototype.setSlotsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSlot}
 */
proto.ArtifactsDatabase.ActiveArtifactSet.prototype.addSlots = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ArtifactsDatabase.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSet} returns this
 */
proto.ArtifactsDatabase.ActiveArtifactSet.prototype.clearSlotsList = function () {
  return this.setSlotsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ArtifactsDatabase.CraftableArtifact.prototype.toObject = function (opt_includeInstance) {
    return proto.ArtifactsDatabase.CraftableArtifact.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ArtifactsDatabase.CraftableArtifact} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ArtifactsDatabase.CraftableArtifact.toObject = function (includeInstance, msg) {
    var f, obj = {
      artifact: (f = msg.getArtifact()) && proto.Artifact.toObject(includeInstance, f),
      seen: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ArtifactsDatabase.CraftableArtifact}
 */
proto.ArtifactsDatabase.CraftableArtifact.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ArtifactsDatabase.CraftableArtifact;
  return proto.ArtifactsDatabase.CraftableArtifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ArtifactsDatabase.CraftableArtifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ArtifactsDatabase.CraftableArtifact}
 */
proto.ArtifactsDatabase.CraftableArtifact.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.setArtifact(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSeen(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ArtifactsDatabase.CraftableArtifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ArtifactsDatabase.CraftableArtifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ArtifactsDatabase.CraftableArtifact.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getSeen();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
};


/**
 * optional Artifact artifact = 1;
 * @return {?proto.Artifact}
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.getArtifact = function () {
  return /** @type{?proto.Artifact} */ (
      jspb.Message.getWrapperField(this, proto.Artifact, 1));
};


/**
 * @param {?proto.Artifact|undefined} value
 * @return {!proto.ArtifactsDatabase.CraftableArtifact} returns this
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.setArtifact = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ArtifactsDatabase.CraftableArtifact} returns this
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.clearArtifact = function () {
  return this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.hasArtifact = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool seen = 2;
 * @return {boolean}
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.getSeen = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ArtifactsDatabase.CraftableArtifact} returns this
 */
proto.ArtifactsDatabase.CraftableArtifact.prototype.setSeen = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated ArtifactInventoryItem inventory_items = 1;
 * @return {!Array<!proto.ArtifactInventoryItem>}
 */
proto.ArtifactsDatabase.prototype.getInventoryItemsList = function () {
  return /** @type{!Array<!proto.ArtifactInventoryItem>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactInventoryItem, 1));
};


/**
 * @param {!Array<!proto.ArtifactInventoryItem>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setInventoryItemsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ArtifactInventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactInventoryItem}
 */
proto.ArtifactsDatabase.prototype.addInventoryItems = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ArtifactInventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearInventoryItemsList = function () {
  return this.setInventoryItemsList([]);
};


/**
 * optional uint64 item_sequence = 2;
 * @return {number}
 */
proto.ArtifactsDatabase.prototype.getItemSequence = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setItemSequence = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated InventorySlot inventory_slots = 3;
 * @return {!Array<!proto.InventorySlot>}
 */
proto.ArtifactsDatabase.prototype.getInventorySlotsList = function () {
  return /** @type{!Array<!proto.InventorySlot>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.InventorySlot, 3));
};


/**
 * @param {!Array<!proto.InventorySlot>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setInventorySlotsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.InventorySlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.InventorySlot}
 */
proto.ArtifactsDatabase.prototype.addInventorySlots = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.InventorySlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearInventorySlotsList = function () {
  return this.setInventorySlotsList([]);
};


/**
 * repeated Mission missions = 4;
 * @return {!Array<!proto.Mission>}
 */
proto.ArtifactsDatabase.prototype.getMissionsList = function () {
  return /** @type{!Array<!proto.Mission>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Mission, 4));
};


/**
 * @param {!Array<!proto.Mission>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setMissionsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.Mission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Mission}
 */
proto.ArtifactsDatabase.prototype.addMissions = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Mission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearMissionsList = function () {
  return this.setMissionsList([]);
};


/**
 * repeated Mission archived_missions = 5;
 * @return {!Array<!proto.Mission>}
 */
proto.ArtifactsDatabase.prototype.getArchivedMissionsList = function () {
  return /** @type{!Array<!proto.Mission>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Mission, 5));
};


/**
 * @param {!Array<!proto.Mission>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setArchivedMissionsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.Mission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Mission}
 */
proto.ArtifactsDatabase.prototype.addArchivedMissions = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Mission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearArchivedMissionsList = function () {
  return this.setArchivedMissionsList([]);
};


/**
 * repeated ActiveArtifactSlot active_artifacts = 7;
 * @return {!Array<!proto.ArtifactsDatabase.ActiveArtifactSlot>}
 */
proto.ArtifactsDatabase.prototype.getActiveArtifactsList = function () {
  return /** @type{!Array<!proto.ArtifactsDatabase.ActiveArtifactSlot>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsDatabase.ActiveArtifactSlot, 7));
};


/**
 * @param {!Array<!proto.ArtifactsDatabase.ActiveArtifactSlot>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setActiveArtifactsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSlot}
 */
proto.ArtifactsDatabase.prototype.addActiveArtifacts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ArtifactsDatabase.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearActiveArtifactsList = function () {
  return this.setActiveArtifactsList([]);
};


/**
 * repeated Artifact discovered_artifacts = 8;
 * @return {!Array<!proto.Artifact>}
 */
proto.ArtifactsDatabase.prototype.getDiscoveredArtifactsList = function () {
  return /** @type{!Array<!proto.Artifact>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.Artifact, 8));
};


/**
 * @param {!Array<!proto.Artifact>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setDiscoveredArtifactsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Artifact}
 */
proto.ArtifactsDatabase.prototype.addDiscoveredArtifacts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearDiscoveredArtifactsList = function () {
  return this.setDiscoveredArtifactsList([]);
};


/**
 * repeated CraftableArtifact craftable_artifacts = 9;
 * @return {!Array<!proto.ArtifactsDatabase.CraftableArtifact>}
 */
proto.ArtifactsDatabase.prototype.getCraftableArtifactsList = function () {
  return /** @type{!Array<!proto.ArtifactsDatabase.CraftableArtifact>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsDatabase.CraftableArtifact, 9));
};


/**
 * @param {!Array<!proto.ArtifactsDatabase.CraftableArtifact>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setCraftableArtifactsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ArtifactsDatabase.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsDatabase.CraftableArtifact}
 */
proto.ArtifactsDatabase.prototype.addCraftableArtifacts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ArtifactsDatabase.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearCraftableArtifactsList = function () {
  return this.setCraftableArtifactsList([]);
};


/**
 * repeated CraftableArtifact crafting_counts = 10;
 * @return {!Array<!proto.ArtifactsDatabase.CraftableArtifact>}
 */
proto.ArtifactsDatabase.prototype.getCraftingCountsList = function () {
  return /** @type{!Array<!proto.ArtifactsDatabase.CraftableArtifact>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsDatabase.CraftableArtifact, 10));
};


/**
 * @param {!Array<!proto.ArtifactsDatabase.CraftableArtifact>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setCraftingCountsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.ArtifactsDatabase.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsDatabase.CraftableArtifact}
 */
proto.ArtifactsDatabase.prototype.addCraftingCounts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.ArtifactsDatabase.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearCraftingCountsList = function () {
  return this.setCraftingCountsList([]);
};


/**
 * repeated ActiveArtifactSet active_artifact_sets = 11;
 * @return {!Array<!proto.ArtifactsDatabase.ActiveArtifactSet>}
 */
proto.ArtifactsDatabase.prototype.getActiveArtifactSetsList = function () {
  return /** @type{!Array<!proto.ArtifactsDatabase.ActiveArtifactSet>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ArtifactsDatabase.ActiveArtifactSet, 11));
};


/**
 * @param {!Array<!proto.ArtifactsDatabase.ActiveArtifactSet>} value
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.setActiveArtifactSetsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ArtifactsDatabase.ActiveArtifactSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ArtifactsDatabase.ActiveArtifactSet}
 */
proto.ArtifactsDatabase.prototype.addActiveArtifactSets = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ArtifactsDatabase.ActiveArtifactSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ArtifactsDatabase} returns this
 */
proto.ArtifactsDatabase.prototype.clearActiveArtifactSetsList = function () {
  return this.setActiveArtifactSetsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ActiveArtifactSlot.prototype.toObject = function (opt_includeInstance) {
    return proto.ActiveArtifactSlot.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ActiveArtifactSlot} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ActiveArtifactSlot.toObject = function (includeInstance, msg) {
    var f, obj = {
      occupied: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      itemId: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ActiveArtifactSlot}
 */
proto.ActiveArtifactSlot.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ActiveArtifactSlot;
  return proto.ActiveArtifactSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ActiveArtifactSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ActiveArtifactSlot}
 */
proto.ActiveArtifactSlot.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setOccupied(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setItemId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ActiveArtifactSlot.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ActiveArtifactSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ActiveArtifactSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ActiveArtifactSlot.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getOccupied();
  if (f) {
    writer.writeBool(
        1,
        f
    );
  }
  f = message.getItemId();
  if (f !== 0) {
    writer.writeUint64(
        2,
        f
    );
  }
};


/**
 * optional bool occupied = 1;
 * @return {boolean}
 */
proto.ActiveArtifactSlot.prototype.getOccupied = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ActiveArtifactSlot} returns this
 */
proto.ActiveArtifactSlot.prototype.setOccupied = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 item_id = 2;
 * @return {number}
 */
proto.ActiveArtifactSlot.prototype.getItemId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ActiveArtifactSlot} returns this
 */
proto.ActiveArtifactSlot.prototype.setItemId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ActiveArtifactSet.repeatedFields_ = [1];


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ActiveArtifactSet.prototype.toObject = function (opt_includeInstance) {
    return proto.ActiveArtifactSet.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ActiveArtifactSet} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ActiveArtifactSet.toObject = function (includeInstance, msg) {
    var f, obj = {
      slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
          proto.ActiveArtifactSlot.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ActiveArtifactSet}
 */
proto.ActiveArtifactSet.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ActiveArtifactSet;
  return proto.ActiveArtifactSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ActiveArtifactSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ActiveArtifactSet}
 */
proto.ActiveArtifactSet.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.ActiveArtifactSlot;
        reader.readMessage(value, proto.ActiveArtifactSlot.deserializeBinaryFromReader);
        msg.addSlots(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ActiveArtifactSet.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ActiveArtifactSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ActiveArtifactSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ActiveArtifactSet.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
        1,
        f,
        proto.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ActiveArtifactSlot slots = 1;
 * @return {!Array<!proto.ActiveArtifactSlot>}
 */
proto.ActiveArtifactSet.prototype.getSlotsList = function () {
  return /** @type{!Array<!proto.ActiveArtifactSlot>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.ActiveArtifactSlot, 1));
};


/**
 * @param {!Array<!proto.ActiveArtifactSlot>} value
 * @return {!proto.ActiveArtifactSet} returns this
 */
proto.ActiveArtifactSet.prototype.setSlotsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ActiveArtifactSlot}
 */
proto.ActiveArtifactSet.prototype.addSlots = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ActiveArtifactSet} returns this
 */
proto.ActiveArtifactSet.prototype.clearSlotsList = function () {
  return this.setSlotsList([]);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.CraftableArtifact.prototype.toObject = function (opt_includeInstance) {
    return proto.CraftableArtifact.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.CraftableArtifact} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.CraftableArtifact.toObject = function (includeInstance, msg) {
    var f, obj = {
      artifact: (f = msg.getArtifact()) && proto.Artifact.toObject(includeInstance, f),
      seen: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      count: jspb.Message.getFieldWithDefault(msg, 3, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CraftableArtifact}
 */
proto.CraftableArtifact.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CraftableArtifact;
  return proto.CraftableArtifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CraftableArtifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CraftableArtifact}
 */
proto.CraftableArtifact.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.Artifact;
        reader.readMessage(value, proto.Artifact.deserializeBinaryFromReader);
        msg.setArtifact(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSeen(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CraftableArtifact.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.CraftableArtifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CraftableArtifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CraftableArtifact.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
        1,
        f,
        proto.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getSeen();
  if (f) {
    writer.writeBool(
        2,
        f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
        3,
        f
    );
  }
};


/**
 * optional Artifact artifact = 1;
 * @return {?proto.Artifact}
 */
proto.CraftableArtifact.prototype.getArtifact = function () {
  return /** @type{?proto.Artifact} */ (
      jspb.Message.getWrapperField(this, proto.Artifact, 1));
};


/**
 * @param {?proto.Artifact|undefined} value
 * @return {!proto.CraftableArtifact} returns this
 */
proto.CraftableArtifact.prototype.setArtifact = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CraftableArtifact} returns this
 */
proto.CraftableArtifact.prototype.clearArtifact = function () {
  return this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CraftableArtifact.prototype.hasArtifact = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool seen = 2;
 * @return {boolean}
 */
proto.CraftableArtifact.prototype.getSeen = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.CraftableArtifact} returns this
 */
proto.CraftableArtifact.prototype.setSeen = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.CraftableArtifact.prototype.getCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.CraftableArtifact} returns this
 */
proto.CraftableArtifact.prototype.setCount = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.ErrorCode = {
  NO_ERROR: 0,
  EXISTING_USER_W_GAMER_ID: 1,
  USER_NOT_FOUND: 2,
  BACKUP_CONFLICT: 3
};

/**
 * @enum {number}
 */
proto.Type = {
  ARTIFACT: 0,
  STONE: 1,
  INGREDIENT: 2,
  STONE_INGREDIENT: 3
};

/**
 * @enum {number}
 */
proto.Egg = {
  UNDEFINED_EGG: 0,
  EDIBLE: 1,
  SUPERFOOD: 2,
  MEDICAL: 3,
  ROCKET_FUEL: 4,
  SUPER_MATERIAL: 5,
  FUSION: 6,
  QUANTUM: 7,
  IMMORTALITY: 8,
  TACHYON: 9,
  GRAVITON: 10,
  DILITHIUM: 11,
  PRODIGY: 12,
  TERRAFORM: 13,
  ANTIMATTER: 14,
  DARK_MATTER: 15,
  AI: 16,
  NEBULA: 17,
  UNIVERSE: 18,
  ENLIGHTENMENT: 19,
  CHOCOLATE: 100,
  EASTER: 101,
  WATER_BALLOON: 102,
  FIREWORK: 103,
  PUMPKIN: 104,
  UNKNOWN_EGG: 65533
};

/**
 * @enum {number}
 */
proto.FarmType = {
  UNDEFINED_FARM_TYPE: 0,
  EMPTY: 1,
  HOME: 2,
  CONTRACT: 3
};

/**
 * @enum {number}
 */
proto.GoalType = {
  UNDEFINED_GOAL_TYPE: 0,
  EGGS_LAID: 1,
  UNKNOWN_GOAL_TYPE: 100
};

/**
 * @enum {number}
 */
proto.RewardType = {
  UNDEFINED_REWARD_TYPE: 0,
  CASH: 1,
  GOLDEN_EGGS: 2,
  SOUL_EGGS: 3,
  EGGS_OF_PROPHECY: 4,
  EPIC_RESEARCH_ITEM: 5,
  PIGGY_FILL: 6,
  PIGGY_MULTIPLIER: 7,
  PIGGY_LEVEL_BUMP: 8,
  BOOST: 9,
  BOOST_TOKEN: 10,
  UNKNOWN_REWARD_TYPE: 100
};

/**
 * @enum {number}
 */
proto.HabLevel = {
  COOP: 0,
  SHACK: 1,
  SUPER_SHACK: 2,
  SHORT_HOUSE: 3,
  THE_STANDARD: 4,
  LONG_HOUSE: 5,
  DOUBLE_DECKER: 6,
  WAREHOUSE: 7,
  CENTER: 8,
  BUNKER: 9,
  EGGKEA: 10,
  HAB_1000: 11,
  HANGAR: 12,
  TOWER: 13,
  HAB_10_000: 14,
  EGGTOPIA: 15,
  MONOLITH: 16,
  PLANET_PORTAL: 17,
  CHICKEN_UNIVERSE: 18,
  NO_HAB: 19
};

/**
 * @enum {number}
 */
proto.VehicleType = {
  TRIKE: 0,
  TRANSIT: 1,
  PICKUP: 2,
  VEHICLE_10_FOOT: 3,
  VEHICLE_24_FOOT: 4,
  SEMI: 5,
  DOUBLE_SEMI: 6,
  FUTURE_SEMI: 7,
  MEGA_SEMI: 8,
  HOVER_SEMI: 9,
  QUANTUM_TRANSPORTER: 10,
  HYPERLOOP_TRAIN: 11
};

/**
 * @enum {number}
 */
proto.TrophyLevel = {
  NO_TROPHY: 0,
  BRONZE: 1,
  SILVER: 2,
  GOLD: 3,
  PLATINUM: 4,
  DIAMOND: 5
};

/**
 * @enum {number}
 */
proto.League = {
  NORMAL: 0,
  ELITE: 1
};

goog.object.extend(exports, proto);
